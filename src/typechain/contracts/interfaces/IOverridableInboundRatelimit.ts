/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export type RateLimitExemptAddressStruct = {
  addr: AddressLike;
  isExempt: boolean;
};

export type RateLimitExemptAddressStructOutput = [
  addr: string,
  isExempt: boolean
] & { addr: string; isExempt: boolean };

export declare namespace RateLimiter {
  export type RateLimitConfigStruct = {
    dstEid: BigNumberish;
    limit: BigNumberish;
    window: BigNumberish;
  };

  export type RateLimitConfigStructOutput = [
    dstEid: bigint,
    limit: bigint,
    window: bigint
  ] & { dstEid: bigint; limit: bigint; window: bigint };
}

export interface IOverridableInboundRatelimitInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "exemptAddresses"
      | "guidOverrides"
      | "modifyOverridableGUIDs"
      | "modifyRateLimitExemptAddresses"
      | "setRateLimits"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "RateLimitOverrider_ModifiedAddress"
      | "RateLimitOverrider_ModifiedGUID"
      | "RateLimitUpdated"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "exemptAddresses",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "guidOverrides",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "modifyOverridableGUIDs",
    values: [BytesLike[], boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "modifyRateLimitExemptAddresses",
    values: [RateLimitExemptAddressStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setRateLimits",
    values: [RateLimiter.RateLimitConfigStruct[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "exemptAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "guidOverrides",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "modifyOverridableGUIDs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "modifyRateLimitExemptAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRateLimits",
    data: BytesLike
  ): Result;
}

export namespace RateLimitOverrider_ModifiedAddressEvent {
  export type InputTuple = [addresses: RateLimitExemptAddressStruct[]];
  export type OutputTuple = [addresses: RateLimitExemptAddressStructOutput[]];
  export interface OutputObject {
    addresses: RateLimitExemptAddressStructOutput[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RateLimitOverrider_ModifiedGUIDEvent {
  export type InputTuple = [guid: BytesLike[], canOverride: boolean];
  export type OutputTuple = [guid: string[], canOverride: boolean];
  export interface OutputObject {
    guid: string[];
    canOverride: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RateLimitUpdatedEvent {
  export type InputTuple = [newConfigs: RateLimiter.RateLimitConfigStruct[]];
  export type OutputTuple = [
    newConfigs: RateLimiter.RateLimitConfigStructOutput[]
  ];
  export interface OutputObject {
    newConfigs: RateLimiter.RateLimitConfigStructOutput[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IOverridableInboundRatelimit extends BaseContract {
  connect(runner?: ContractRunner | null): IOverridableInboundRatelimit;
  waitForDeployment(): Promise<this>;

  interface: IOverridableInboundRatelimitInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  exemptAddresses: TypedContractMethod<[addr: AddressLike], [boolean], "view">;

  guidOverrides: TypedContractMethod<[guid: BytesLike], [boolean], "view">;

  modifyOverridableGUIDs: TypedContractMethod<
    [guids: BytesLike[], canOverride: boolean],
    [void],
    "nonpayable"
  >;

  modifyRateLimitExemptAddresses: TypedContractMethod<
    [_exemptAddresses: RateLimitExemptAddressStruct[]],
    [void],
    "nonpayable"
  >;

  setRateLimits: TypedContractMethod<
    [rateLimitConfigs: RateLimiter.RateLimitConfigStruct[]],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "exemptAddresses"
  ): TypedContractMethod<[addr: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "guidOverrides"
  ): TypedContractMethod<[guid: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "modifyOverridableGUIDs"
  ): TypedContractMethod<
    [guids: BytesLike[], canOverride: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "modifyRateLimitExemptAddresses"
  ): TypedContractMethod<
    [_exemptAddresses: RateLimitExemptAddressStruct[]],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setRateLimits"
  ): TypedContractMethod<
    [rateLimitConfigs: RateLimiter.RateLimitConfigStruct[]],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "RateLimitOverrider_ModifiedAddress"
  ): TypedContractEvent<
    RateLimitOverrider_ModifiedAddressEvent.InputTuple,
    RateLimitOverrider_ModifiedAddressEvent.OutputTuple,
    RateLimitOverrider_ModifiedAddressEvent.OutputObject
  >;
  getEvent(
    key: "RateLimitOverrider_ModifiedGUID"
  ): TypedContractEvent<
    RateLimitOverrider_ModifiedGUIDEvent.InputTuple,
    RateLimitOverrider_ModifiedGUIDEvent.OutputTuple,
    RateLimitOverrider_ModifiedGUIDEvent.OutputObject
  >;
  getEvent(
    key: "RateLimitUpdated"
  ): TypedContractEvent<
    RateLimitUpdatedEvent.InputTuple,
    RateLimitUpdatedEvent.OutputTuple,
    RateLimitUpdatedEvent.OutputObject
  >;

  filters: {
    "RateLimitOverrider_ModifiedAddress(tuple[])": TypedContractEvent<
      RateLimitOverrider_ModifiedAddressEvent.InputTuple,
      RateLimitOverrider_ModifiedAddressEvent.OutputTuple,
      RateLimitOverrider_ModifiedAddressEvent.OutputObject
    >;
    RateLimitOverrider_ModifiedAddress: TypedContractEvent<
      RateLimitOverrider_ModifiedAddressEvent.InputTuple,
      RateLimitOverrider_ModifiedAddressEvent.OutputTuple,
      RateLimitOverrider_ModifiedAddressEvent.OutputObject
    >;

    "RateLimitOverrider_ModifiedGUID(bytes32[],bool)": TypedContractEvent<
      RateLimitOverrider_ModifiedGUIDEvent.InputTuple,
      RateLimitOverrider_ModifiedGUIDEvent.OutputTuple,
      RateLimitOverrider_ModifiedGUIDEvent.OutputObject
    >;
    RateLimitOverrider_ModifiedGUID: TypedContractEvent<
      RateLimitOverrider_ModifiedGUIDEvent.InputTuple,
      RateLimitOverrider_ModifiedGUIDEvent.OutputTuple,
      RateLimitOverrider_ModifiedGUIDEvent.OutputObject
    >;

    "RateLimitUpdated(tuple[])": TypedContractEvent<
      RateLimitUpdatedEvent.InputTuple,
      RateLimitUpdatedEvent.OutputTuple,
      RateLimitUpdatedEvent.OutputObject
    >;
    RateLimitUpdated: TypedContractEvent<
      RateLimitUpdatedEvent.InputTuple,
      RateLimitUpdatedEvent.OutputTuple,
      RateLimitUpdatedEvent.OutputObject
    >;
  };
}
