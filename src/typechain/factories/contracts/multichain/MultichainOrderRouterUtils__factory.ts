/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MultichainOrderRouterUtils,
  MultichainOrderRouterUtilsInterface,
} from "../../../contracts/multichain/MultichainOrderRouterUtils";

const _abi = [
  {
    inputs: [],
    name: "RelayPriceOutdated",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToPayOrderFee",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToPayOrderFeeFromCollateral",
    type: "error",
  },
];

const _bytecode =
  "0x61196a61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80637ba0967b1461003a575b600080fd5b81801561004657600080fd5b5061005a610055366004610fea565b61005c565b005b845160009073__$97f16f82bae4ac682deb2ea1417bfd757e$__906305d0f9ba908661008b60608a018a6110d7565b6100999060208101906110f7565b60405160e085901b6001600160e01b03191681526001600160a01b03938416600482015291831660248301529091166044820152606401602060405180830381865af41580156100ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610111919061111b565b905061012060608601866110d7565b6020013581106101305750610bcd565b855160405163fdfc26f360e01b815260009173__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9163fdfc26f39161016c918790600401611134565b600060405180830381865af4158015610189573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101b19190810190611383565b90506101bb610dc3565b826101c960608901896110d7565b602001356101d791906114f4565b81526101ed6101e883602001515190565b610bd4565b80610207575061020761020283602001515190565b610c2a565b156104ba57600061021d83602001516060015190565b905080156104b857815160009082116102365781610239565b82515b9050808360000181815161024d91906114f4565b90525089516040516001600160a01b039091169063e2a4853a9088906102a7906020016020808252601f908201527f494e495449414c5f434f4c4c41544552414c5f44454c54415f414d4f554e5400604082015260600190565b604051602081830303815290604052805190602001206040516020016102d7929190918252602082015260400190565b6040516020818303038152906040528051906020012083856102f991906114f4565b6040516001600160e01b031960e085901b168152600481019290925260248201526044016020604051808303816000875af115801561033c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610360919061111b565b5060a08a01516001600160a01b031663078d3b7961038160608c018c6110d7565b61038f9060208101906110f7565b6040808e015190516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052606401600060405180830381600087803b1580156103e357600080fd5b505af11580156103f7573d6000803e3d6000fd5b50508b5160208d015160408e015173__$97f16f82bae4ac682deb2ea1417bfd757e$__94506315ff6d2d935061043060608f018f6110d7565b61043e9060208101906110f7565b8d8d6040518763ffffffff1660e01b815260040161046196959493929190611507565b602060405180830381865af415801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a2919061111b565b5082516000036104b6575050505050610bcd565b505b505b6104c961020283602001515190565b156104e7576040516368fb0fed60e01b815260040160405180910390fd5b60006105546104f584515190565b845160a00151855160c00151604087015151604080516001600160a01b039586166020808301919091529486168183015292909416606083015215156080808301919091528351808303909101815260a0909101909252815191012090565b895160405163fdfc26f360e01b815291925060009173__$3d31b232fb363902662fbc281b11ab3357$__9163fdfc26f39161059491908690600401611134565b6101e060405180830381865af41580156105b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d6919061158d565b90506105e481516040015190565b6001600160a01b03166105fa60608b018b6110d7565b6106089060208101906110f7565b6001600160a01b03161461062f576040516368fb0fed60e01b815260040160405180910390fd5b602081015160400151606084018190528351111561066057604051636f13f31360e11b815260040160405180910390fd5b8251606084015161067f91610674916114f4565b602083015160400152565b89600001516001600160a01b031663e2a4853a836040516020016106c89060208082526011908201527010d3d31310551154905317d05353d55395607a1b604082015260600190565b604051602081830303815290604052805190602001206040516020016106f8929190918252602082015260400190565b604051602081830303815290604052805190602001208560000151866060015161072291906114f4565b6040516001600160e01b031960e085901b168152600481019290925260248201526044016020604051808303816000875af1158015610765573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610789919061111b565b50428a600001516001600160a01b031663bd02d0f56040516020016107d59060208082526013908201527252454c41595f4d41585f50524943455f41474560681b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161080991815260200190565b602060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a919061111b565b8b606001516001600160a01b031663f002606b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561088c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b0919061111b565b6108ba91906116a6565b10156108d95760405163140f309760e01b815260040160405180910390fd5b8951845160a0015160405163a8d8fff560e01b815273__$ff439aa65a80c9eec648f15db20b189505$__9263a8d8fff592610916926004016116b9565b608060405180830381865af4158015610933573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095791906116d3565b608084015260608a01518a516109f3919073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590610990895160a0015190565b6040518363ffffffff1660e01b81526004016109ad9291906116b9565b608060405180830381865af41580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee91906116d3565b610c4d565b60a084018190528a516080808d01519086015160405163d7e3321160e01b815273__$91a1a7f12f728c8759f4be979bae55555f$__9463d7e3321194610a479490939092889290600190819060040161177d565b60006040518083038186803b158015610a5f57600080fd5b505af4158015610a73573d6000803e3d6000fd5b50505050610a83845160a0015190565b6001600160a01b0316632fb12605610a9e60608c018c6110d7565b610aac9060208101906110f7565b60408d8101518751915160e085901b6001600160e01b03191681526001600160a01b03938416600482015292166024830152604482015260006064820152608401600060405180830381600087803b158015610b0757600080fd5b505af1158015610b1b573d6000803e3d6000fd5b50508b5160208d015160408e015173__$97f16f82bae4ac682deb2ea1417bfd757e$__94506315ff6d2d9350610b5460608f018f6110d7565b610b629060208101906110f7565b8d8d6040518763ffffffff1660e01b8152600401610b8596959493929190611507565b602060405180830381865af4158015610ba2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc6919061111b565b5050505050505b5050505050565b60006002826008811115610bea57610bea6118bc565b1480610c0757506003826008811115610c0557610c056118bc565b145b80610c24575060085b826008811115610c2257610c226118bc565b145b92915050565b600080826008811115610c3f57610c3f6118bc565b1480610c2457506001610c10565b610c55610e4b565b6040518060600160405280846001600160a01b0316635dcf719485602001516040518263ffffffff1660e01b8152600401610c9091906118d2565b6040805180830381865afa158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd091906118e6565b8152602001846001600160a01b0316635dcf719485604001516040518263ffffffff1660e01b8152600401610d0591906118d2565b6040805180830381865afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4591906118e6565b8152602001846001600160a01b0316635dcf719485606001516040518263ffffffff1660e01b8152600401610d7a91906118d2565b6040805180830381865afa158015610d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dba91906118e6565b90529392505050565b6040518060c0016040528060008152602001600081526020016000815260200160008152602001610e39604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b8152602001610e46610e4b565b905290565b6040518060600160405280610e5e610e74565b8152602001610e6b610e74565b8152602001610e465b604051806040016040528060008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610ec657610ec6610e8e565b60405290565b60405161018081016001600160401b0381118282101715610ec657610ec6610e8e565b604051608081016001600160401b0381118282101715610ec657610ec6610e8e565b60405161010081016001600160401b0381118282101715610ec657610ec6610e8e565b604051606081016001600160401b0381118282101715610ec657610ec6610e8e565b60405161016081016001600160401b0381118282101715610ec657610ec6610e8e565b604051601f8201601f191681016001600160401b0381118282101715610fa157610fa1610e8e565b604052919050565b6001600160a01b0381168114610fbe57600080fd5b50565b60006101008284031215610fd457600080fd5b50919050565b8035610fe581610fa9565b919050565b600080600080600085870361014081121561100457600080fd5b60c081121561101257600080fd5b5061101b610ea4565b863561102681610fa9565b8152602087013561103681610fa9565b6020820152604087013561104981610fa9565b6040820152606087013561105c81610fa9565b6060820152608087013561106f81610fa9565b608082015260a087013561108281610fa9565b60a0820152945060c08601356001600160401b038111156110a257600080fd5b6110ae88828901610fc1565b9450506110bd60e08701610fda565b949793965093946101008101359450610120013592915050565b60008235605e198336030181126110ed57600080fd5b9190910192915050565b60006020828403121561110957600080fd5b813561111481610fa9565b9392505050565b60006020828403121561112d57600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b8051610fe581610fa9565b60006001600160401b0382111561117157611171610e8e565b5060051b60200190565b600082601f83011261118c57600080fd5b815160206111a161119c83611158565b610f79565b82815260059290921b840181019181810190868411156111c057600080fd5b8286015b848110156111e45780516111d781610fa9565b83529183019183016111c4565b509695505050505050565b805160098110610fe557600080fd5b805160038110610fe557600080fd5b6000610180828403121561122057600080fd5b611228610ecc565b9050611233826111ef565b8152611241602083016111fe565b602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525061014080830151818301525061016080830151818301525092915050565b80518015158114610fe557600080fd5b6000608082840312156112da57600080fd5b6112e2610eef565b90506112ed826112b8565b81526112fb602083016112b8565b602082015261130c604083016112b8565b604082015261131d606083016112b8565b606082015292915050565b600082601f83011261133957600080fd5b8151602061134961119c83611158565b82815260059290921b8401810191818101908684111561136857600080fd5b8286015b848110156111e4578051835291830191830161136c565b60006020828403121561139557600080fd5b81516001600160401b03808211156113ac57600080fd5b9083019061024082860312156113c157600080fd5b6113c9610eef565b8251828111156113d857600080fd5b830161010081880312156113eb57600080fd5b6113f3610f11565b6113fc8261114d565b815261140a6020830161114d565b602082015261141b6040830161114d565b604082015261142c6060830161114d565b606082015261143d6080830161114d565b608082015261144e60a0830161114d565b60a082015261145f60c0830161114d565b60c082015260e08201518481111561147657600080fd5b6114828982850161117b565b60e083015250825250611498866020850161120d565b60208201526114ab866101a085016112c8565b6040820152610220830151828111156114c357600080fd5b6114cf87828601611328565b60608301525095945050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610c2457610c246114de565b6001600160a01b039687168152948616602086015292851660408501529084166060840152909216608082015260a081019190915260c00190565b60006020828403121561155457600080fd5b604051602081016001600160401b038111828210171561157657611576610e8e565b604052905080611585836112b8565b905292915050565b60008183036101e08112156115a157600080fd5b6115a9610f34565b60608212156115b757600080fd5b6115bf610f34565b84516115ca81610fa9565b815260208501516115da81610fa9565b602082015260408501516115ed81610fa9565b60408201528152610160605f19830181131561160857600080fd5b611610610f56565b9250606085015183526080850151602084015260a0850151604084015260c0850151606084015260e085015160808401526101008086015160a08501526101208087015160c08601526101408088015160e08701528388015183870152610180880151828701526101a08801518187015250505050816020820152611699856101c08601611542565b6040820152949350505050565b80820180821115610c2457610c246114de565b6001600160a01b0392831681529116602082015260400190565b6000608082840312156116e557600080fd5b6116ed610eef565b82516116f881610fa9565b8152602083015161170881610fa9565b6020820152604083015161171b81610fa9565b6040820152606083015161172e81610fa9565b60608201529392505050565b61174f82825180518252602090810151910152565b602081810151805160408501529081015160608401525060400151805160808301526020015160a090910152565b60006103a08201905060018060a01b03808a1683528089166020840152875181815116604085015281602082015116606085015281604082015116608085015250506020870151805160a0840152602081015160c0840152604081015160e08401526060810151610100818186015260808301519150610120828187015260a08401519250610140838188015260c085015161016088015260e0850151610180880152828501516101a0880152818501516101c0880152808501516101e0880152505050505060408701516118586102008401825115159052565b5085516001600160a01b0390811661022084015260208701518116610240840152604087015181166102608401526060870151166102808301526118a06102a083018661173a565b9215156103608201529015156103809091015295945050505050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0391909116815260200190565b6000604082840312156118f857600080fd5b604080519081016001600160401b038111828210171561191a5761191a610e8e565b60405282518152602092830151928101929092525091905056fea26469706673582212201ed2d5c68429ba015b7e6a0b0902197961a95d359afd0cfd795c38107ecc1e3364736f6c63430008140033";

type MultichainOrderRouterUtilsConstructorParams =
  | [
      linkLibraryAddresses: MultichainOrderRouterUtilsLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainOrderRouterUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MultichainOrderRouterUtils__factory extends ContractFactory {
  constructor(...args: MultichainOrderRouterUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MultichainOrderRouterUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MultichainOrderRouterUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$97f16f82bae4ac682deb2ea1417bfd757e\\$__", "g"),
      linkLibraryAddresses[
        "contracts/multichain/MultichainUtils.sol:MultichainUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3d31b232fb363902662fbc281b11ab3357\\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/PositionStoreUtils.sol:PositionStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff439aa65a80c9eec648f15db20b189505\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$91a1a7f12f728c8759f4be979bae55555f\\$__", "g"),
      linkLibraryAddresses["contracts/position/PositionUtils.sol:PositionUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainOrderRouterUtils> {
    return super.deploy(overrides || {}) as Promise<MultichainOrderRouterUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultichainOrderRouterUtils {
    return super.attach(address) as MultichainOrderRouterUtils;
  }
  override connect(signer: Signer): MultichainOrderRouterUtils__factory {
    return super.connect(signer) as MultichainOrderRouterUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainOrderRouterUtilsInterface {
    return new utils.Interface(_abi) as MultichainOrderRouterUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainOrderRouterUtils {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainOrderRouterUtils;
  }
}

export interface MultichainOrderRouterUtilsLibraryAddresses {
  ["contracts/multichain/MultichainUtils.sol:MultichainUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
  ["contracts/position/PositionStoreUtils.sol:PositionStoreUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
  ["contracts/position/PositionUtils.sol:PositionUtils"]: string;
}
