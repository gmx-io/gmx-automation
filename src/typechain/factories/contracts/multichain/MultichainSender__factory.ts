// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MultichainSender,
  MultichainSenderInterface,
} from "../../../contracts/multichain/MultichainSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_endpoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeProvided",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeRequired",
        type: "uint256",
      },
    ],
    name: "InsufficientFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDelegate",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEndpointCall",
    type: "error",
  },
  {
    inputs: [],
    name: "LzTokenUnavailable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
    ],
    name: "NoPeer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
    ],
    name: "NotEnoughNative",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
    ],
    name: "OnlyPeer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "peer",
        type: "bytes32",
      },
    ],
    name: "PeerSet",
    type: "event",
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [
      {
        internalType: "contract ILayerZeroEndpointV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oAppVersion",
    outputs: [
      {
        internalType: "uint64",
        name: "senderVersion",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "receiverVersion",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "eid",
        type: "uint32",
      },
    ],
    name: "peers",
    outputs: [
      {
        internalType: "bytes32",
        name: "peer",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "dstEid",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "options",
        type: "bytes",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "dstEid",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "options",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_delegate",
        type: "address",
      },
    ],
    name: "setDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_eid",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_peer",
        type: "bytes32",
      },
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516200113c3803806200113c8339810160408190526100319161013d565b818161003c336100d1565b6001600160a01b03808316608052811661006957604051632d618d8160e21b815260040160405180910390fd5b60805160405163ca5eb5e160e01b81526001600160a01b0383811660048301529091169063ca5eb5e190602401600060405180830381600087803b1580156100b057600080fd5b505af11580156100c4573d6000803e3d6000fd5b5050505050505050610170565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461013857600080fd5b919050565b6000806040838503121561015057600080fd5b61015983610121565b915061016760208401610121565b90509250929050565b608051610f8e620001ae6000396000818160f40152818161033b0152818161047901528181610577015281816107c101526108780152610f8e6000f3fe6080604052600436106100815760003560e01c806305bb08a11461008657806317442b701461009b5780633400288b146100c25780635e280f11146100e2578063715018a6146101235780638da5cb5b14610138578063bb0b6a531461014d578063ca5eb5e114610188578063f2fde38b146101a8578063fccbe220146101c8575b600080fd5b610099610094366004610bc7565b6101e8565b005b3480156100a757600080fd5b50604080516001815260006020820152015b60405180910390f35b3480156100ce57600080fd5b506100996100dd366004610c90565b6102e3565b3480156100ee57600080fd5b506101167f000000000000000000000000000000000000000000000000000000000000000081565b6040516100b99190610cba565b34801561012f57600080fd5b506100996102f9565b34801561014457600080fd5b5061011661030d565b34801561015957600080fd5b5061017a610168366004610cce565b60016020526000908152604090205481565b6040519081526020016100b9565b34801561019457600080fd5b506100996101a3366004610d05565b61031c565b3480156101b457600080fd5b506100996101c3366004610d05565b6103a5565b3480156101d457600080fd5b5061017a6101e3366004610bc7565b61041e565b600033846040516020016101fd929190610d72565b60408051601f198184030181526020601f8601819004810284018101909252848352925060009161024c918891859188908890819084018382808284376000920182905250925061046f915050565b805190915034101561028257805160405163a458261b60e01b815234600482015260248101919091526044015b60405180910390fd5b6102da868386868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051808201909152348152602081019190915292503391506105449050565b50505050505050565b6102eb61064f565b6102f582826106ae565b5050565b61030161064f565b61030b6000610703565b565b6000546001600160a01b031690565b61032461064f565b60405163ca5eb5e160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ca5eb5e190610370908490600401610cba565b600060405180830381600087803b15801561038a57600080fd5b505af115801561039e573d6000803e3d6000fd5b5050505050565b6103ad61064f565b6001600160a01b0381166104125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610279565b61041b81610703565b50565b600080610462868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250925061046f915050565b519150505b949350505050565b610477610ae2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ddc28c586040518060a001604052808863ffffffff1681526020016104c689610753565b8152602001878152602001868152602001851515815250306040518363ffffffff1660e01b81526004016104fb929190610d96565b6040805180830381865afa158015610517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053b9190610e5d565b95945050505050565b61054c610afc565b600061055b8460000151610795565b6020850151909150156105755761057584602001516107bd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632637a450826040518060a001604052808b63ffffffff1681526020016105c58c610753565b81526020018a815260200189815260200160008960200151111515815250866040518463ffffffff1660e01b8152600401610601929190610d96565b60806040518083038185885af115801561061f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106449190610e79565b979650505050505050565b3361065861030d565b6001600160a01b03161461030b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610279565b63ffffffff8216600081815260016020908152604091829020849055815192835282018390527f238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b910160405180910390a15050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b63ffffffff81166000908152600160205260408120548061078f5760405163f6ff4fb760e01b815263ffffffff84166004820152602401610279565b92915050565b60008134146107b9576040516304fb820960e51b8152346004820152602401610279565b5090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e4fe1d946040518163ffffffff1660e01b8152600401602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108419190610eea565b90506001600160a01b03811661086a576040516329b99a9560e11b815260040160405180910390fd5b6040805133602482018190527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03818116604485015260648085018890528551808603909101815260849094019094526020830180516001600160e01b03166323b872dd60e01b1790526102f59385169286906108ef9085906108f5565b50505050565b600061094a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109cf9092919063ffffffff16565b905080516000148061096b57508080602001905181019061096b9190610f07565b6109ca5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610279565b505050565b6060610467848460008585600080866001600160a01b031685876040516109f69190610f29565b60006040518083038185875af1925050503d8060008114610a33576040519150601f19603f3d011682016040523d82523d6000602084013e610a38565b606091505b50915091506106448783838760608315610ab3578251600003610aac576001600160a01b0385163b610aac5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610279565b5081610467565b6104678383815115610ac85781518083602001fd5b8060405162461bcd60e51b81526004016102799190610f45565b604051806040016040528060008152602001600081525090565b6040805160608101825260008082526020820152908101610b1b610ae2565b905290565b803563ffffffff81168114610b3457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610b7757610b77610b39565b604052919050565b60008083601f840112610b9157600080fd5b5081356001600160401b03811115610ba857600080fd5b602083019150836020828501011115610bc057600080fd5b9250929050565b60008060008060608587031215610bdd57600080fd5b610be685610b20565b93506020858101356001600160401b0380821115610c0357600080fd5b818801915088601f830112610c1757600080fd5b813581811115610c2957610c29610b39565b610c3b601f8201601f19168501610b4f565b8181528a85838601011115610c4f57600080fd5b818585018683013760009181019094015291945060408701359180831115610c7657600080fd5b5050610c8487828801610b7f565b95989497509550505050565b60008060408385031215610ca357600080fd5b610cac83610b20565b946020939093013593505050565b6001600160a01b0391909116815260200190565b600060208284031215610ce057600080fd5b610ce982610b20565b9392505050565b6001600160a01b038116811461041b57600080fd5b600060208284031215610d1757600080fd5b8135610ce981610cf0565b60005b83811015610d3d578181015183820152602001610d25565b50506000910152565b60008151808452610d5e816020860160208601610d22565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009061046790830184610d46565b6040815263ffffffff8351166040820152602083015160608201526000604084015160a06080840152610dcc60e0840182610d46565b90506060850151603f198483030160a0850152610de98282610d46565b60809690960151151560c08501525050506001600160a01b039190911660209091015290565b600060408284031215610e2157600080fd5b604080519081016001600160401b0381118282101715610e4357610e43610b39565b604052825181526020928301519281019290925250919050565b600060408284031215610e6f57600080fd5b610ce98383610e0f565b600060808284031215610e8b57600080fd5b604051606081016001600160401b038082118383101715610eae57610eae610b39565b8160405284518352602085015191508082168214610ecb57600080fd5b506020820152610ede8460408501610e0f565b60408201529392505050565b600060208284031215610efc57600080fd5b8151610ce981610cf0565b600060208284031215610f1957600080fd5b81518015158114610ce957600080fd5b60008251610f3b818460208701610d22565b9190910192915050565b602081526000610ce96020830184610d4656fea2646970667358221220a656e88fac222dfe26f7fed33124dcfe2eeb8cc13b2cb38876ad54eb9099beb864736f6c63430008140033";

type MultichainSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainSenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainSender__factory extends ContractFactory {
  constructor(...args: MultichainSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _endpoint: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainSender> {
    return super.deploy(
      _endpoint,
      _owner,
      overrides || {}
    ) as Promise<MultichainSender>;
  }
  override getDeployTransaction(
    _endpoint: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_endpoint, _owner, overrides || {});
  }
  override attach(address: string): MultichainSender {
    return super.attach(address) as MultichainSender;
  }
  override connect(signer: Signer): MultichainSender__factory {
    return super.connect(signer) as MultichainSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainSenderInterface {
    return new utils.Interface(_abi) as MultichainSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainSender {
    return new Contract(address, _abi, signerOrProvider) as MultichainSender;
  }
}
