// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MultichainUtils,
  MultichainUtilsInterface,
} from "../../../contracts/multichain/MultichainUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyMultichainTransferInAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsufficientMultichainBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "endpoint",
        type: "address",
      },
    ],
    name: "InvalidMultichainEndpoint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "InvalidMultichainProvider",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getMultichainBalanceAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "endpoint",
        type: "address",
      },
    ],
    name: "validateMultichainEndpoint",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "validateMultichainProvider",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6118a6610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806305d0f9ba1461007157806307ea57241461009657806313bc4d69146100ab57806315ff6d2d146100cb57806317f205dc146100eb578063fc25123e1461010b575b600080fd5b61008461007f366004610e11565b61011e565b60405190815260200160405180910390f35b6100a96100a4366004610e5c565b6101a0565b005b8180156100b757600080fd5b506100a96100c6366004610e95565b610244565b8180156100d757600080fd5b506100846100e6366004610f2a565b6103a3565b8180156100f757600080fd5b506100a9610106366004610fa3565b610444565b6100a9610119366004610e5c565b610508565b6000836001600160a01b031663bd02d0f5610139858561059e565b6040518263ffffffff1660e01b815260040161015791815260200190565b602060405180830381865afa158015610174573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101989190611031565b949350505050565b60006101ab8261062c565b604051633d70e7e560e11b8152600481018290529091506001600160a01b03841690637ae1cfca90602401602060405180830381865afa1580156101f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610217919061104a565b61023f5781604051639c9a99db60e01b81526004016102369190611073565b60405180910390fd5b505050565b811561039957600061025789868861011e565b90508281101561029b57604051634ac6d09560e01b81526001600160a01b038087166004830152871660248201526044810182905260648101849052608401610236565b886001600160a01b031663e98aabc16102b4878961059e565b856040518363ffffffff1660e01b81526004016102db929190918252602082015260400190565b6020604051808303816000875af11580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e9190611031565b5060405163078d3b7960e01b81526001600160a01b03878116600483015285811660248301526044820185905288169063078d3b7990606401600060405180830381600087803b15801561037157600080fd5b505af1158015610385573d6000803e3d6000fd5b505050506103978887878787876106b9565b505b5050505050505050565b600080856001600160a01b031663352f9aed866040518263ffffffff1660e01b81526004016103d29190611073565b6020604051808303816000875af11580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104159190611031565b90508060000361042957600091505061043a565b61043788888688858861084d565b90505b9695505050505050565b60405163352f9aed60e01b81526000906001600160a01b0387169063352f9aed90610473908790600401611073565b6020604051808303816000875af1158015610492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b69190611031565b9050806000036104ec576040516314c35d9360e01b81526001600160a01b03808516600483015285166024820152604401610236565b6104fa88888587858761084d565b6103998786868685876108e6565b600061051382610a3f565b604051633d70e7e560e11b8152600481018290529091506001600160a01b03841690637ae1cfca90602401602060405180830381865afa15801561055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057f919061104a565b61023f5781604051632314a6e360e01b81526004016102369190611073565b60006040516020016105d6906020808252601290820152714d554c5449434841494e5f42414c414e434560701b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800160405160208183030381529060405280519060200120905092915050565b600060405160200161066f906020808252601e908201527f49535f4d554c5449434841494e5f454e44504f494e545f454e41424c45440000604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b6106c1610d08565b80516106ce906003610a82565b6040805180820190915260058152643a37b5b2b760d91b602082015281516106f99160009089610ae7565b6040805180820190915260078152661858d8dbdd5b9d60ca1b602082015281516107269160019088610ae7565b6040805180820190915260088152673932b1b2b4bb32b960c11b602082015281516107549160029087610ae7565b6020810151610764906002610a82565b61079e600060405180604001604052806006815260200165185b5bdd5b9d60d21b815250858460200151610b44909392919063ffffffff16565b6107dc60016040518060400160405280600a8152602001691cdc98d0da185a5b925960b21b815250848460200151610b44909392919063ffffffff16565b866001600160a01b03166324de01e46107f487610b97565b836040518363ffffffff1660e01b8152600401610812929190611779565b600060405180830381600087803b15801561082c57600080fd5b505af1158015610840573d6000803e3d6000fd5b5050505050505050505050565b856001600160a01b031663340dbab3610866868661059e565b846040518363ffffffff1660e01b815260040161088d929190918252602082015260400190565b6020604051808303816000875af11580156108ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d09190611031565b506108de8584868585610ba3565b505050505050565b6108ee610d08565b80516108fb906003610a82565b604080518082019091526008815267383937bb34b232b960c11b602082015281516109299160009089610ae7565b6040805180820190915260058152643a37b5b2b760d91b602082015281516109549160019088610ae7565b6040805180820190915260078152661858d8dbdd5b9d60ca1b602082015281516109819160029087610ae7565b6020810151610991906002610a82565b6109cb600060405180604001604052806006815260200165185b5bdd5b9d60d21b815250858460200151610b44909392919063ffffffff16565b610a0960016040518060400160405280600a8152602001691cdc98d0da185a5b925960b21b815250848460200151610b44909392919063ffffffff16565b866001600160a01b03166324de01e4610a2186610b97565b836040518363ffffffff1660e01b81526004016108129291906117be565b600060405160200161066f906020808252601e908201527f49535f4d554c5449434841494e5f50524f56494445525f454e41424c45440000604082015260600190565b806001600160401b03811115610a9a57610a9a611800565b604051908082528060200260200182016040528015610ae057816020015b604080518082019091526060815260006020820152815260200190600190039081610ab85790505b5090915250565b8184600001518481518110610afe57610afe611816565b6020026020010151600001819052508084600001518481518110610b2457610b24611816565b6020908102919091018101516001600160a01b0390921691015250505050565b8184600001518481518110610b5b57610b5b611816565b6020026020010151600001819052508084600001518481518110610b8157610b81611816565b6020026020010151602001818152505050505050565b6001600160a01b031690565b610bab610d08565b8051610bb8906002610a82565b6040805180820190915260058152643a37b5b2b760d91b60208201528151610be39160009088610ae7565b6040805180820190915260078152661858d8dbdd5b9d60ca1b60208201528151610c109160019087610ae7565b6020810151610c20906002610a82565b610c5a600060405180604001604052806006815260200165185b5bdd5b9d60d21b815250858460200151610b44909392919063ffffffff16565b610c9860016040518060400160405280600a8152602001691cdc98d0da185a5b925960b21b815250848460200151610b44909392919063ffffffff16565b856001600160a01b03166324de01e4610cb086610b97565b836040518363ffffffff1660e01b8152600401610cce92919061182c565b600060405180830381600087803b158015610ce857600080fd5b505af1158015610cfc573d6000803e3d6000fd5b50505050505050505050565b604080516101208101909152606060e0820181815261010083019190915281908152602001610d4a604051806040016040528060608152602001606081525090565b8152602001610d6c604051806040016040528060608152602001606081525090565b8152602001610d8e604051806040016040528060608152602001606081525090565b8152602001610db0604051806040016040528060608152602001606081525090565b8152602001610dd2604051806040016040528060608152602001606081525090565b8152602001610df4604051806040016040528060608152602001606081525090565b905290565b6001600160a01b0381168114610e0e57600080fd5b50565b600080600060608486031215610e2657600080fd5b8335610e3181610df9565b92506020840135610e4181610df9565b91506040840135610e5181610df9565b809150509250925092565b60008060408385031215610e6f57600080fd5b8235610e7a81610df9565b91506020830135610e8a81610df9565b809150509250929050565b600080600080600080600080610100898b031215610eb257600080fd5b8835610ebd81610df9565b97506020890135610ecd81610df9565b96506040890135610edd81610df9565b95506060890135610eed81610df9565b94506080890135610efd81610df9565b935060a0890135610f0d81610df9565b979a969950949793969295929450505060c08201359160e0013590565b60008060008060008060c08789031215610f4357600080fd5b8635610f4e81610df9565b95506020870135610f5e81610df9565b94506040870135610f6e81610df9565b93506060870135610f7e81610df9565b92506080870135610f8e81610df9565b9598949750929591949360a090920135925050565b600080600080600080600060e0888a031215610fbe57600080fd5b8735610fc981610df9565b96506020880135610fd981610df9565b95506040880135610fe981610df9565b94506060880135610ff981610df9565b9350608088013561100981610df9565b925060a088013561101981610df9565b96999598509396929591949193505060c09091013590565b60006020828403121561104357600080fd5b5051919050565b60006020828403121561105c57600080fd5b8151801515811461106c57600080fd5b9392505050565b6001600160a01b0391909116815260200190565b6000815180845260005b818110156110ad57602081850181015186830182015201611091565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208501945060208160051b8301016020850160005b8381101561117457601f1985840301885281518051604085526111116040860182611087565b6020928301518682038785015280518083529084019360009350909101905b8083101561115b5783516001600160a01b031682526020938401936001939093019290910190611130565b5060209a8b019a909550939093019250506001016110eb565b50909695505050505050565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156111fa57605f1988860301835283518051604087526111d26040880182611087565b6020928301516001600160a01b031697830197909752509384019392909201916001016111ac565b505050506020830151848203602086015261121582826110cd565b95945050505050565b600082825180855260208501945060208160051b8301016020850160005b8381101561117457601f1985840301885281518051604085526112626040860182611087565b6020928301518682038785015280518083529084019360009350909101905b808310156112a45783518252602082019150602084019350600183019250611281565b5060209a8b019a9095509390930192505060010161123c565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561132e57605f19888603018352835180516040875261130f6040880182611087565b60209283015197830197909752509384019392909201916001016112e9565b5050505060208301518482036020860152611215828261121e565b600082825180855260208501945060208160051b8301016020850160005b8381101561117457601f19858403018852815180516040855261138d6040860182611087565b6020928301518682038785015280518083529084019360009350909101905b808310156113d1578351151582526020820191506020840193506001830192506113ac565b5060209a8b019a90955093909301925050600101611367565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561145d57605f19888603018352835180516040875261143c6040880182611087565b60209283015115159783019790975250938401939290920191600101611416565b50505050602083015184820360208601526112158282611349565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561132e57605f1988860301835283518051604087526114ca6040880182611087565b60209283015197830197909752509384019392909201916001016114a4565b600082825180855260208501945060208160051b8301016020850160005b8381101561117457601f19858403018852815180516040855261152d6040860182611087565b6020928301518682038785015280518083529084019391925081830191600582901b84010160005b8281101561158657601f19858303018452611571828751611087565b60209687019694909401939150600101611555565b508097505050505050602082019150602088019750600181019050611507565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561162a57605f1988860301835283518051604087526115f86040880182611087565b90506020820151915086810360208801526116138183611087565b9650505060209384019392909201916001016115d2565b505050506020830151848203602086015261121582826114e9565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561162a57605f1988860301835283518051604087526116976040880182611087565b90506020820151915086810360208801526116b28183611087565b965050506020938401939290920191600101611671565b6000815160e084526116de60e0850182611180565b9050602083015184820360208601526116f782826112bd565b9150506040830151848203604086015261171182826112bd565b9150506060830151848203606086015261172b82826113ea565b915050608083015184820360808601526117458282611478565b91505060a083015184820360a086015261175f82826115a6565b91505060c083015184820360c08601526112158282611645565b606081526015606082015274135d5b1d1a58da185a5b951c985b9cd9995c93dd5d605a1b608082015282602082015260a06040820152600061019860a08301846116c9565b60608152601260608201527126bab63a34b1b430b4b7213934b233b2a4b760711b608082015282602082015260a06040820152600061019860a08301846116c9565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60608152601460608201527326bab63a34b1b430b4b72a3930b739b332b924b760611b608082015282602082015260a06040820152600061019860a08301846116c956fea2646970667358221220f06ed661a5106d94190626824c06f9cafa07fa6ba8c776b2d7413910c559763464736f6c634300081d0033";

type MultichainUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainUtils__factory extends ContractFactory {
  constructor(...args: MultichainUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainUtils> {
    return super.deploy(overrides || {}) as Promise<MultichainUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultichainUtils {
    return super.attach(address) as MultichainUtils;
  }
  override connect(signer: Signer): MultichainUtils__factory {
    return super.connect(signer) as MultichainUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainUtilsInterface {
    return new utils.Interface(_abi) as MultichainUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainUtils {
    return new Contract(address, _abi, signerOrProvider) as MultichainUtils;
  }
}
