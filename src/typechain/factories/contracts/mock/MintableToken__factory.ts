// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MintableToken,
  MintableTokenInterface,
} from "../../../contracts/mock/MintableToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b506040516117de3803806117de83398101604081905261003091610276565b6040805180820190915260018152603160f81b6020820152839081908185600361005a8382610382565b5060046100678282610382565b5061007791508390506005610139565b61012052610086816006610139565b61014052815160208084019190912060e052815190820120610100524660a05261011360e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506009805460ff191660ff92909216919091179055506104979050565b60006020835110156101555761014e8361016c565b9050610166565b816101608482610382565b5060ff90505b92915050565b600080829050601f815111156101a0578260405163305a27a960e01b81526004016101979190610440565b60405180910390fd5b80516101ab82610473565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156101e45781810151838201526020016101cc565b50506000910152565b600082601f8301126101fe57600080fd5b81516001600160401b03811115610217576102176101b3565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610245576102456101b3565b60405281815283820160200185101561025d57600080fd5b61026e8260208301602087016101c9565b949350505050565b60008060006060848603121561028b57600080fd5b83516001600160401b038111156102a157600080fd5b6102ad868287016101ed565b602086015190945090506001600160401b038111156102cb57600080fd5b6102d7868287016101ed565b925050604084015160ff811681146102ee57600080fd5b809150509250925092565b600181811c9082168061030d57607f821691505b60208210810361032d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561037d57806000526020600020601f840160051c8101602085101561035a5750805b601f840160051c820191505b8181101561037a5760008155600101610366565b50505b505050565b81516001600160401b0381111561039b5761039b6101b3565b6103af816103a984546102f9565b84610333565b6020601f8211600181146103e357600083156103cb5750848201515b600019600385901b1c1916600184901b17845561037a565b600084815260208120601f198516915b8281101561041357878501518255602094850194600190920191016103f3565b50848210156104315786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015261045f8160408501602087016101c9565b601f01601f19169190910160400192915050565b8051602080830151919081101561032d5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516112ed6104f160003960006103b60152600061038b01526000610a4901526000610a210152600061097c015260006109a6015260006109d001526112ed6000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c806306fdde03146100e0578063095ea7b3146100fe57806318160ddd1461012157806323b872dd14610133578063313ce567146101465780633644e5151461015b578063395093511461016357806340c10f191461017657806370a08231146101895780637ecebe00146101b257806384b0196e146101c557806395d89b41146101e05780639dc29fac146101e8578063a457c2d7146101fb578063a9059cbb1461020e578063d505accf14610221578063dd62ed3e14610236575b600080fd5b6100e8610249565b6040516100f59190611036565b60405180910390f35b61011161010c36600461106c565b6102db565b60405190151581526020016100f5565b6002545b6040519081526020016100f5565b610111610141366004611096565b6102f5565b60095460405160ff90911681526020016100f5565b610125610319565b61011161017136600461106c565b610328565b61011161018436600461106c565b61034a565b6101256101973660046110d3565b6001600160a01b031660009081526020819052604090205490565b6101256101c03660046110d3565b61035f565b6101cd61037d565b6040516100f597969594939291906110ee565b6100e8610406565b6101116101f636600461106c565b610415565b61011161020936600461106c565b610421565b61011161021c36600461106c565b6104a1565b61023461022f366004611186565b6104af565b005b6101256102443660046111f9565b610613565b6060600380546102589061122c565b80601f01602080910402602001604051908101604052809291908181526020018280546102849061122c565b80156102d15780601f106102a6576101008083540402835291602001916102d1565b820191906000526020600020905b8154815290600101906020018083116102b457829003601f168201915b5050505050905090565b6000336102e981858561063e565b60019150505b92915050565b600033610303858285610763565b61030e8585856107dd565b506001949350505050565b600061032361096f565b905090565b6000336102e981858561033b8383610613565b6103459190611260565b61063e565b60006103568383610a9a565b50600192915050565b6001600160a01b0381166000908152600760205260408120546102ef565b6000606080828080836103b17f00000000000000000000000000000000000000000000000000000000000000006005610b47565b6103dc7f00000000000000000000000000000000000000000000000000000000000000006006610b47565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102589061122c565b60006103568383610bf2565b6000338161042f8286610613565b9050838110156104945760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030e828686840361063e565b6000336102e98185856107dd565b834211156104ff5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161048b565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861052e8c610d0a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061058982610d32565b9050600061059982878787610d5f565b9050896001600160a01b0316816001600160a01b0316146105fc5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161048b565b6106078a8a8a61063e565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106a05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048b565b6001600160a01b0382166107015760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061076f8484610613565b905060001981146107d757818110156107ca5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161048b565b6107d7848484840361063e565b50505050565b6001600160a01b0383166108415760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048b565b6001600160a01b0382166108a35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048b565b6001600160a01b0383166000908152602081905260409020548181101561091b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161048b565b6001600160a01b0384811660008181526020818152604080832087870390559387168083529184902080548701905592518581529092600080516020611298833981519152910160405180910390a36107d7565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156109c857507f000000000000000000000000000000000000000000000000000000000000000046145b156109f257507f000000000000000000000000000000000000000000000000000000000000000090565b610323604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216610af05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161048b565b8060026000828254610b029190611260565b90915550506001600160a01b03821660008181526020818152604080832080548601905551848152600080516020611298833981519152910160405180910390a35050565b606060ff8314610b6157610b5a83610d87565b90506102ef565b818054610b6d9061122c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b999061122c565b8015610be65780601f10610bbb57610100808354040283529160200191610be6565b820191906000526020600020905b815481529060010190602001808311610bc957829003601f168201915b505050505090506102ef565b6001600160a01b038216610c525760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161048b565b6001600160a01b03821660009081526020819052604090205481811015610cc65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161048b565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192916000805160206112988339815191529101610756565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b60006102ef610d3f61096f565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000610d7087878787610dc6565b91509150610d7d81610e80565b5095945050505050565b60606000610d9483610fc8565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115610df35750600090506003610e77565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610e47573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e7057600060019250925050610e77565b9150600090505b94509492505050565b6000816004811115610e9457610e94611281565b03610e9c5750565b6001816004811115610eb057610eb0611281565b03610ef85760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161048b565b6002816004811115610f0c57610f0c611281565b03610f595760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161048b565b6003816004811115610f6d57610f6d611281565b03610fc55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161048b565b50565b600060ff8216601f8111156102ef57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b8181101561101657602081850181015186830182015201610ffa565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110496020830184610ff0565b9392505050565b80356001600160a01b038116811461106757600080fd5b919050565b6000806040838503121561107f57600080fd5b61108883611050565b946020939093013593505050565b6000806000606084860312156110ab57600080fd5b6110b484611050565b92506110c260208501611050565b929592945050506040919091013590565b6000602082840312156110e557600080fd5b61104982611050565b60ff60f81b8816815260e06020820152600061110d60e0830189610ff0565b828103604084015261111f8189610ff0565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015611175578351835260209384019390920191600101611157565b50909b9a5050505050505050505050565b600080600080600080600060e0888a0312156111a157600080fd5b6111aa88611050565b96506111b860208901611050565b95506040880135945060608801359350608088013560ff811681146111dc57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561120c57600080fd5b61121583611050565b915061122360208401611050565b90509250929050565b600181811c9082168061124057607f821691505b602082108103610d2c57634e487b7160e01b600052602260045260246000fd5b808201808211156102ef57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212206bfa61cfe9d329b7077e8a73fe96d2ebd0cc0108acd89551c1e531985f8446d964736f6c634300081d0033";

type MintableTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintableTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintableToken__factory extends ContractFactory {
  constructor(...args: MintableTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MintableToken> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<MintableToken>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override attach(address: string): MintableToken {
    return super.attach(address) as MintableToken;
  }
  override connect(signer: Signer): MintableToken__factory {
    return super.connect(signer) as MintableToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintableTokenInterface {
    return new utils.Interface(_abi) as MintableTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintableToken {
    return new Contract(address, _abi, signerOrProvider) as MintableToken;
  }
}
