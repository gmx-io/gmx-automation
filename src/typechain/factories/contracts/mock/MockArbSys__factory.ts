/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockArbSys,
  MockArbSysInterface,
} from "../../../contracts/mock/MockArbSys";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "arbBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "arbBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060ab8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80632b407a82146037578063a3b1b31d146058575b600080fd5b60466042366004605d565b4090565b60405190815260200160405180910390f35b436046565b600060208284031215606e57600080fd5b503591905056fea2646970667358221220316857a88662d13dcb585c233afc5a6dc4a39d58ba5629e58faf2bde90fd1a7364736f6c63430008120033";

type MockArbSysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockArbSysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockArbSys__factory extends ContractFactory {
  constructor(...args: MockArbSysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockArbSys> {
    return super.deploy(overrides || {}) as Promise<MockArbSys>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockArbSys {
    return super.attach(address) as MockArbSys;
  }
  override connect(signer: Signer): MockArbSys__factory {
    return super.connect(signer) as MockArbSys__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockArbSysInterface {
    return new utils.Interface(_abi) as MockArbSysInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockArbSys {
    return new Contract(address, _abi, signerOrProvider) as MockArbSys;
  }
}
