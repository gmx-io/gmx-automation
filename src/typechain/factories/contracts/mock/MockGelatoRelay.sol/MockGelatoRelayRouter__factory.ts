// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockGelatoRelayRouter,
  MockGelatoRelayRouterInterface,
} from "../../../../contracts/mock/MockGelatoRelay.sol/MockGelatoRelayRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Router",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract IOrderHandler",
        name: "_orderHandler",
        type: "address",
      },
      {
        internalType: "contract OrderVault",
        name: "_orderVault",
        type: "address",
      },
      {
        internalType: "contract ISwapHandler",
        name: "_swapHandler",
        type: "address",
      },
      {
        internalType: "contract IExternalHandler",
        name: "_externalHandler",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyHoldingAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyTokenTranferGasLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredRelayFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableFeeAmount",
        type: "uint256",
      },
    ],
    name: "InsufficientRelayFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "desChainId",
        type: "uint256",
      },
    ],
    name: "InvalidDestinationChainId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sendTokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sendAmountsLength",
        type: "uint256",
      },
    ],
    name: "InvalidExternalCalls",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedSpender",
        type: "address",
      },
    ],
    name: "InvalidPermitSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "srcChainId",
        type: "uint256",
      },
    ],
    name: "InvalidSrcChainId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    name: "InvalidUserDigest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxFeeUsd",
        type: "uint256",
      },
    ],
    name: "MaxRelayFeeSwapForSubaccountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "NonEmptyExternalCallsForSubaccountOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayEmptyBatch",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenPermitsNotAllowedForMultichain",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedFeeToken",
        type: "address",
      },
    ],
    name: "UnexpectedRelayFeeToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedFeeToken",
        type: "address",
      },
    ],
    name: "UnsupportedRelayFeeToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returndata",
        type: "bytes",
      },
    ],
    name: "TokenTransferReverted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType:
                  "struct IBaseOrderUtils.CreateOrderParamsAddresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct IBaseOrderUtils.CreateOrderParamsNumbers",
                name: "numbers",
                type: "tuple",
              },
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "referralCode",
                type: "bytes32",
              },
              {
                internalType: "bytes32[]",
                name: "dataList",
                type: "bytes32[]",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParams[]",
            name: "createOrderParamsList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "executionFeeIncrease",
                type: "uint256",
              },
            ],
            internalType: "struct IRelayUtils.UpdateOrderParams[]",
            name: "updateOrderParamsList",
            type: "tuple[]",
          },
          {
            internalType: "bytes32[]",
            name: "cancelOrderKeys",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IRelayUtils.BatchParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "batch",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParamsNumbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "enum Order.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "enum Order.DecreasePositionSwapType",
            name: "decreasePositionSwapType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "autoCancel",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "referralCode",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IBaseOrderUtils.CreateOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "digests",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "externalHandler",
    outputs: [
      {
        internalType: "contract IExternalHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderHandler",
    outputs: [
      {
        internalType: "contract IOrderHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderVault",
    outputs: [
      {
        internalType: "contract OrderVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract Router",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendNativeToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendWnt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapHandler",
    outputs: [
      {
        internalType: "contract ISwapHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "testArraySignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "testCancelOrderSignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "foo",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "bar",
            type: "bool",
          },
        ],
        internalType: "struct MockGelatoRelayRouter.Nested",
        name: "nested",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "testNestedSignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "testSimpleSignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "sizeDeltaUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "acceptablePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "triggerPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "validFromTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "autoCancel",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFeeIncrease",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.UpdateOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "updateOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61020060405234801561001157600080fd5b50604051615a96380380615a96833981016040819052610030916106c3565b88888888888888888884848484848d8d8d8d828961004c6101b6565b806001600160a01b031660c0906001600160a01b0316815250816001600160a01b031660a0906001600160a01b0316815250826001600160a01b03166080906001600160a01b03168152505050506001600081905550806001600160a01b031660e0816001600160a01b03168152505050806001600160a01b0316610100816001600160a01b03168152505050836001600160a01b0316610120816001600160a01b031681525050816001600160a01b0316610140816001600160a01b031681525050806001600160a01b0316610160816001600160a01b03168152505050505050836001600160a01b0316610180816001600160a01b031681525050826001600160a01b03166101a0816001600160a01b031681525050816001600160a01b03166101c0816001600160a01b031681525050806001600160a01b03166101e0816001600160a01b0316815250505050505050505050505050505050505050505050505050610787565b600080806101c346610355565b1561020f57507361ace8fba7b80aef8ed67f37cb60be00180872ad9273368165b2afb95fae8cec409efa59d5091f9875a5925073038479687b7bc7943313bffd524a4acc96b3f9be9150565b6102184661037d565b15610264575073b16a1dbe755f992636705fdbb3a8678a657eb3ea927322dcc39b2ac376862183dd35a1664798dafc7da6925073ba4082f4961c8fb76231995c967cd9aa40f321b59150565b61026d4661039b565b156102b957507342120a1417a091a52a8d4590e28fc6c0f61e56329273aced988c5b5fe3f11848c728d9a5f66cf34c9e73925073bbce89acdd86d0130bdc3f1fe37c3aedd79fc1f49150565b6102c2466103b9565b1561030e575073abcc9b596420a9e9172fd5938620e265a0f9df929273b539068872230f20456cf38ec52ef2f91af4ae499250738598806401a63ddf52473f1b3c55bc9e33e2d73b9150565b5073cd565435e0d2109fefde337a66491541df0d142092738ace64cea52b409f930f60b516f65197fad4b056925073c7739c195618d314c08e8626c98f8573e4e436349150565b600081610e351480610368575081610e34145b1561037557506001919050565b506000919050565b60008161014414806103685750816101180361037557506001919050565b600081612b741480610368575081610ab50361037557506001919050565b600081600114806103ca575081600a145b806103d55750816019145b806103e0575081601e145b806103eb5750816038145b806103f65750816064145b80610401575081606d145b8061040c5750816089145b8061041757508160b7145b8061042257508160e9145b8061042d57508160fa145b8061043957508161013a145b80610445575081610440145b8061045157508161044d145b8061045d57508161046f145b80610469575081610504145b80610475575081610505145b806104815750816106c1145b8061048d575081610725145b80610499575081610729145b806104a55750816107f7145b806104b1575081610ec0145b806104bd57508161106a145b806104c95750816118fe145b806104d5575081612105145b806104e15750816127d8145b806104ed575081614737145b806104f9575081614739145b806105055750816162ef145b8061051157508161868b145b8061051d57508161a1ef145b8061052957508161a455145b8061053557508161a4b1145b8061054157508161a86a145b8061054d57508161e708145b8061055a57508162013882145b80610567575081620138d4145b8061057457508162013e31145b8061058157508162014a34145b8061058e5750816201b254145b8061059b5750816203ade0145b806105a857508162066eee145b806105b5575081620a045c145b806105c257508162133e40145b806105cf575081625c2359145b806105dc5750816276adf1145b806105e957508162aa36a7145b806105f657508162aa37dc145b806106045750816301bf4933145b80610612575081630426e649145b806106205750816305535072145b8061062e57508163059d7131145b8061063c57508163075b3dcf145b8061064a575081630a0c71fd145b80610658575081630d3b745e145b80610666575081633b4c8eb9145b806106745750816352415249145b8061068257508163bc1392a6145b806106915750816412dbe91402145b806103685750816414865d0f050361037557506001919050565b6001600160a01b03811681146106c057600080fd5b50565b60008060008060008060008060006101208a8c0312156106e257600080fd5b89516106ed816106ab565b60208b01519099506106fe816106ab565b60408b015190985061070f816106ab565b60608b0151909750610720816106ab565b60808b0151909650610731816106ab565b60a08b0151909550610742816106ab565b60c08b0151909450610753816106ab565b60e08b0151909350610764816106ab565b6101008b0151909250610776816106ab565b809150509295985092959850929598565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e0516151f861089e6000396000818161018e0152818161208901526120e50152600081816103010152610e430152600081816103350152610e1b0152600081816103dd0152818161174e01528181611a1d0152611c830152600081816103890152612466015260008181610286015281816106740152818161087b01528181610d8301528181610dd801526112bd01526000818161048401528181610c1c01528181611e57015261283a015260006101f10152600081816102cd01528181610ea201528181610f470152818161232301526124870152600050506000505060006126c001526151f86000f3fe6080604052600436106101055760003560e01c806301ac42931461010a5780630427ef5f1461014f5780632e944bd61461017c5780633830f87a146101bd5780634a4a7b04146101df57806353ead2d314610213578063581415c21461022657806358e3500614610246578063660d0d67146102745780637d39aaf1146102a85780637dc0d1d0146102bb5780638a53aaac146102ef57806393845e46146103235780639a896464146103575780639ff78c3014610377578063ac9650d8146103ab578063b5848305146103cb578063c8079107146103ff578063d23fb8c51461041f578063e6d66ac81461043f578063f611ebbc14610452578063f887ea4014610472575b600080fd5b34801561011657600080fd5b5061013a610125366004613176565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561015b57600080fd5b5061016f61016a3660046131cd565b6104a6565b604051610146919061324d565b34801561018857600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b604051610146919061329d565b3480156101c957600080fd5b506101dd6101d83660046132b1565b6105c0565b005b3480156101eb57600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101dd610221366004613311565b61065e565b34801561023257600080fd5b506101dd610241366004613496565b6106a8565b34801561025257600080fd5b50610266610261366004613526565b610797565b604051908152602001610146565b34801561028057600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101dd6102b6366004613311565b610865565b3480156102c757600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b3480156102fb57600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b34801561032f57600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b34801561036357600080fd5b506101dd61037236600461359c565b6108a1565b34801561038357600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b6103be6103b93660046135fd565b61098d565b604051610146919061371e565b3480156103d757600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b34801561040b57600080fd5b506101dd61041a366004613731565b610aa1565b34801561042b57600080fd5b506101dd61043a366004613823565b610b69565b6101dd61044d3660046138a7565b610bf2565b34801561045e57600080fd5b506101dd61046d3660046138d7565b610c94565b34801561047e57600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b60606104b0610d20565b838360008060005a90506104c2610d7e565b60006104cc610db2565b90506104db8187878787610e78565b604051631dbef92b60e31b815260009073__$e8eac12d00fdb3e93794499b0cb727dd34$__9063edf7c95890610517908e908d90600401614147565b602060405180830381865af4158015610534573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105589190614230565b90506105668b8b8346610fbf565b61059a8a60006105768c80614249565b61058360208f018f614292565b8f80604001906105939190614249565b60006110e7565b9750506105a981838787611245565b5050505050506105b96001600055565b9392505050565b6040516302048c7f60e11b815260009073__$e8eac12d00fdb3e93794499b0cb727dd34$__9063040918fe906105fc90889088906004016142db565b602060405180830381865af4158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190614230565b90506106578161065060c08801886142fd565b8686611471565b5050505050565b610666610d20565b61066f82611571565b61069a7f0000000000000000000000000000000000000000000000000000000000000000838361159b565b6106a46001600055565b5050565b604080518082018252601c81527b4e65737465642875696e7432353620666f6f2c626f6f6c206261722960201b60209182015286518782015183517faf26a6da38b89145569c2853ef84ee281241070a8e3fecce926dc52f639657b793810193909352928201529015156060820152600090608001604051602081830303815290604052805190602001209050600060405180608001604052806048815260200161514d604891398051602091820120604051610769928991869101614343565b60405160208183030381529060405280519060200120905061078e8186868987611471565b50505050505050565b60006107a1610d20565b838360008060005a90506107b3610d7e565b60006107bd610db2565b90506107cc8187878787610e78565b604051634ef092d760e01b815260009073__$e8eac12d00fdb3e93794499b0cb727dd34$__90634ef092d790610808908e908d90600401614362565b602060405180830381865af4158015610825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108499190614230565b90506108578b8b8346610fbf565b61059a8a60008b60006116a0565b61086d610d20565b61087682611571565b61069a7f0000000000000000000000000000000000000000000000000000000000000000838361181d565b6108a9610d20565b828260008060005a90506108bb610d7e565b60006108c5610db2565b90506108d48187878787610e78565b604051637396d24b60e11b815260009073__$e8eac12d00fdb3e93794499b0cb727dd34$__9063e72da49690610910908d908c90600401614387565b602060405180830381865af415801561092d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109519190614230565b905061095f8a8a8346610fbf565b61096b898960006118a6565b5061097881838787611245565b5050505050506109886001600055565b505050565b6060816001600160401b038111156109a7576109a761333d565b6040519080825280602002602001820160405280156109da57816020015b60608152602001906001900390816109c55790505b50905060005b82811015610a9957600080308686858181106109fe576109fe6143ab565b9050602002810190610a1091906142fd565b604051610a1e9291906143c1565b600060405180830381855af49150503d8060008114610a59576040519150601f19603f3d011682016040523d82523d6000602084013e610a5e565b606091505b509150915081610a7157610a7181611afc565b80848481518110610a8457610a846143ab565b602090810291909101015250506001016109e0565b505b92915050565b610aa9610d20565b828260008060005a9050610abb610d7e565b6000610ac5610db2565b9050610ad48187878787610e78565b6040516302048c7f60e11b815260009073__$e8eac12d00fdb3e93794499b0cb727dd34$__9063040918fe90610b10908d908c906004016142db565b602060405180830381865af4158015610b2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b519190614230565b9050610b5f8a8a8346610fbf565b61096b8989611b35565b60006040518060600160405280602e8152602001615195602e9139805190602001208587604051602001610b9d91906143d1565b60405160208183030381529060405280519060200120604051602001610bc593929190614343565b604051602081830303815290604052805190602001209050610bea8185858886611471565b505050505050565b610bfa610d20565b610c0382611571565b6040516303704f0f60e31b815233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631b82787890610c57908790859088908890600401614410565b600060405180830381600087803b158015610c7157600080fd5b505af1158015610c85573d6000803e3d6000fd5b50505050506109886001600055565b604080518082018252601e81527f5072696d6172795374727563742861646472657373206163636f756e742900006020918201529051600091610cfb917fd2dabee9902bf856d4d19cdf909f14aa3807212688611df47ad64b016f54aa949188910161443a565b6040516020818303038152906040528051906020012090506106578185858886611471565b600260005403610d775760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b610db07f0000000000000000000000000000000000000000000000000000000000000000610dab30611ced565b611d70565b565b6040805160808101825260008082526020820181905291810182905260608101919091527f00000000000000000000000000000000000000000000000000000000000000006000610e0282611d9b565b604080516080810182526001600160a01b0394851681527f0000000000000000000000000000000000000000000000000000000000000000851660208201527f00000000000000000000000000000000000000000000000000000000000000008516918101919091529216606083015250919050565b610e828480614451565b610e8b90614498565b6040516331e999fd60e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c7a667f490610ed790849060040161462b565b600060405180830381600087803b158015610ef157600080fd5b505af1158015610f05573d6000803e3d6000fd5b50610f209250610f1b9150506040870187614292565b611e48565b610f388484610f326020890189614682565b85611f99565b610f4586868686866121b5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f9f57600080fd5b505af1158015610fb3573d6000803e3d6000fd5b50505050505050505050565b610fe18160e086013560a0870135610fda6040890189614292565b90506125c2565b604051638a3b3d6f60e01b81526004810182905260009073__$e8eac12d00fdb3e93794499b0cb727dd34$__90638a3b3d6f90602401602060405180830381865af4158015611034573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110589190614230565b905060006110668285612611565b905061107181612630565b73__$e8eac12d00fdb3e93794499b0cb727dd34$__63bead6785838361109a60c08b018b6142fd565b8a6040518663ffffffff1660e01b81526004016110bb959493929190614698565b60006040518083038186803b1580156110d357600080fd5b505af4158015610fb3573d6000803e3d6000fd5b60606000836110f6878a614705565b6111009190614705565b905080600003611123576040516312f75a3d60e11b815260040160405180910390fd5b6000886001600160401b0381111561113d5761113d61333d565b604051908082528060200260200182016040528015611166578160200160208202803683370190505b50905060005b898110156111c8576111a38d8d8d8d8581811061118b5761118b6143ab565b905060200281019061119d9190614718565b886116a0565b8282815181106111b5576111b56143ab565b602090810291909101015260010161116c565b5060005b878110156111ff576111f78d8a8a848181106111ea576111ea6143ab565b90506101000201876118a6565b6001016111cc565b5060005b858110156112355761122d8d888884818110611221576112216143ab565b90506020020135611b35565b600101611203565b509b9a5050505050505050505050565b60008085606001516001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401611278919061329d565b602060405180830381865afa158015611295573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b99190614230565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637ae1cfca6112f333612681565b6040518263ffffffff1660e01b815260040161131191815260200190565b602060405180830381865afa15801561132e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611352919061472f565b61144f576000611361336126bc565b15905080156114105786516060880151604051630e22a74960e31b81526001600160a01b03928316600482015291166024820152604481018790523660648201526084810183905273__$60bb1dd4670b1e26e5010aaaf2f65694d3$__906371153a489060a401602060405180830381865af41580156113e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114099190614230565b925061144d565b611418612707565b92508183111561144557604051639cd7629560e01b81526004810184905260248101839052604401610d6e565b61144d612710565b505b611459828261474c565b90508015610bea57610bea866060015185838661273c565b604051638a3b3d6f60e01b81526004810182905260009073__$e8eac12d00fdb3e93794499b0cb727dd34$__90638a3b3d6f90602401602060405180830381865af41580156114c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e89190614230565b905060006114f68288612611565b60405163bead678560e01b815290915073__$e8eac12d00fdb3e93794499b0cb727dd34$__9063bead67859061153890859085908b908b908b90600401614698565b60006040518083038186803b15801561155057600080fd5b505af4158015611564573d6000803e3d6000fd5b5050505050505050505050565b6001600160a01b0381166115985760405163d551823d60e01b815260040160405180910390fd5b50565b806000036115a857505050565b6115b182611571565b6000836001600160a01b031663bd02d0f5604051602001611603906020808252601f908201527f4e41544956455f544f4b454e5f5452414e534645525f4741535f4c494d495400604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161163791815260200190565b602060405180830381865afa158015611654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116789190614230565b90506000806000806000868887f190508015611695575050505050565b61065785858561181d565b6000806116ab610db2565b602081015160608201519192506116d0916001600160a01b03169060a087013561274c565b60408401351580159061171857506116f86116f36101408601610120870161475f565b6127a2565b8061171857506117186117136101408601610120870161475f565b6127da565b1561174c5761174c8661172b868061477c565b61173c9060c081019060a001614792565b602084015160408801358961281a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c6561b458787878780156117af575060006117928a8061477c565b6117a3906060810190604001614792565b6001600160a01b031614155b6040518563ffffffff1660e01b81526004016117ce94939291906147af565b6020604051808303816000875af11580156117ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118119190614230565b9150505b949350505050565b8060000361182a57505050565b61183382611571565b600061183e84611d9b565b9050806001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561187b57600080fd5b505af115801561188f573d6000803e3d6000fd5b50505050506118a084828585612875565b50505050565b60006118b0610db2565b805160405163fdfc26f360e01b815291925060009173__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9163fdfc26f3916118f191908835906004016148b9565b600060405180830381865af415801561190e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119369190810190614ac9565b9050600061194382515190565b6001600160a01b03160361196a57604051631630779760e01b815260040160405180910390fd5b846001600160a01b031661197d82515190565b6001600160a01b0316146119df576040805163a35b150b60e01b81526001600160a01b03871660048201526024810191909152601760448201527630b1b1b7bab73a103337b9103ab83230ba32a7b93232b960491b6064820152608401610d6e565b60e084013515611a1357611a1382602001518560e0013584606001516001600160a01b031661274c9092919063ffffffff16565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a9db59a7853560208701356040880135606089013560808a013560a08b0135611a6d60e08d0160c08e01614c35565b898c8015611a9057506000611a848c516060015190565b6001600160a01b031614155b8015611a9f575060e08e013515155b6040518a63ffffffff1660e01b8152600401611ac399989796959493929190614d12565b600060405180830381600087803b158015611add57600080fd5b505af1158015611af1573d6000803e3d6000fd5b505050505050505050565b600080611b0883612abf565b915091508015611b2c578160405162461bcd60e51b8152600401610d6e9190614e7b565b61098883612b4f565b6000611b3f610db2565b805160405163fdfc26f360e01b815291925060009173__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9163fdfc26f391611b7f919087906004016148b9565b600060405180830381865af4158015611b9c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bc49190810190614ac9565b90506000611bd182515190565b6001600160a01b031603611bf857604051631630779760e01b815260040160405180910390fd5b836001600160a01b0316611c0b82515190565b6001600160a01b031614611c6d576040805163a35b150b60e01b81526001600160a01b03861660048201526024810191909152601760448201527630b1b1b7bab73a103337b91031b0b731b2b627b93232b960491b6064820152608401610d6e565b604051637489ec2360e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637489ec2390602401600060405180830381600087803b158015611ccf57600080fd5b505af1158015611ce3573d6000803e3d6000fd5b5050505050505050565b6000604051602001611d2b9060208082526018908201527711d054d31154d4d7d191505515549157d11254d05093115160421b604082015260600190565b6040516020818303038152906040528051906020012082604051602001611d5392919061443a565b604051602081830303815290604052805190602001209050919050565b611d7a8282612b58565b156106a45760405163dd70e0c960e01b815260048101829052602401610d6e565b6000816001600160a01b03166321f8a721604051602001611dd39060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611e0791815260200190565b602060405180830381865afa158015611e24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b9190614e8e565b6000819003611e55575050565b7f000000000000000000000000000000000000000000000000000000000000000060005b828110156118a0576000848483818110611e9557611e956143ab565b90506101000201803603810190611eac9190614eab565b9050826001600160a01b031681602001516001600160a01b031614611eec57806020015183604051633c0ac19960e01b8152600401610d6e929190614f3e565b60e0810151815160208301516040808501516060860151608087015160a088015160c0890151945163d505accf60e01b81526001600160a01b03978816600482015295871660248701526044860193909352606485019190915260ff16608484015260a483015260c482015291169063d505accf9060e401600060405180830381600087803b158015611f7e57600080fd5b505af1925050508015611f8f575060015b5050600101611e79565b611fa66040830183614249565b1590506118a0578015611fcc576040516328f773e960e01b815260040160405180910390fd5b611fd68280614249565b15905080611ffd5750611fec6020830183614249565b9050611ff88380614249565b905014155b1561203e5761200c8280614249565b905061201b6020840184614249565b60405163ec7fd38560e01b81526004810193909352602483015250604401610d6e565b60005b61204b8380614249565b90508110156120da576120d2856120628580614249565b84818110612072576120726143ab565b90506020020160208101906120879190614792565b7f00000000000000000000000000000000000000000000000000000000000000006120b56020880188614249565b868181106120c5576120c56143ab565b905060200201358861281a565b600101612041565b506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d59922b06121176040850185614249565b6121246060870187614249565b6121316080890189614249565b61213e60a08b018b614249565b6040518963ffffffff1660e01b8152600401612161989796959493929190614f58565b600060405180830381600087803b15801561217b57600080fd5b505af115801561218f573d6000803e3d6000fd5b505050506118a084848480608001906121a89190614249565b610bea60a0880188614249565b6121be336126bc565b80156121e7575084606001516001600160a01b03166121db612bc4565b6001600160a01b031614155b15612214576121f4612bc4565b8560600151604051630d0fcc0b60e01b8152600401610d6e929190614f3e565b6122216060850185614451565b61222f906040810190614249565b15905061250757801561240e57600085600001516001600160a01b031663bd02d0f56040516020016122a09060208082526025908201527f4d41585f52454c41595f4645455f535741505f5553445f464f525f535542414360408201526410d3d5539560da1b606082015260800190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016122d491815260200190565b602060405180830381865afa1580156122f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123159190614230565b905060006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016635dcf71946123556060890189614451565b612363906020810190614792565b6040518263ffffffff1660e01b815260040161237f919061329d565b6040805180830381865afa15801561239b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123bf9190615004565b602001516123d06060880188614451565b602001356123de9190615037565b90508181111561240b57604051631808e37f60e31b81526004810182905260248101839052604401610d6e565b50505b6124498361241f6060870187614451565b61242d906020810190614792565b602088015161243f6060890189614451565b602001358661281a565b73__$e8eac12d00fdb3e93794499b0cb727dd34$";

type MockGelatoRelayRouterConstructorParams =
  | [
      linkLibraryAddresses: MockGelatoRelayRouterLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockGelatoRelayRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MockGelatoRelayRouter__factory extends ContractFactory {
  constructor(...args: MockGelatoRelayRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MockGelatoRelayRouter__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MockGelatoRelayRouterLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e8eac12d00fdb3e93794499b0cb727dd34\$__", "g"),
      linkLibraryAddresses["contracts/router/relay/RelayUtils.sol:RelayUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$60bb1dd4670b1e26e5010aaaf2f65694d3\$__", "g"),
      linkLibraryAddresses["contracts/gas/GasUtils.sol:GasUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _router: PromiseOrValue<string>,
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _orderHandler: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _externalHandler: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockGelatoRelayRouter> {
    return super.deploy(
      _router,
      _roleStore,
      _dataStore,
      _eventEmitter,
      _oracle,
      _orderHandler,
      _orderVault,
      _swapHandler,
      _externalHandler,
      overrides || {}
    ) as Promise<MockGelatoRelayRouter>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _orderHandler: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _externalHandler: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _roleStore,
      _dataStore,
      _eventEmitter,
      _oracle,
      _orderHandler,
      _orderVault,
      _swapHandler,
      _externalHandler,
      overrides || {}
    );
  }
  override attach(address: string): MockGelatoRelayRouter {
    return super.attach(address) as MockGelatoRelayRouter;
  }
  override connect(signer: Signer): MockGelatoRelayRouter__factory {
    return super.connect(signer) as MockGelatoRelayRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGelatoRelayRouterInterface {
    return new utils.Interface(_abi) as MockGelatoRelayRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockGelatoRelayRouter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockGelatoRelayRouter;
  }
}

export interface MockGelatoRelayRouterLibraryAddresses {
  ["contracts/router/relay/RelayUtils.sol:RelayUtils"]: string;
  ["contracts/gas/GasUtils.sol:GasUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
