// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockGovToken,
  MockGovTokenInterface,
} from "../../../contracts/mock/MockGovToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CLOCK_MODE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clock",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timepoint",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620026b2380380620026b283398101604081905262000035916200029a565b6040805180820190915260018152603160f81b60208201528390819081856003620000618382620003ae565b506004620000708282620003ae565b50620000829150839050600562000148565b610120526200009381600662000148565b61014052815160208084019190912060e052815190820120610100524660a0526200012160e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250600c805460ff191660ff9290921691909117905550620004d49050565b60006020835110156200016857620001608362000181565b90506200017b565b81620001758482620003ae565b5060ff90505b92915050565b600080829050601f81511115620001b8578260405163305a27a960e01b8152600401620001af91906200047a565b60405180910390fd5b8051620001c582620004af565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000200578181015183820152602001620001e6565b50506000910152565b600082601f8301126200021b57600080fd5b81516001600160401b0380821115620002385762000238620001cd565b604051601f8301601f19908116603f01168101908282118183101715620002635762000263620001cd565b816040528381528660208588010111156200027d57600080fd5b62000290846020830160208901620001e3565b9695505050505050565b600080600060608486031215620002b057600080fd5b83516001600160401b0380821115620002c857600080fd5b620002d68783880162000209565b94506020860151915080821115620002ed57600080fd5b50620002fc8682870162000209565b925050604084015160ff811681146200031457600080fd5b809150509250925092565b600181811c908216806200033457607f821691505b6020821081036200035557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003a957600081815260208120601f850160051c81016020861015620003845750805b601f850160051c820191505b81811015620003a55782815560010162000390565b5050505b505050565b81516001600160401b03811115620003ca57620003ca620001cd565b620003e281620003db84546200031f565b846200035b565b602080601f8311600181146200041a5760008415620004015750858301515b600019600386901b1c1916600185901b178555620003a5565b600085815260208120601f198616915b828110156200044b578886015182559484019460019091019084016200042a565b50858210156200046a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208152600082518060208401526200049b816040850160208701620001e3565b601f01601f19169190910160400192915050565b80516020808301519190811015620003555760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516121836200052f600039600061067f0152600061065401526000610f8c01526000610f6401526000610ebf01526000610ee901526000610f1301526121836000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c806306fdde031461014e578063095ea7b31461016c57806318160ddd1461018f57806323b872dd146101a1578063313ce567146101b45780633644e515146101c957806339509351146101d15780633a46b1a8146101e457806340c10f19146101f75780634bf5d7e91461020c578063587cde1e146102145780635c19a95c1461023f5780636fcfff451461025257806370a082311461027a5780637ecebe001461028d57806384b0196e146102a05780638e539e8c146102bb57806391ddadf4146102ce57806395d89b41146102ed5780639ab24eb0146102f55780639dc29fac14610308578063a457c2d71461031b578063a9059cbb1461032e578063c3cda52014610341578063d505accf14610354578063dd62ed3e14610367578063f1127ed81461037a575b600080fd5b6101566103b7565b6040516101639190611d61565b60405180910390f35b61017f61017a366004611d90565b610449565b6040519015158152602001610163565b6002545b604051908152602001610163565b61017f6101af366004611dba565b610463565b600c5460405160ff9091168152602001610163565b610193610487565b61017f6101df366004611d90565b610496565b6101936101f2366004611d90565b6104b8565b61020a610205366004611d90565b61051a565b005b610156610528565b610227610222366004611df6565b6105c0565b6040516001600160a01b039091168152602001610163565b61020a61024d366004611df6565b6105de565b610265610260366004611df6565b6105eb565b60405163ffffffff9091168152602001610163565b610193610288366004611df6565b61060d565b61019361029b366004611df6565b610628565b6102a8610646565b6040516101639796959493929190611e11565b6101936102c9366004611ea7565b6106cf565b6102d661070a565b60405165ffffffffffff9091168152602001610163565b610156610715565b610193610303366004611df6565b610724565b61020a610316366004611d90565b6107a5565b61017f610329366004611d90565b6107af565b61017f61033c366004611d90565b61082a565b61020a61034f366004611ed1565b610838565b61020a610362366004611f29565b61096a565b610193610375366004611f93565b610ace565b61038d610388366004611fc6565b610af9565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610163565b6060600380546103c690612006565b80601f01602080910402602001604051908101604052809291908181526020018280546103f290612006565b801561043f5780601f106104145761010080835404028352916020019161043f565b820191906000526020600020905b81548152906001019060200180831161042257829003601f168201915b5050505050905090565b600033610457818585610b7c565b60019150505b92915050565b600033610471858285610ca0565b61047c858585610d1a565b506001949350505050565b6000610491610eb2565b905090565b6000336104578185856104a98383610ace565b6104b39190612050565b610b7c565b60006104c261070a565b65ffffffffffff1682106104f15760405162461bcd60e51b81526004016104e890612063565b60405180910390fd5b6001600160a01b0383166000908152600a602052604090206105139083610fdd565b9392505050565b61052482826110bd565b5050565b60604361053361070a565b65ffffffffffff16146105885760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f646500000060448201526064016104e8565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b6001600160a01b039081166000908152600960205260409020541690565b6105e833826110c7565b50565b6001600160a01b0381166000908152600a602052604081205461045d90611147565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b03811660009081526007602052604081205461045d565b60006060808280808361067a7f000000000000000000000000000000000000000000000000000000000000000060056111b0565b6106a57f000000000000000000000000000000000000000000000000000000000000000060066111b0565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60006106d961070a565b65ffffffffffff1682106106ff5760405162461bcd60e51b81526004016104e890612063565b61045d600b83610fdd565b60006104914361125b565b6060600480546103c690612006565b6001600160a01b0381166000908152600a60205260408120548015610792576001600160a01b0383166000908152600a602052604090208054600019830190811061077157610771612096565b600091825260209091200154600160201b90046001600160e01b0316610795565b60005b6001600160e01b03169392505050565b61052482826112c2565b600033816107bd8286610ace565b90508381101561081d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e8565b61047c8286868403610b7c565b600033610457818585610d1a565b834211156108885760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016104e8565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610902906108fa9060a001604051602081830303815290604052805190602001206112cc565b8585856112f9565b905061090d81611321565b86146109575760405162461bcd60e51b81526020600482015260196024820152784552433230566f7465733a20696e76616c6964206e6f6e636560381b60448201526064016104e8565b61096181886110c7565b50505050505050565b834211156109ba5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104e8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109e98c611321565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a44826112cc565b90506000610a54828787876112f9565b9050896001600160a01b0316816001600160a01b031614610ab75760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104e8565b610ac28a8a8a610b7c565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600a60205260409020805463ffffffff8416908110610b3d57610b3d612096565b60009182526020918290206040805180820190915291015463ffffffff81168252600160201b90046001600160e01b0316918101919091529392505050565b6001600160a01b038316610bde5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e8565b6001600160a01b038216610c3f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610cac8484610ace565b90506000198114610d145781811015610d075760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104e8565b610d148484848403610b7c565b50505050565b6001600160a01b038316610d7e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e8565b6001600160a01b038216610de05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e8565b6001600160a01b03831660009081526020819052604090205481811015610e585760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e8565b6001600160a01b038481166000818152602081815260408083208787039055938716808352918490208054870190559251858152909260008051602061210e833981519152910160405180910390a3610d1484848461134e565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610f0b57507f000000000000000000000000000000000000000000000000000000000000000046145b15610f3557507f000000000000000000000000000000000000000000000000000000000000000090565b610491604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b815460009081816005811115611034576000610ff884611359565b61100290856120ac565b90508561100f8883611441565b5463ffffffff16111561102457809150611032565b61102f816001612050565b92505b505b8082101561107e576000611048838361144f565b9050856110558883611441565b5463ffffffff16111561106a57809150611078565b611075816001612050565b92505b50611034565b80156110a7576110918660018303611441565b54600160201b90046001600160e01b03166110aa565b60005b6001600160e01b03169695505050505050565b610524828261146a565b60006110d2836105c0565b905060006110df8461060d565b6001600160a01b0385811660008181526009602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610d148284836114f4565b600063ffffffff8211156111ac5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016104e8565b5090565b606060ff83146111ca576111c38361160d565b905061045d565b8180546111d690612006565b80601f016020809104026020016040519081016040528092919081815260200182805461120290612006565b801561124f5780601f106112245761010080835404028352916020019161124f565b820191906000526020600020905b81548152906001019060200180831161123257829003601f168201915b5050505050905061045d565b600065ffffffffffff8211156111ac5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b60648201526084016104e8565b610524828261164c565b600061045d6112d9610eb2565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600061130a87878787611664565b915091506113178161171e565b5095945050505050565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b505050565b611349838383611863565b60008160000361136b57506000919050565b600060016113788461187e565b901c6001901b90506001818481611391576113916120bf565b048201901c905060018184816113a9576113a96120bf565b048201901c905060018184816113c1576113c16120bf565b048201901c905060018184816113d9576113d96120bf565b048201901c905060018184816113f1576113f16120bf565b048201901c90506001818481611409576114096120bf565b048201901c90506001818481611421576114216120bf565b048201901c90506105138182858161143b5761143b6120bf565b04611912565b600091825260209091200190565b600061145e60028484186120d5565b61051390848416612050565b6114748282611928565b6002546001600160e01b0310156114e65760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016104e8565b610d14600b6119dd836119e9565b816001600160a01b0316836001600160a01b0316141580156115165750600081115b15611349576001600160a01b03831615611592576001600160a01b0383166000908152600a60205260408120819061155190611b57856119e9565b91509150846001600160a01b031660008051602061212e8339815191528383604051611587929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615611349576001600160a01b0382166000908152600a6020526040812081906115c8906119dd856119e9565b91509150836001600160a01b031660008051602061212e83398151915283836040516115fe929190918252602082015260400190565b60405180910390a25050505050565b6060600061161a83611b63565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6116568282611b8b565b610d14600b611b57836119e9565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156116915750600090506003611715565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156116e5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661170e57600060019250925050611715565b9150600090505b94509492505050565b6000816004811115611732576117326120f7565b0361173a5750565b600181600481111561174e5761174e6120f7565b036117965760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016104e8565b60028160048111156117aa576117aa6120f7565b036117f75760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104e8565b600381600481111561180b5761180b6120f7565b036105e85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104e8565b61134961186f846105c0565b611878846105c0565b836114f4565b600080608083901c1561189357608092831c92015b604083901c156118a557604092831c92015b602083901c156118b757602092831c92015b601083901c156118c957601092831c92015b600883901c156118db57600892831c92015b600483901c156118ed57600492831c92015b600283901c156118ff57600292831c92015b600183901c1561045d5760010192915050565b60008183106119215781610513565b5090919050565b6001600160a01b03821661197e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e8565b80600260008282546119909190612050565b90915550506001600160a01b0382166000818152602081815260408083208054860190555184815260008051602061210e833981519152910160405180910390a36105246000838361134e565b60006105138284612050565b82546000908190818115611a3357611a048760018403611441565b60408051808201909152905463ffffffff81168252600160201b90046001600160e01b03166020820152611a48565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350611a6884868863ffffffff16565b9250600082118015611a925750611a7d61070a565b65ffffffffffff16816000015163ffffffff16145b15611ad457611aa083611cb2565b611aad8860018503611441565b80546001600160e01b0392909216600160201b0263ffffffff909216919091179055611b4d565b866040518060400160405280611af8611aeb61070a565b65ffffffffffff16611147565b63ffffffff168152602001611b0c86611cb2565b6001600160e01b039081169091528254600181018455600093845260209384902083519490930151909116600160201b0263ffffffff909316929092179101555b5050935093915050565b600061051382846120ac565b600060ff8216601f81111561045d57604051632cd44ac360e21b815260040160405180910390fd5b6001600160a01b038216611beb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104e8565b6001600160a01b03821660009081526020819052604090205481811015611c5f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104e8565b6001600160a01b03831660008181526020818152604080832086860390556002805487900390555185815291929160008051602061210e833981519152910160405180910390a36113498360008461134e565b60006001600160e01b038211156111ac5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016104e8565b6000815180845260005b81811015611d4157602081850181015186830182015201611d25565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006105136020830184611d1b565b80356001600160a01b0381168114611d8b57600080fd5b919050565b60008060408385031215611da357600080fd5b611dac83611d74565b946020939093013593505050565b600080600060608486031215611dcf57600080fd5b611dd884611d74565b9250611de660208501611d74565b9150604084013590509250925092565b600060208284031215611e0857600080fd5b61051382611d74565b60ff60f81b881681526000602060e081840152611e3160e084018a611d1b565b8381036040850152611e43818a611d1b565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015611e9557835183529284019291840191600101611e79565b50909c9b505050505050505050505050565b600060208284031215611eb957600080fd5b5035919050565b803560ff81168114611d8b57600080fd5b60008060008060008060c08789031215611eea57600080fd5b611ef387611d74565b95506020870135945060408701359350611f0f60608801611ec0565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611f4457600080fd5b611f4d88611d74565b9650611f5b60208901611d74565b95506040880135945060608801359350611f7760808901611ec0565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611fa657600080fd5b611faf83611d74565b9150611fbd60208401611d74565b90509250929050565b60008060408385031215611fd957600080fd5b611fe283611d74565b9150602083013563ffffffff81168114611ffb57600080fd5b809150509250929050565b600181811c9082168061201a57607f821691505b60208210810361134357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561045d5761045d61203a565b60208082526019908201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b8181038181111561045d5761045d61203a565b634e487b7160e01b600052601260045260246000fd5b6000826120f257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724a26469706673582212203a5310eee09e5db4be7adb66ffac509cdfad5a67471f5fcddb848662d7e41e8b64736f6c63430008140033";

type MockGovTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockGovTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockGovToken__factory extends ContractFactory {
  constructor(...args: MockGovTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockGovToken> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<MockGovToken>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override attach(address: string): MockGovToken {
    return super.attach(address) as MockGovToken;
  }
  override connect(signer: Signer): MockGovToken__factory {
    return super.connect(signer) as MockGovToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGovTokenInterface {
    return new utils.Interface(_abi) as MockGovTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockGovToken {
    return new Contract(address, _abi, signerOrProvider) as MockGovToken;
  }
}
