// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockVesterV1,
  MockVesterV1Interface,
} from "../../../contracts/mock/MockVesterV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bonusRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setBonusRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161039638038061039683398101604081905261002f91610174565b60005b82518110156100965781818151811061004d5761004d61024b565b602002602001015160008085848151811061006a5761006a61024b565b6020908102919091018101516001600160a01b0316825281019190915260400160002055600101610032565b505050610261565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156100dc576100dc61009e565b604052919050565b60006001600160401b038211156100fd576100fd61009e565b5060051b60200190565b600082601f83011261011857600080fd5b815161012b610126826100e4565b6100b4565b8082825260208201915060208360051b86010192508583111561014d57600080fd5b602085015b8381101561016a578051835260209283019201610152565b5095945050505050565b6000806040838503121561018757600080fd5b82516001600160401b0381111561019d57600080fd5b8301601f810185136101ae57600080fd5b80516101bc610126826100e4565b8082825260208201915060208360051b8501019250878311156101de57600080fd5b6020840193505b828410156102155783516001600160a01b038116811461020457600080fd5b8252602093840193909101906101e5565b6020870151909550925050506001600160401b0381111561023557600080fd5b61024185828601610107565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b610126806102706000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806341f22724146037578063a2545fa5146060575b600080fd5b605e604236600460aa565b6001600160a01b03909116600090815260208190526040902055565b005b607d606b36600460d1565b60006020819052908152604090205481565b60405190815260200160405180910390f35b80356001600160a01b038116811460a557600080fd5b919050565b6000806040838503121560bc57600080fd5b60c383608f565b946020939093013593505050565b60006020828403121560e257600080fd5b60e982608f565b939250505056fea26469706673582212200637917ce2e26efbc2cdd8056c655906c7e133d0179322cf93061684d318fdb564736f6c634300081d0033";

type MockVesterV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockVesterV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockVesterV1__factory extends ContractFactory {
  constructor(...args: MockVesterV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _accounts: PromiseOrValue<string>[],
    _amounts: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockVesterV1> {
    return super.deploy(
      _accounts,
      _amounts,
      overrides || {}
    ) as Promise<MockVesterV1>;
  }
  override getDeployTransaction(
    _accounts: PromiseOrValue<string>[],
    _amounts: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_accounts, _amounts, overrides || {});
  }
  override attach(address: string): MockVesterV1 {
    return super.attach(address) as MockVesterV1;
  }
  override connect(signer: Signer): MockVesterV1__factory {
    return super.connect(signer) as MockVesterV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockVesterV1Interface {
    return new utils.Interface(_abi) as MockVesterV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockVesterV1 {
    return new Contract(address, _abi, signerOrProvider) as MockVesterV1;
  }
}
