// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockMultichainReaderOriginator,
  MockMultichainReaderOriginatorInterface,
} from "../../../../contracts/mock/MockMultichainReaderOriginator.sol/MockMultichainReaderOriginator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MultichainReader",
        name: "_multichainReader",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "chainId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct MultichainReaderUtils.ReadRequestInputs[]",
        name: "readRequestInputs",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "gasLimit",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "returnDataSize",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "msgValue",
            type: "uint128",
          },
        ],
        internalType: "struct MultichainReaderUtils.ExtraOptionsInputs",
        name: "extraOptionsInputs",
        type: "tuple",
      },
    ],
    name: "callSendReadRequests",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256",
              },
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple",
          },
        ],
        internalType: "struct MessagingReceipt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "chainId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct MultichainReaderUtils.ReadRequestInputs[]",
        name: "readRequestInputs",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "gasLimit",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "returnDataSize",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "msgValue",
            type: "uint128",
          },
        ],
        internalType: "struct MultichainReaderUtils.ExtraOptionsInputs",
        name: "extraOptionsInputs",
        type: "tuple",
      },
    ],
    name: "callquoteReadFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestReceivedData",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "readData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestTimeStamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multichainReader",
    outputs: [
      {
        internalType: "contract MultichainReader",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "readData",
            type: "bytes",
          },
        ],
        internalType: "struct MultichainReaderUtils.ReceivedData",
        name: "receivedDataInput",
        type: "tuple",
      },
    ],
    name: "processLzReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
    ],
    name: "receivedData",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "readData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultichainReader",
        name: "_multichainReader",
        type: "address",
      },
    ],
    name: "setmultichainReader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b84380380610b8483398101604081905261002f91610054565b600480546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610af1806100936000396000f3fe60806040526004361061006f5760003560e01c80635d3aabf91461007b578063669d7ce4146100a45780636dd879a8146100dc5780638545f4ca1461011b57806389063d3f14610149578063a095f0f214610194578063a16f187e146101a9578063a87e9c3b146101c957600080fd5b3661007657005b600080fd5b34801561008757600080fd5b5061009160035481565b6040519081526020015b60405180910390f35b3480156100b057600080fd5b506004546100c4906001600160a01b031681565b6040516001600160a01b03909116815260200161009b565b3480156100e857600080fd5b506101196100f73660046104b7565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b005b34801561012757600080fd5b5061013b6101363660046104db565b6101e9565b60405161009b9291906104f4565b61015c61015736600461054a565b61028e565b60408051825181526020808401516001600160401b03168183015292820151805192820192909252910151606082015260800161009b565b3480156101a057600080fd5b5061013b610394565b3480156101b557600080fd5b506101196101c4366004610649565b6103a8565b3480156101d557600080fd5b506100916101e436600461054a565b6103d8565b6000602081905290815260409020805460018201805491929161020b9061071b565b80601f01602080910402602001604051908101604052809291908181526020018280546102379061071b565b80156102845780601f1061025957610100808354040283529160200191610284565b820191906000526020600020905b81548152906001019060200180831161026757829003601f168201915b5050505050905082565b610296610458565b60048054604051632fca305360e21b81526000926001600160a01b039092169163bf28c14c916102cc91899189918991016107f2565b6040805180830381865afa1580156102e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c9190610920565b60048054825160405163c323228360e01b81529394506000936001600160a01b039092169263c323228392610347918b918b918b91016107f2565b60806040518083038185885af1158015610365573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061038a919061093c565b9695505050505050565b600180546002805491929161020b9061071b565b600082815260208181526040909120825181559082015182919060018201906103d190826109fc565b5050505050565b60048054604051632fca305360e21b815260009283926001600160a01b03169163bf28c14c9161040e91899189918991016107f2565b6040805180830381865afa15801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e9190610920565b5195945050505050565b60405180606001604052806000801916815260200160006001600160401b0316815260200161049a604051806040016040528060008152602001600081525090565b905290565b6001600160a01b03811681146104b457600080fd5b50565b6000602082840312156104c957600080fd5b81356104d48161049f565b9392505050565b6000602082840312156104ed57600080fd5b5035919050565b82815260006020604081840152835180604085015260005b818110156105285785810183015185820160600152820161050c565b506000606082860101526060601f19601f830116850101925050509392505050565b6000806000838503608081121561056057600080fd5b84356001600160401b038082111561057757600080fd5b818701915087601f83011261058b57600080fd5b81358181111561059a57600080fd5b8860208260051b85010111156105af57600080fd5b6020929092019550909350506060601f19820112156105cd57600080fd5b506020840190509250925092565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715610613576106136105db565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610641576106416105db565b604052919050565b6000806040838503121561065c57600080fd5b823591506020808401356001600160401b038082111561067b57600080fd5b908501906040828803121561068f57600080fd5b6106976105f1565b8235815283830135828111156106ac57600080fd5b80840193505087601f8401126106c157600080fd5b8235828111156106d3576106d36105db565b6106e5601f8201601f19168601610619565b925080835288858286010111156106fb57600080fd5b808585018685013760009083018501529283015250919491935090915050565b600181811c9082168061072f57607f821691505b60208210810361074f57634e487b7160e01b600052602260045260246000fd5b50919050565b803563ffffffff8116811461076957600080fd5b919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b80356001600160801b038116811461076957600080fd5b6001600160801b03806107c083610797565b16835263ffffffff6107d460208401610755565b166020840152806107e760408401610797565b166040840152505050565b60808082528101839052600060a0600585901b8301810190830186835b878110156108d457858403609f190183528135368a9003605e1901811261083557600080fd5b8901606063ffffffff61084783610755565b1686526020808301356108598161049f565b6001600160a01b03168782015260408381013536859003601e1901811261087f57600080fd5b9093018181019390356001600160401b0381111561089c57600080fd5b8036038513156108ab57600080fd5b83828a01526108bd848a01828761076e565b98505050948501949390930192505060010161080f565b505050809150506108e860208301846107ae565b949350505050565b60006040828403121561090257600080fd5b61090a6105f1565b9050815181526020820151602082015292915050565b60006040828403121561093257600080fd5b6104d483836108f0565b60006080828403121561094e57600080fd5b604051606081016001600160401b038082118383101715610971576109716105db565b816040528451835260208501519150808216821461098e57600080fd5b5060208201526109a184604085016108f0565b60408201529392505050565b601f8211156109f757600081815260208120601f850160051c810160208610156109d45750805b601f850160051c820191505b818110156109f3578281556001016109e0565b5050505b505050565b81516001600160401b03811115610a1557610a156105db565b610a2981610a23845461071b565b846109ad565b602080601f831160018114610a5e5760008415610a465750858301515b600019600386901b1c1916600185901b1785556109f3565b600085815260208120601f198616915b82811015610a8d57888601518255948401946001909101908401610a6e565b5085821015610aab5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220dcf7de9d16399fd47c0aa62482664b0d20b67085f8655e64d8088f0e89ffb9ac64736f6c63430008140033";

type MockMultichainReaderOriginatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockMultichainReaderOriginatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockMultichainReaderOriginator__factory extends ContractFactory {
  constructor(...args: MockMultichainReaderOriginatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _multichainReader: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockMultichainReaderOriginator> {
    return super.deploy(
      _multichainReader,
      overrides || {}
    ) as Promise<MockMultichainReaderOriginator>;
  }
  override getDeployTransaction(
    _multichainReader: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_multichainReader, overrides || {});
  }
  override attach(address: string): MockMultichainReaderOriginator {
    return super.attach(address) as MockMultichainReaderOriginator;
  }
  override connect(signer: Signer): MockMultichainReaderOriginator__factory {
    return super.connect(signer) as MockMultichainReaderOriginator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockMultichainReaderOriginatorInterface {
    return new utils.Interface(_abi) as MockMultichainReaderOriginatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockMultichainReaderOriginator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockMultichainReaderOriginator;
  }
}
