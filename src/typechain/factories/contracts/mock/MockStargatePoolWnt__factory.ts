// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockStargatePoolWnt,
  MockStargatePoolWntInterface,
} from "../../../contracts/mock/MockStargatePoolWnt";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wnt",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BRIDGE_OUT_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SRC_EID",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraOptions",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "composeMsg",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "oftCmd",
            type: "bytes",
          },
        ],
        internalType: "struct SendParam",
        name: "_sendParam",
        type: "tuple",
      },
    ],
    name: "quoteOFT",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountLD",
            type: "uint256",
          },
        ],
        internalType: "struct OFTLimit",
        name: "oftLimit",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "feeAmountLD",
            type: "int256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct OFTFeeDetail[]",
        name: "oftFeeDetails",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amountSentLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountReceivedLD",
            type: "uint256",
          },
        ],
        internalType: "struct OFTReceipt",
        name: "oftReceipt",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraOptions",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "composeMsg",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "oftCmd",
            type: "bytes",
          },
        ],
        internalType: "struct SendParam",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "quoteSend",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256",
          },
        ],
        internalType: "struct MessagingFee",
        name: "msgFee",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraOptions",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "composeMsg",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "oftCmd",
            type: "bytes",
          },
        ],
        internalType: "struct SendParam",
        name: "_sendParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256",
          },
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256",
              },
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple",
          },
        ],
        internalType: "struct MessagingReceipt",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amountSentLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountReceivedLD",
            type: "uint256",
          },
        ],
        internalType: "struct OFTReceipt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ca0380380610ca083398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610c0761009960003960008181610172015281816102ed01526104060152610c076000f3fe6080604052600436106100605760003560e01c80630d35b415146100655780633b6f743b1461009d578063b02f1cc8146100ca578063c7c7f5b3146100f3578063c9279a7414610114578063cf46111a1461013e578063fc0c546a14610160575b600080fd5b34801561007157600080fd5b506100856100803660046105ef565b6101ac565b6040516100949392919061068f565b60405180910390f35b3480156100a957600080fd5b506100bd6100b83660046108da565b610291565b604051610094919061092b565b3480156100d657600080fd5b506100e566038d7ea4c6800081565b604051908152602001610094565b610106610101366004610950565b6102bc565b6040516100949291906109e9565b34801561012057600080fd5b50610129600181565b60405163ffffffff9091168152602001610094565b34801561014a57600080fd5b5061015e610159366004610a25565b6103b5565b005b34801561016c57600080fd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610094565b604080518082019091526000808252602082015260606101ca6105b1565b6040805180820182526000815260001960208201528151600180825281840190935290945090816020015b6040805180820190915260008152606060208201528152602001906001900390816101f5579050509150604051806040016040528060008152602001604051806040016040528060078152602001664e6f206665657360c81b8152508152508260008151811061026757610267610aab565b60209081029190910181019190915260408051808201825295013580865290850152509092909190565b6102996105b1565b506040805180820190915266038d7ea4c680008152600060208201525b92915050565b6102c46105cb565b6102cc6105b1565b602085015160408087015190516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd91610325913391869190600401610ac1565b6020604051808303816000875af1158015610344573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103689190610ae5565b505060408051606081018252428152600160208083019190915282518084018452348152600081830152828401528251808401845292880180518452519083015292509050935093915050565b60003383836040516020016103cc93929190610b02565b604051602081830303815290604052905060006103ec426001878561057f565b6040516323b872dd60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd9061043f9033908a908a90600401610ac1565b6020604051808303816000875af115801561045e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104829190610ae5565b506000866001600160a01b031630600160001b84306040516024016104aa9493929190610b1c565b60408051601f198184030181529181526020820180516001600160e01b0316630685081360e51b179052516104df9190610b63565b6000604051808303816000865af19150503d806000811461051c576040519150601f19603f3d011682016040523d82523d6000602084013e610521565b606091505b50509050806105765760405162461bcd60e51b815260206004820152601f60248201527f4d6f636b2053746172676174653a206c7a436f6d706f7365206661696c656400604482015260640160405180910390fd5b50505050505050565b6060848484846040516020016105989493929190610b7f565b6040516020818303038152906040529050949350505050565b604051806040016040528060008152602001600081525090565b60408051606081018252600080825260208201529081016105ea6105b1565b905290565b60006020828403121561060157600080fd5b81356001600160401b0381111561061757600080fd5b820160e0818503121561062957600080fd5b9392505050565b80518252602090810151910152565b60005b8381101561065a578181015183820152602001610642565b50506000910152565b6000815180845261067b81602086016020860161063f565b601f01601f19169290920160200192915050565b600060a0820161069f8387610630565b604060a08185015281865180845260c08601915060c08160051b8701019350602080890160005b838110156107055788870360bf190185528151805188528301518388018790526106f287890182610663565b97505093820193908201906001016106c6565b5050505050508091505061071c6060830184610630565b949350505050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b038111828210171561075c5761075c610724565b60405290565b803563ffffffff8116811461077657600080fd5b919050565b600082601f83011261078c57600080fd5b81356001600160401b03808211156107a6576107a6610724565b604051601f8301601f19908116603f011681019082821181831017156107ce576107ce610724565b816040528381528660208588010111156107e757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060e0828403121561081957600080fd5b61082161073a565b905061082c82610762565b815260208281013590820152604080830135908201526060808301359082015260808201356001600160401b038082111561086657600080fd5b6108728583860161077b565b608084015260a084013591508082111561088b57600080fd5b6108978583860161077b565b60a084015260c08401359150808211156108b057600080fd5b506108bd8482850161077b565b60c08301525092915050565b80151581146108d757600080fd5b50565b600080604083850312156108ed57600080fd5b82356001600160401b0381111561090357600080fd5b61090f85828601610807565b9250506020830135610920816108c9565b809150509250929050565b604081016102b68284610630565b80356001600160a01b038116811461077657600080fd5b6000806000838503608081121561096657600080fd5b84356001600160401b038082111561097d57600080fd5b61098988838901610807565b95506040601f198401121561099d57600080fd5b604051925060408301915082821081831117156109bc576109bc610724565b5060409081526020868101358352908601359082015291506109e060608501610939565b90509250925092565b825181526020808401516001600160401b03169082015260408084015160c0830191610a1790840182610630565b506106296080830184610630565b60008060008060608587031215610a3b57600080fd5b610a4485610939565b93506020850135925060408501356001600160401b0380821115610a6757600080fd5b818701915087601f830112610a7b57600080fd5b813581811115610a8a57600080fd5b886020828501011115610a9c57600080fd5b95989497505060200194505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610af757600080fd5b8151610629816108c9565b838152818360208301376000910160200190815292915050565b600060018060a01b03808716835285602084015260a06040840152610b4460a0840186610663565b9316606083015250808203608090910152600081526020019392505050565b60008251610b7581846020870161063f565b9190910192915050565b60c085901b6001600160c01b031916815260e084901b6001600160e01b0319166008820152600c81018390528151600090610bc181602c85016020870161063f565b91909101602c019594505050505056fea2646970667358221220f9637bb2ee2e5bdd5e6bdc27e0138e2d5d01d6c45fcb56c6a772b0ad56c73d6564736f6c63430008140033";

type MockStargatePoolWntConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStargatePoolWntConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStargatePoolWnt__factory extends ContractFactory {
  constructor(...args: MockStargatePoolWntConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wnt: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockStargatePoolWnt> {
    return super.deploy(_wnt, overrides || {}) as Promise<MockStargatePoolWnt>;
  }
  override getDeployTransaction(
    _wnt: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_wnt, overrides || {});
  }
  override attach(address: string): MockStargatePoolWnt {
    return super.attach(address) as MockStargatePoolWnt;
  }
  override connect(signer: Signer): MockStargatePoolWnt__factory {
    return super.connect(signer) as MockStargatePoolWnt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStargatePoolWntInterface {
    return new utils.Interface(_abi) as MockStargatePoolWntInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStargatePoolWnt {
    return new Contract(address, _abi, signerOrProvider) as MockStargatePoolWnt;
  }
}
