/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockStargatePoolWnt,
  MockStargatePoolWntInterface,
} from "../../../contracts/mock/MockStargatePoolWnt";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wnt",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BRIDGE_OUT_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraOptions",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "composeMsg",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "oftCmd",
            type: "bytes",
          },
        ],
        internalType: "struct SendParam",
        name: "_sendParam",
        type: "tuple",
      },
    ],
    name: "quoteOFT",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountLD",
            type: "uint256",
          },
        ],
        internalType: "struct OFTLimit",
        name: "oftLimit",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "feeAmountLD",
            type: "int256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct OFTFeeDetail[]",
        name: "oftFeeDetails",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amountSentLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountReceivedLD",
            type: "uint256",
          },
        ],
        internalType: "struct OFTReceipt",
        name: "oftReceipt",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraOptions",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "composeMsg",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "oftCmd",
            type: "bytes",
          },
        ],
        internalType: "struct SendParam",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "quoteSend",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256",
          },
        ],
        internalType: "struct MessagingFee",
        name: "msgFee",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraOptions",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "composeMsg",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "oftCmd",
            type: "bytes",
          },
        ],
        internalType: "struct SendParam",
        name: "_sendParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256",
          },
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256",
              },
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple",
          },
        ],
        internalType: "struct MessagingReceipt",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amountSentLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountReceivedLD",
            type: "uint256",
          },
        ],
        internalType: "struct OFTReceipt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610c6b380380610c6b83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610bd26100996000396000818161013d015281816102b801526103d10152610bd26000f3fe6080604052600436106100555760003560e01c80630d35b4151461005a5780633b6f743b14610092578063b02f1cc8146100bf578063c7c7f5b3146100e8578063cf46111a14610109578063fc0c546a1461012b575b600080fd5b34801561006657600080fd5b5061007a6100753660046105ba565b610177565b6040516100899392919061065a565b60405180910390f35b34801561009e57600080fd5b506100b26100ad3660046108a5565b61025c565b60405161008991906108f6565b3480156100cb57600080fd5b506100da66038d7ea4c6800081565b604051908152602001610089565b6100fb6100f636600461091b565b610287565b6040516100899291906109b4565b34801561011557600080fd5b506101296101243660046109f0565b610380565b005b34801561013757600080fd5b5061015f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610089565b6040805180820190915260008082526020820152606061019561057c565b6040805180820182526000815260001960208201528151600180825281840190935290945090816020015b6040805180820190915260008152606060208201528152602001906001900390816101c0579050509150604051806040016040528060008152602001604051806040016040528060078152602001664e6f206665657360c81b8152508152508260008151811061023257610232610a76565b60209081029190910181019190915260408051808201825295013580865290850152509092909190565b61026461057c565b506040805180820190915266038d7ea4c680008152600060208201525b92915050565b61028f610596565b61029761057c565b602085015160408087015190516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916323b872dd916102f0913391869190600401610a8c565b6020604051808303816000875af115801561030f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103339190610ab0565b505060408051606081018252428152600160208083019190915282518084018452348152600081830152828401528251808401845292880180518452519083015292509050935093915050565b600033838360405160200161039793929190610acd565b604051602081830303815290604052905060006103b7426001878561054a565b6040516323b872dd60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd9061040a9033908a908a90600401610a8c565b6020604051808303816000875af1158015610429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044d9190610ab0565b506000866001600160a01b031630600160001b84306040516024016104759493929190610ae7565b60408051601f198184030181529181526020820180516001600160e01b0316630685081360e51b179052516104aa9190610b2e565b6000604051808303816000865af19150503d80600081146104e7576040519150601f19603f3d011682016040523d82523d6000602084013e6104ec565b606091505b50509050806105415760405162461bcd60e51b815260206004820152601f60248201527f4d6f636b2053746172676174653a206c7a436f6d706f7365206661696c656400604482015260640160405180910390fd5b50505050505050565b6060848484846040516020016105639493929190610b4a565b6040516020818303038152906040529050949350505050565b604051806040016040528060008152602001600081525090565b60408051606081018252600080825260208201529081016105b561057c565b905290565b6000602082840312156105cc57600080fd5b81356001600160401b038111156105e257600080fd5b820160e081850312156105f457600080fd5b9392505050565b80518252602090810151910152565b60005b8381101561062557818101518382015260200161060d565b50506000910152565b6000815180845261064681602086016020860161060a565b601f01601f19169290920160200192915050565b600060a0820161066a83876105fb565b604060a08185015281865180845260c08601915060c08160051b8701019350602080890160005b838110156106d05788870360bf190185528151805188528301518388018790526106bd8789018261062e565b9750509382019390820190600101610691565b505050505050809150506106e760608301846105fb565b949350505050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610727576107276106ef565b60405290565b803563ffffffff8116811461074157600080fd5b919050565b600082601f83011261075757600080fd5b81356001600160401b0380821115610771576107716106ef565b604051601f8301601f19908116603f01168101908282118183101715610799576107996106ef565b816040528381528660208588010111156107b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060e082840312156107e457600080fd5b6107ec610705565b90506107f78261072d565b815260208281013590820152604080830135908201526060808301359082015260808201356001600160401b038082111561083157600080fd5b61083d85838601610746565b608084015260a084013591508082111561085657600080fd5b61086285838601610746565b60a084015260c084013591508082111561087b57600080fd5b5061088884828501610746565b60c08301525092915050565b80151581146108a257600080fd5b50565b600080604083850312156108b857600080fd5b82356001600160401b038111156108ce57600080fd5b6108da858286016107d2565b92505060208301356108eb81610894565b809150509250929050565b6040810161028182846105fb565b80356001600160a01b038116811461074157600080fd5b6000806000838503608081121561093157600080fd5b84356001600160401b038082111561094857600080fd5b610954888389016107d2565b95506040601f198401121561096857600080fd5b60405192506040830191508282108183111715610987576109876106ef565b5060409081526020868101358352908601359082015291506109ab60608501610904565b90509250925092565b825181526020808401516001600160401b03169082015260408084015160c08301916109e2908401826105fb565b506105f460808301846105fb565b60008060008060608587031215610a0657600080fd5b610a0f85610904565b93506020850135925060408501356001600160401b0380821115610a3257600080fd5b818701915087601f830112610a4657600080fd5b813581811115610a5557600080fd5b886020828501011115610a6757600080fd5b95989497505060200194505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610ac257600080fd5b81516105f481610894565b838152818360208301376000910160200190815292915050565b600060018060a01b03808716835285602084015260a06040840152610b0f60a084018661062e565b9316606083015250808203608090910152600081526020019392505050565b60008251610b4081846020870161060a565b9190910192915050565b60c085901b6001600160c01b031916815260e084901b6001600160e01b0319166008820152600c81018390528151600090610b8c81602c85016020870161060a565b91909101602c019594505050505056fea2646970667358221220605c7b911f1e5435afd93f8648d2234148377a6085f22226407f4240e4cef34e64736f6c63430008140033";

type MockStargatePoolWntConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStargatePoolWntConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStargatePoolWnt__factory extends ContractFactory {
  constructor(...args: MockStargatePoolWntConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wnt: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockStargatePoolWnt> {
    return super.deploy(_wnt, overrides || {}) as Promise<MockStargatePoolWnt>;
  }
  override getDeployTransaction(
    _wnt: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_wnt, overrides || {});
  }
  override attach(address: string): MockStargatePoolWnt {
    return super.attach(address) as MockStargatePoolWnt;
  }
  override connect(signer: Signer): MockStargatePoolWnt__factory {
    return super.connect(signer) as MockStargatePoolWnt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStargatePoolWntInterface {
    return new utils.Interface(_abi) as MockStargatePoolWntInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStargatePoolWnt {
    return new Contract(address, _abi, signerOrProvider) as MockStargatePoolWnt;
  }
}
