// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockStargatePoolUsdc,
  MockStargatePoolUsdcInterface,
} from "../../../contracts/mock/MockStargatePoolUsdc";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BRIDGE_OUT_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SRC_EID",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraOptions",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "composeMsg",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "oftCmd",
            type: "bytes",
          },
        ],
        internalType: "struct SendParam",
        name: "_sendParam",
        type: "tuple",
      },
    ],
    name: "quoteOFT",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmountLD",
            type: "uint256",
          },
        ],
        internalType: "struct OFTLimit",
        name: "oftLimit",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "feeAmountLD",
            type: "int256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct OFTFeeDetail[]",
        name: "oftFeeDetails",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amountSentLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountReceivedLD",
            type: "uint256",
          },
        ],
        internalType: "struct OFTReceipt",
        name: "oftReceipt",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraOptions",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "composeMsg",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "oftCmd",
            type: "bytes",
          },
        ],
        internalType: "struct SendParam",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "quoteSend",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256",
          },
        ],
        internalType: "struct MessagingFee",
        name: "msgFee",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "dstEid",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "to",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "extraOptions",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "composeMsg",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "oftCmd",
            type: "bytes",
          },
        ],
        internalType: "struct SendParam",
        name: "_sendParam",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nativeFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzTokenFee",
            type: "uint256",
          },
        ],
        internalType: "struct MessagingFee",
        name: "",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "send",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256",
              },
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple",
          },
        ],
        internalType: "struct MessagingReceipt",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amountSentLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountReceivedLD",
            type: "uint256",
          },
        ],
        internalType: "struct OFTReceipt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract LayerZeroProvider",
        name: "layerZeroProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "updateToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50604051610cdc380380610cdc833981016040819052602c916050565b600080546001600160a01b0319166001600160a01b0392909216919091179055607e565b600060208284031215606157600080fd5b81516001600160a01b0381168114607757600080fd5b9392505050565b610c4f8061008d6000396000f3fe60806040526004361061006f5760003560e01c80630d35b4151461007b5780633b6f743b146100b35780637ad3def2146100e0578063b02f1cc814610102578063c7c7f5b31461012b578063c9279a741461014c578063cf46111a14610176578063fc0c546a1461018957600080fd5b3661007657005b600080fd5b34801561008757600080fd5b5061009b610096366004610614565b6101c1565b6040516100aa939291906106b4565b60405180910390f35b3480156100bf57600080fd5b506100d36100ce36600461090f565b6102a6565b6040516100aa9190610960565b3480156100ec57600080fd5b506101006100fb366004610983565b6102d1565b005b34801561010e57600080fd5b5061011d66038d7ea4c6800081565b6040519081526020016100aa565b61013e6101393660046109a0565b610346565b6040516100aa929190610a40565b34801561015857600080fd5b50610161600181565b60405163ffffffff90911681526020016100aa565b610100610184366004610a7c565b610422565b34801561019557600080fd5b506000546101a9906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b604080518082019091526000808252602082015260606101df6105d6565b6040805180820182526000815260001960208201528151600180825281840190935290945090816020015b60408051808201909152600081526060602082015281526020019060019003908161020a579050509150604051806040016040528060008152602001604051806040016040528060078152602001664e6f206665657360c81b8152508152508260008151811061027c5761027c610b06565b60209081029190910181019190915260408051808201825295013580865290850152509092909190565b6102ae6105d6565b506040805180820190915266038d7ea4c680008152600060208201525b92915050565b6001600160a01b0381166103245760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61034e6105f0565b6103566105d6565b602085015160005460408088015190516323b872dd60e01b81526001600160a01b03909216916323b872dd916103929133918691600401610b1c565b6020604051808303816000875af11580156103b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d59190610b40565b505060408051606081018252428152600160208083019190915282518084018452348152600081830152828401528251808401845292880180518452519083015292509050935093915050565b600033838360405160200161043993929190610b5d565b6040516020818303038152906040529050600061045942600187856105a4565b6000549091506001600160a01b03166104bc578434146104b75760405162461bcd60e51b8152602060048201526019602482015278125b98dbdc9c9958dd0811551208185b5bdd5b9d081cd95b9d603a1b604482015260640161031b565b610535565b6000546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906104f09033908a908a90600401610b1c565b6020604051808303816000875af115801561050f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105339190610b40565b505b604051630685081360e51b81526001600160a01b0387169063d0a1026090349061056a90309060019087908390600401610b77565b6000604051808303818588803b15801561058357600080fd5b505af1158015610597573d6000803e3d6000fd5b5050505050505050505050565b6060848484846040516020016105bd9493929190610bc7565b6040516020818303038152906040529050949350505050565b604051806040016040528060008152602001600081525090565b604080516060810182526000808252602082015290810161060f6105d6565b905290565b60006020828403121561062657600080fd5b81356001600160401b0381111561063c57600080fd5b820160e0818503121561064e57600080fd5b9392505050565b80518252602090810151910152565b60005b8381101561067f578181015183820152602001610667565b50506000910152565b600081518084526106a0816020860160208601610664565b601f01601f19169290920160200192915050565b600060a082016106c48387610655565b60a0604084015280855180835260c08501915060c08160051b86010192506020870160005b828110156107315760bf19878603018452815180518652602081015190506040602087015261071b6040870182610688565b95505060209384019391909101906001016106e9565b50505050809150506107466060830184610655565b949350505050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b03811182821017156107865761078661074e565b60405290565b803563ffffffff811681146107a057600080fd5b919050565b600082601f8301126107b657600080fd5b81356001600160401b038111156107cf576107cf61074e565b604051601f8201601f19908116603f011681016001600160401b03811182821017156107fd576107fd61074e565b60405281815283820160200185101561081557600080fd5b816020850160208301376000918101602001919091529392505050565b600060e0828403121561084457600080fd5b61084c610764565b90506108578261078c565b815260208281013590820152604080830135908201526060808301359082015260808201356001600160401b0381111561089057600080fd5b61089c848285016107a5565b60808301525060a08201356001600160401b038111156108bb57600080fd5b6108c7848285016107a5565b60a08301525060c08201356001600160401b038111156108e657600080fd5b6108f2848285016107a5565b60c08301525092915050565b801515811461090c57600080fd5b50565b6000806040838503121561092257600080fd5b82356001600160401b0381111561093857600080fd5b61094485828601610832565b9250506020830135610955816108fe565b809150509250929050565b604081016102cb8284610655565b6001600160a01b038116811461090c57600080fd5b60006020828403121561099557600080fd5b813561064e8161096e565b600080600083850360808112156109b657600080fd5b84356001600160401b038111156109cc57600080fd5b6109d887828801610832565b9450506040601f19820112156109ed57600080fd5b50604080519081016001600160401b0381118282101715610a1057610a1061074e565b60409081526020868101358352908601359082015291506060840135610a358161096e565b809150509250925092565b825181526020808401516001600160401b03169082015260408084015160c0830191610a6e90840182610655565b5061064e6080830184610655565b60008060008060608587031215610a9257600080fd5b8435610a9d8161096e565b93506020850135925060408501356001600160401b03811115610abf57600080fd5b8501601f81018713610ad057600080fd5b80356001600160401b03811115610ae657600080fd5b876020828401011115610af857600080fd5b949793965060200194505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610b5257600080fd5b815161064e816108fe565b838152818360208301376000910160200190815292915050565b60018060a01b038516815283602082015260a060408201526000610b9e60a0830185610688565b6001600160a01b0393909316606083015250808203608090910152600081526020019392505050565b60c085901b6001600160c01b031916815260e084901b6001600160e01b0319166008820152600c81018390528151600090610c0981602c850160208701610664565b91909101602c019594505050505056fea26469706673582212208798b1b9c8621c65b009c16f3570d210fe5007fd156a63754572bcb5822c64ef64736f6c634300081d0033";

type MockStargatePoolUsdcConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStargatePoolUsdcConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStargatePoolUsdc__factory extends ContractFactory {
  constructor(...args: MockStargatePoolUsdcConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockStargatePoolUsdc> {
    return super.deploy(
      _usdc,
      overrides || {}
    ) as Promise<MockStargatePoolUsdc>;
  }
  override getDeployTransaction(
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_usdc, overrides || {});
  }
  override attach(address: string): MockStargatePoolUsdc {
    return super.attach(address) as MockStargatePoolUsdc;
  }
  override connect(signer: Signer): MockStargatePoolUsdc__factory {
    return super.connect(signer) as MockStargatePoolUsdc__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStargatePoolUsdcInterface {
    return new utils.Interface(_abi) as MockStargatePoolUsdcInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStargatePoolUsdc {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockStargatePoolUsdc;
  }
}
