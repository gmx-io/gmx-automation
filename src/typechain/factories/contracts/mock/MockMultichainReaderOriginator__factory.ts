// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockMultichainReaderOriginator,
  MockMultichainReaderOriginatorInterface,
} from "../../../contracts/mock/MockMultichainReaderOriginator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MultichainReader",
        name: "_multichainReader",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "targetChainEid",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct MultichainReaderUtils.ReadRequestInputs[]",
        name: "readRequestInputs",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "gasLimit",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "returnDataSize",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "msgValue",
            type: "uint128",
          },
        ],
        internalType: "struct MultichainReaderUtils.ExtraOptionsInputs",
        name: "extraOptionsInputs",
        type: "tuple",
      },
    ],
    name: "callQuoteReadFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "targetChainEid",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct MultichainReaderUtils.ReadRequestInputs[]",
        name: "readRequestInputs",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "gasLimit",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "returnDataSize",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "msgValue",
            type: "uint128",
          },
        ],
        internalType: "struct MultichainReaderUtils.ExtraOptionsInputs",
        name: "extraOptionsInputs",
        type: "tuple",
      },
    ],
    name: "callSendReadRequests",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256",
              },
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple",
          },
        ],
        internalType: "struct MessagingReceipt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestGuid",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestReceivedData",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "readData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multichainReader",
    outputs: [
      {
        internalType: "contract MultichainReader",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "readData",
            type: "bytes",
          },
        ],
        internalType: "struct MultichainReaderUtils.ReceivedData",
        name: "receivedDataParam",
        type: "tuple",
      },
    ],
    name: "processLzReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
    ],
    name: "receivedData",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "readData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultichainReader",
        name: "_multichainReader",
        type: "address",
      },
    ],
    name: "setmultichainReader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testRead",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60006080818152602060e0526015610100527f4e6f7468696e67207265636569766564207965742e000000000000000000000061012052606060c090815261014060405260a081905260019283559091906002906200005f90826200015d565b5050503480156200006f57600080fd5b5060405162000da038038062000da0833981016040819052620000929162000229565b600480546001600160a01b0319166001600160a01b03929092169190911790556200025b565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000e357607f821691505b6020821081036200010457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015857600081815260208120601f850160051c81016020861015620001335750805b601f850160051c820191505b8181101562000154578281556001016200013f565b5050505b505050565b81516001600160401b03811115620001795762000179620000b8565b62000191816200018a8454620000ce565b846200010a565b602080601f831160018114620001c95760008415620001b05750858301515b600019600386901b1c1916600185901b17855562000154565b600085815260208120601f198616915b82811015620001fa57888601518255948401946001909101908401620001d9565b5085821015620002195787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200023c57600080fd5b81516001600160a01b03811681146200025457600080fd5b9392505050565b610b35806200026b6000396000f3fe60806040526004361061007a5760003560e01c80631fb86790146100865780635d0486a7146100b9578063669d7ce4146100cf5780636dd879a8146101075780638545f4ca1461014657806389063d3f14610174578063a095f0f2146101bf578063a16f187e146101d4578063d8688fe0146101f457600080fd5b3661008157005b600080fd5b34801561009257600080fd5b506100a66100a13660046104e3565b610209565b6040519081526020015b60405180910390f35b3480156100c557600080fd5b506100a660035481565b3480156100db57600080fd5b506004546100ef906001600160a01b031681565b6040516001600160a01b0390911681526020016100b0565b34801561011357600080fd5b5061014461012236600461058c565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b005b34801561015257600080fd5b506101666101613660046105b0565b610289565b6040516100b09291906105c9565b6101876101823660046104e3565b61032e565b60408051825181526020808401516001600160401b0316818301529282015180519282019290925291015160608201526080016100b0565b3480156101cb57600080fd5b50610166610434565b3480156101e057600080fd5b506101446101ef36600461068d565b610448565b34801561020057600080fd5b506130396100a6565b60048054604051632fca305360e21b815260009283926001600160a01b03169163bf28c14c9161023f91899189918991016107fc565b6040805180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061092a565b5195945050505050565b600060208190529081526040902080546001820180549192916102ab90610946565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790610946565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905082565b61033661049c565b60048054604051632fca305360e21b81526000926001600160a01b039092169163bf28c14c9161036c91899189918991016107fc565b6040805180830381865afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac919061092a565b60048054825160405163c323228360e01b81529394506000936001600160a01b039092169263c3232283926103e7918b918b918b91016107fc565b60806040518083038185885af1158015610405573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061042a9190610980565b9695505050505050565b60018054600280549192916102ab90610946565b600082815260208181526040909120825181559082015182919060018201906104719082610a40565b50505060038290558051600190815560208201518291906002906104959082610a40565b5050505050565b60405180606001604052806000801916815260200160006001600160401b031681526020016104de604051806040016040528060008152602001600081525090565b905290565b600080600083850360808112156104f957600080fd5b84356001600160401b038082111561051057600080fd5b818701915087601f83011261052457600080fd5b81358181111561053357600080fd5b8860208260051b850101111561054857600080fd5b6020929092019550909350506060601f198201121561056657600080fd5b506020840190509250925092565b6001600160a01b038116811461058957600080fd5b50565b60006020828403121561059e57600080fd5b81356105a981610574565b9392505050565b6000602082840312156105c257600080fd5b5035919050565b82815260006020604081840152835180604085015260005b818110156105fd578581018301518582016060015282016105e1565b506000606082860101526060601f19601f830116850101925050509392505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156106575761065761061f565b60405290565b604051601f8201601f191681016001600160401b03811182821017156106855761068561061f565b604052919050565b600080604083850312156106a057600080fd5b823591506020808401356001600160401b03808211156106bf57600080fd5b90850190604082880312156106d357600080fd5b6106db610635565b8235815283830135828111156106f057600080fd5b80840193505087601f84011261070557600080fd5b8235828111156107175761071761061f565b610729601f8201601f1916860161065d565b9250808352888582860101111561073f57600080fd5b808585018685013760009083018501529283015250919491935090915050565b803563ffffffff8116811461077357600080fd5b919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b80356001600160801b038116811461077357600080fd5b6001600160801b03806107ca836107a1565b16835263ffffffff6107de6020840161075f565b166020840152806107f1604084016107a1565b166040840152505050565b60808082528101839052600060a0600585901b8301810190830186835b878110156108de57858403609f190183528135368a9003605e1901811261083f57600080fd5b8901606063ffffffff6108518361075f565b16865260208083013561086381610574565b6001600160a01b03168782015260408381013536859003601e1901811261088957600080fd5b9093018181019390356001600160401b038111156108a657600080fd5b8036038513156108b557600080fd5b83828a01526108c7848a018287610778565b985050509485019493909301925050600101610819565b505050809150506108f260208301846107b8565b949350505050565b60006040828403121561090c57600080fd5b610914610635565b9050815181526020820151602082015292915050565b60006040828403121561093c57600080fd5b6105a983836108fa565b600181811c9082168061095a57607f821691505b60208210810361097a57634e487b7160e01b600052602260045260246000fd5b50919050565b60006080828403121561099257600080fd5b604051606081016001600160401b0380821183831017156109b5576109b561061f565b81604052845183526020850151915080821682146109d257600080fd5b5060208201526109e584604085016108fa565b60408201529392505050565b601f821115610a3b57600081815260208120601f850160051c81016020861015610a185750805b601f850160051c820191505b81811015610a3757828155600101610a24565b5050505b505050565b81516001600160401b03811115610a5957610a5961061f565b610a6d81610a678454610946565b846109f1565b602080601f831160018114610aa25760008415610a8a5750858301515b600019600386901b1c1916600185901b178555610a37565b600085815260208120601f198616915b82811015610ad157888601518255948401946001909101908401610ab2565b5085821015610aef5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220450a4cd074eb6b320f907e7c5a3afd576c402ae9b82a973c63a7c2f41970536c64736f6c63430008140033";

type MockMultichainReaderOriginatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockMultichainReaderOriginatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockMultichainReaderOriginator__factory extends ContractFactory {
  constructor(...args: MockMultichainReaderOriginatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _multichainReader: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockMultichainReaderOriginator> {
    return super.deploy(
      _multichainReader,
      overrides || {}
    ) as Promise<MockMultichainReaderOriginator>;
  }
  override getDeployTransaction(
    _multichainReader: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_multichainReader, overrides || {});
  }
  override attach(address: string): MockMultichainReaderOriginator {
    return super.attach(address) as MockMultichainReaderOriginator;
  }
  override connect(signer: Signer): MockMultichainReaderOriginator__factory {
    return super.connect(signer) as MockMultichainReaderOriginator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockMultichainReaderOriginatorInterface {
    return new utils.Interface(_abi) as MockMultichainReaderOriginatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockMultichainReaderOriginator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockMultichainReaderOriginator;
  }
}
