// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockMultichainReaderOriginator,
  MockMultichainReaderOriginatorInterface,
} from "../../../contracts/mock/MockMultichainReaderOriginator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MultichainReader",
        name: "_multichainReader",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "targetChainEid",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct MultichainReaderUtils.ReadRequestInputs[]",
        name: "readRequestInputs",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "gasLimit",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "returnDataSize",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "msgValue",
            type: "uint128",
          },
        ],
        internalType: "struct MultichainReaderUtils.ExtraOptionsInputs",
        name: "extraOptionsInputs",
        type: "tuple",
      },
    ],
    name: "callQuoteReadFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "targetChainEid",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct MultichainReaderUtils.ReadRequestInputs[]",
        name: "readRequestInputs",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "gasLimit",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "returnDataSize",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "msgValue",
            type: "uint128",
          },
        ],
        internalType: "struct MultichainReaderUtils.ExtraOptionsInputs",
        name: "extraOptionsInputs",
        type: "tuple",
      },
    ],
    name: "callSendReadRequests",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "guid",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nativeFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lzTokenFee",
                type: "uint256",
              },
            ],
            internalType: "struct MessagingFee",
            name: "fee",
            type: "tuple",
          },
        ],
        internalType: "struct MessagingReceipt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "latestGuid",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestReceivedData",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "readData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multichainReader",
    outputs: [
      {
        internalType: "contract MultichainReader",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "readData",
            type: "bytes",
          },
        ],
        internalType: "struct MultichainReaderUtils.ReceivedData",
        name: "receivedDataParam",
        type: "tuple",
      },
    ],
    name: "processLzReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guid",
        type: "bytes32",
      },
    ],
    name: "receivedData",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "readData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultichainReader",
        name: "_multichainReader",
        type: "address",
      },
    ],
    name: "setmultichainReader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testRead",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60006080818152602060e0526015610100527f4e6f7468696e67207265636569766564207965742e000000000000000000000061012052606060c090815261014060405260a0819052600192835590919060029061005d908261014f565b50505034801561006c57600080fd5b50604051610d9d380380610d9d83398101604081905261008b9161020d565b600480546001600160a01b0319166001600160a01b039290921691909117905561023d565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100da57607f821691505b6020821081036100fa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561014a57806000526020600020601f840160051c810160208510156101275750805b601f840160051c820191505b818110156101475760008155600101610133565b50505b505050565b81516001600160401b03811115610168576101686100b0565b61017c8161017684546100c6565b84610100565b6020601f8211600181146101b057600083156101985750848201515b600019600385901b1c1916600184901b178455610147565b600084815260208120601f198516915b828110156101e057878501518255602094850194600190920191016101c0565b50848210156101fe5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60006020828403121561021f57600080fd5b81516001600160a01b038116811461023657600080fd5b9392505050565b610b518061024c6000396000f3fe60806040526004361061007a5760003560e01c80631fb86790146100865780635d0486a7146100b9578063669d7ce4146100cf5780636dd879a8146101075780638545f4ca1461014657806389063d3f14610174578063a095f0f2146101bf578063a16f187e146101d4578063d8688fe0146101f457600080fd5b3661008157005b600080fd5b34801561009257600080fd5b506100a66100a13660046104e3565b610209565b6040519081526020015b60405180910390f35b3480156100c557600080fd5b506100a660035481565b3480156100db57600080fd5b506004546100ef906001600160a01b031681565b6040516001600160a01b0390911681526020016100b0565b34801561011357600080fd5b5061014461012236600461058d565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b005b34801561015257600080fd5b506101666101613660046105b1565b610289565b6040516100b09291906105ca565b6101876101823660046104e3565b61032e565b60408051825181526020808401516001600160401b0316818301529282015180519282019290925291015160608201526080016100b0565b3480156101cb57600080fd5b50610166610434565b3480156101e057600080fd5b506101446101ef36600461068d565b610448565b34801561020057600080fd5b506130396100a6565b60048054604051632fca305360e21b815260009283926001600160a01b03169163bf28c14c9161023f9189918991899101610813565b6040805180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f9190610946565b5195945050505050565b600060208190529081526040902080546001820180549192916102ab90610962565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790610962565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905082565b61033661049c565b60048054604051632fca305360e21b81526000926001600160a01b039092169163bf28c14c9161036c9189918991899101610813565b6040805180830381865afa158015610388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ac9190610946565b60048054825160405163c323228360e01b81529394506000936001600160a01b039092169263c3232283926103e7918b918b918b9101610813565b60806040518083038185885af1158015610405573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061042a919061099c565b9695505050505050565b60018054600280549192916102ab90610962565b600082815260208181526040909120825181559082015182919060018201906104719082610a5d565b50505060038290558051600190815560208201518291906002906104959082610a5d565b5050505050565b60405180606001604052806000801916815260200160006001600160401b031681526020016104de604051806040016040528060008152602001600081525090565b905290565b600080600083850360808112156104f957600080fd5b84356001600160401b0381111561050f57600080fd5b8501601f8101871361052057600080fd5b80356001600160401b0381111561053657600080fd5b8760208260051b840101111561054b57600080fd5b602091909101945092506060601f198201121561056757600080fd5b506020840190509250925092565b6001600160a01b038116811461058a57600080fd5b50565b60006020828403121561059f57600080fd5b81356105aa81610575565b9392505050565b6000602082840312156105c357600080fd5b5035919050565b828152604060208201526000825180604084015260005b818110156105fe57602081860181015160608684010152016105e1565b506000606082850101526060601f19601f8301168401019150509392505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156106575761065761061f565b60405290565b604051601f8201601f191681016001600160401b03811182821017156106855761068561061f565b604052919050565b600080604083850312156106a057600080fd5b8235915060208301356001600160401b038111156106bd57600080fd5b8301604081860312156106cf57600080fd5b6106d7610635565b8135815260208201356001600160401b038111156106f457600080fd5b80830192505085601f83011261070957600080fd5b81356001600160401b038111156107225761072261061f565b610735601f8201601f191660200161065d565b81815287602083860101111561074a57600080fd5b81602085016020830137600060208383010152806020840152505080925050509250929050565b803563ffffffff8116811461078557600080fd5b919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b80356001600160801b038116811461078557600080fd5b6001600160801b036107db826107b3565b16825263ffffffff6107ef60208301610771565b1660208301526001600160801b03610809604083016107b3565b1660408301525050565b60808082528101839052600060a0600585901b830181019083018683605e1936839003015b888210156108f857868503609f19018452823581811261085757600080fd5b8a0163ffffffff61086782610771565b168652602081013561087881610575565b6001600160a01b03166020870152604081013536829003601e1901811261089e57600080fd5b016020810190356001600160401b038111156108b957600080fd5b8036038213156108c857600080fd5b606060408801526108dd60608801828461078a565b96505050602083019250602084019350600182019150610838565b505050508091505061090d60208301846107ca565b949350505050565b60006040828403121561092757600080fd5b61092f610635565b825181526020928301519281019290925250919050565b60006040828403121561095857600080fd5b6105aa8383610915565b600181811c9082168061097657607f821691505b60208210810361099657634e487b7160e01b600052602260045260246000fd5b50919050565b600060808284031280156109af57600080fd5b50604051606081016001600160401b03811182821017156109d2576109d261061f565b6040528251815260208301516001600160401b03811681146109f357600080fd5b6020820152610a058460408501610915565b60408201529392505050565b601f821115610a5857806000526020600020601f840160051c81016020851015610a385750805b601f840160051c820191505b818110156104955760008155600101610a44565b505050565b81516001600160401b03811115610a7657610a7661061f565b610a8a81610a848454610962565b84610a11565b6020601f821160018114610abe5760008315610aa65750848201515b600019600385901b1c1916600184901b178455610495565b600084815260208120601f198516915b82811015610aee5787850151825560209485019460019092019101610ace565b5084821015610b0c5786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fea264697066735822122037f38c5a53d51a9c20a5498897a19642ac3ec2398865f041df2bf881e809673464736f6c634300081d0033";

type MockMultichainReaderOriginatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockMultichainReaderOriginatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockMultichainReaderOriginator__factory extends ContractFactory {
  constructor(...args: MockMultichainReaderOriginatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _multichainReader: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockMultichainReaderOriginator> {
    return super.deploy(
      _multichainReader,
      overrides || {}
    ) as Promise<MockMultichainReaderOriginator>;
  }
  override getDeployTransaction(
    _multichainReader: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_multichainReader, overrides || {});
  }
  override attach(address: string): MockMultichainReaderOriginator {
    return super.attach(address) as MockMultichainReaderOriginator;
  }
  override connect(signer: Signer): MockMultichainReaderOriginator__factory {
    return super.connect(signer) as MockMultichainReaderOriginator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockMultichainReaderOriginatorInterface {
    return new utils.Interface(_abi) as MockMultichainReaderOriginatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockMultichainReaderOriginator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockMultichainReaderOriginator;
  }
}
