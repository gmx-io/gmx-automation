// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { WNT, WNTInterface } from "../../../contracts/mock/WNT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b506040518060400160405280601481526020017f57726170706564204e617469766520546f6b656e00000000000000000000000081525080604051806040016040528060018152602001603160f81b8152506040518060400160405280601481526020017f57726170706564204e617469766520546f6b656e0000000000000000000000008152506040518060400160405280600381526020016215d39560ea1b81525081600390816100c491906102a5565b5060046100d182826102a5565b506100e19150839050600561018c565b610120526100f081600661018c565b61014052815160208084019190912060e052815190820120610100524660a05261017d60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506103d5565b60006020835110156101a8576101a1836101bf565b90506101b9565b816101b384826102a5565b5060ff90505b92915050565b600080829050601f815111156101f3578260405163305a27a960e01b81526004016101ea9190610363565b60405180910390fd5b80516101fe826103b1565b179392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061023057607f821691505b60208210810361025057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102a057806000526020600020601f840160051c8101602085101561027d5750805b601f840160051c820191505b8181101561029d5760008155600101610289565b50505b505050565b81516001600160401b038111156102be576102be610206565b6102d2816102cc845461021c565b84610256565b6020601f82116001811461030657600083156102ee5750848201515b600019600385901b1c1916600184901b17845561029d565b600084815260208120601f198516915b828110156103365787850151825560209485019460019092019101610316565b50848210156103545786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b818110156103915760208186018101516040868401015201610374565b506000604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156102505760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161148d61042f60003960006105380152600061050d01526000610ce801526000610cc001526000610c1b01526000610c4501526000610c6f015261148d6000f3fe6080604052600436106100e45760003560e01c806306fdde03146100e9578063095ea7b31461011457806318160ddd1461014457806323b872dd146101635780632e1a7d4d14610183578063313ce567146101a55780633644e515146101c157806339509351146101d657806340c10f19146101f657806370a08231146102165780637ecebe001461024c57806384b0196e1461026c57806395d89b41146102945780639dc29fac146102a9578063a457c2d7146102c9578063a9059cbb146102e9578063d0e30db014610309578063d505accf14610311578063dd62ed3e14610331575b600080fd5b3480156100f557600080fd5b506100fe610351565b60405161010b91906111bd565b60405180910390f35b34801561012057600080fd5b5061013461012f3660046111f3565b6103e3565b604051901515815260200161010b565b34801561015057600080fd5b506002545b60405190815260200161010b565b34801561016f57600080fd5b5061013461017e36600461121d565b6103fd565b34801561018f57600080fd5b506101a361019e36600461125a565b610421565b005b3480156101b157600080fd5b506040516012815260200161010b565b3480156101cd57600080fd5b506101556104a6565b3480156101e257600080fd5b506101346101f13660046111f3565b6104b5565b34801561020257600080fd5b506101a36102113660046111f3565b6104d7565b34801561022257600080fd5b50610155610231366004611273565b6001600160a01b031660009081526020819052604090205490565b34801561025857600080fd5b50610155610267366004611273565b6104e1565b34801561027857600080fd5b506102816104ff565b60405161010b979695949392919061128e565b3480156102a057600080fd5b506100fe610588565b3480156102b557600080fd5b506101a36102c43660046111f3565b610597565b3480156102d557600080fd5b506101346102e43660046111f3565b6105a1565b3480156102f557600080fd5b506101346103043660046111f3565b61061c565b6101a361062a565b34801561031d57600080fd5b506101a361032c366004611326565b610636565b34801561033d57600080fd5b5061015561034c366004611399565b61079a565b606060038054610360906113cc565b80601f016020809104026020016040519081016040528092919081815260200182805461038c906113cc565b80156103d95780601f106103ae576101008083540402835291602001916103d9565b820191906000526020600020905b8154815290600101906020018083116103bc57829003601f168201915b5050505050905090565b6000336103f18185856107c5565b60019150505b92915050565b60003361040b8582856108ea565b610416858585610964565b506001949350505050565b61042b3382610af6565b604051600090339083908381818185875af1925050503d806000811461046d576040519150601f19603f3d011682016040523d82523d6000602084013e610472565b606091505b50509050806104a257604051630e21dcbb60e11b8152336004820152602481018390526044015b60405180910390fd5b5050565b60006104b0610c0e565b905090565b6000336103f18185856104c8838361079a565b6104d29190611400565b6107c5565b6104a28282610d39565b6001600160a01b0381166000908152600760205260408120546103f7565b6000606080828080836105337f00000000000000000000000000000000000000000000000000000000000000006005610de6565b61055e7f00000000000000000000000000000000000000000000000000000000000000006006610de6565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060048054610360906113cc565b6104a28282610af6565b600033816105af828661079a565b90508381101561060f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610499565b61041682868684036107c5565b6000336103f1818585610964565b6106343334610d39565b565b834211156106865760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610499565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106b58c610e91565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061071082610eb9565b9050600061072082878787610ee6565b9050896001600160a01b0316816001600160a01b0316146107835760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610499565b61078e8a8a8a6107c5565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166108275760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610499565b6001600160a01b0382166108885760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610499565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006108f6848461079a565b9050600019811461095e57818110156109515760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610499565b61095e84848484036107c5565b50505050565b6001600160a01b0383166109c85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610499565b6001600160a01b038216610a2a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610499565b6001600160a01b03831660009081526020819052604090205481811015610aa25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610499565b6001600160a01b0384811660008181526020818152604080832087870390559387168083529184902080548701905592518581529092600080516020611438833981519152910160405180910390a361095e565b6001600160a01b038216610b565760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610499565b6001600160a01b03821660009081526020819052604090205481811015610bca5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610499565b6001600160a01b03831660008181526020818152604080832086860390556002805487900390555185815291929160008051602061143883398151915291016108dd565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610c6757507f000000000000000000000000000000000000000000000000000000000000000046145b15610c9157507f000000000000000000000000000000000000000000000000000000000000000090565b6104b0604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216610d8f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610499565b8060026000828254610da19190611400565b90915550506001600160a01b03821660008181526020818152604080832080548601905551848152600080516020611438833981519152910160405180910390a35050565b606060ff8314610e0057610df983610f0e565b90506103f7565b818054610e0c906113cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610e38906113cc565b8015610e855780601f10610e5a57610100808354040283529160200191610e85565b820191906000526020600020905b815481529060010190602001808311610e6857829003601f168201915b505050505090506103f7565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b60006103f7610ec6610c0e565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000610ef787878787610f4d565b91509150610f0481611007565b5095945050505050565b60606000610f1b8361114f565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115610f7a5750600090506003610ffe565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610fce573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ff757600060019250925050610ffe565b9150600090505b94509492505050565b600081600481111561101b5761101b611421565b036110235750565b600181600481111561103757611037611421565b0361107f5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610499565b600281600481111561109357611093611421565b036110e05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610499565b60038160048111156110f4576110f4611421565b0361114c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610499565b50565b600060ff8216601f8111156103f757604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b8181101561119d57602081850181015186830182015201611181565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006111d06020830184611177565b9392505050565b80356001600160a01b03811681146111ee57600080fd5b919050565b6000806040838503121561120657600080fd5b61120f836111d7565b946020939093013593505050565b60008060006060848603121561123257600080fd5b61123b846111d7565b9250611249602085016111d7565b929592945050506040919091013590565b60006020828403121561126c57600080fd5b5035919050565b60006020828403121561128557600080fd5b6111d0826111d7565b60ff60f81b8816815260e0602082015260006112ad60e0830189611177565b82810360408401526112bf8189611177565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b818110156113155783518352602093840193909201916001016112f7565b50909b9a5050505050505050505050565b600080600080600080600060e0888a03121561134157600080fd5b61134a886111d7565b9650611358602089016111d7565b95506040880135945060608801359350608088013560ff8116811461137c57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156113ac57600080fd5b6113b5836111d7565b91506113c3602084016111d7565b90509250929050565b600181811c908216806113e057607f821691505b602082108103610eb357634e487b7160e01b600052602260045260246000fd5b808201808211156103f757634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122058330e9233d46d10a1ed47ae3eddf067329a0599f7467a9c95c29492414bb9fe64736f6c634300081d0033";

type WNTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WNTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WNT__factory extends ContractFactory {
  constructor(...args: WNTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WNT> {
    return super.deploy(overrides || {}) as Promise<WNT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WNT {
    return super.attach(address) as WNT;
  }
  override connect(signer: Signer): WNT__factory {
    return super.connect(signer) as WNT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WNTInterface {
    return new utils.Interface(_abi) as WNTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WNT {
    return new Contract(address, _abi, signerOrProvider) as WNT;
  }
}
