// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Chain, ChainInterface } from "../../../contracts/chain/Chain";

const _abi = [
  {
    inputs: [],
    name: "ARBITRUM_CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ARBITRUM_SEPOLIA_CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "arbGasInfo",
    outputs: [
      {
        internalType: "contract ArbGasInfo",
        name: "",
        type: "ArbGasInfo",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "arbSys",
    outputs: [
      {
        internalType: "contract ArbSys",
        name: "",
        type: "ArbSys",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60d5610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060515760003560e01c80631057d40f1460565780631fab59fb14607a578063910956c5146090578063cdcdd548146097575b600080fd5b605d606481565b6040516001600160a01b0390911681526020015b60405180910390f35b608362066eee81565b6040519081526020016071565b605d606c81565b608361a4b18156fea264697066735822122076d5a746ad72182c5a166afdc8e99e5ec5a4b932284269c8c51766e36fabc16e64736f6c63430008140033";

type ChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Chain__factory extends ContractFactory {
  constructor(...args: ChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Chain> {
    return super.deploy(overrides || {}) as Promise<Chain>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Chain {
    return super.attach(address) as Chain;
  }
  override connect(signer: Signer): Chain__factory {
    return super.connect(signer) as Chain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainInterface {
    return new utils.Interface(_abi) as ChainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Chain {
    return new Contract(address, _abi, signerOrProvider) as Chain;
  }
}
