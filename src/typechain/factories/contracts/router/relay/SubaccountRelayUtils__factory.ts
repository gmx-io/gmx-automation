// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SubaccountRelayUtils,
  SubaccountRelayUtilsInterface,
} from "../../../../contracts/router/relay/SubaccountRelayUtils";

const _abi = [
  {
    inputs: [],
    name: "CANCEL_ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_ADDRESSES_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_NUMBERS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_SUBACCOUNT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBACCOUNT_APPROVAL_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATE_ORDER_PARAMS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATE_ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct RelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct RelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct RelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct RelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "subaccount",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldAdd",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllowedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "actionType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "integrationId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SubaccountRelayUtils.SubaccountApproval",
        name: "subaccountApproval",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getCancelOrderStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct RelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct RelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct RelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct RelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "subaccount",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldAdd",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllowedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "actionType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "integrationId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SubaccountRelayUtils.SubaccountApproval",
        name: "subaccountApproval",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralDeltaAmount",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParamsNumbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "enum Order.OrderType",
            name: "orderType",
            type: "Order.OrderType",
          },
          {
            internalType: "enum Order.DecreasePositionSwapType",
            name: "decreasePositionSwapType",
            type: "Order.DecreasePositionSwapType",
          },
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "autoCancel",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "referralCode",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IBaseOrderUtils.CreateOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getCreateOrderStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct RelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct RelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct RelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct RelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "subaccount",
        type: "address",
      },
    ],
    name: "getRemoveSubaccountStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "subaccount",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldAdd",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllowedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "actionType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "integrationId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SubaccountRelayUtils.SubaccountApproval",
        name: "subaccountApproval",
        type: "tuple",
      },
    ],
    name: "getSubaccountApprovalStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct RelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct RelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct RelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct RelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "subaccount",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldAdd",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllowedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "actionType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "integrationId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SubaccountRelayUtils.SubaccountApproval",
        name: "subaccountApproval",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "sizeDeltaUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "acceptablePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "triggerPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "validFromTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "autoCancel",
            type: "bool",
          },
        ],
        internalType: "struct RelayUtils.UpdateOrderParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "increaseExecutionFee",
        type: "bool",
      },
    ],
    name: "getUpdateOrderStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type SubaccountRelayUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubaccountRelayUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubaccountRelayUtils__factory extends ContractFactory {
  constructor(...args: SubaccountRelayUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SubaccountRelayUtils> {
    return super.deploy(overrides || {}) as Promise<SubaccountRelayUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SubaccountRelayUtils {
    return super.attach(address) as SubaccountRelayUtils;
  }
  override connect(signer: Signer): SubaccountRelayUtils__factory {
    return super.connect(signer) as SubaccountRelayUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubaccountRelayUtilsInterface {
    return new utils.Interface(_abi) as SubaccountRelayUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubaccountRelayUtils {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SubaccountRelayUtils;
  }
}
