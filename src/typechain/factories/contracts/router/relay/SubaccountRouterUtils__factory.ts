// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SubaccountRouterUtils,
  SubaccountRouterUtilsInterface,
} from "../../../../contracts/router/relay/SubaccountRouterUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "desChainId",
        type: "uint256",
      },
    ],
    name: "InvalidSubaccountApprovalDesChainId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "storedNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "InvalidSubaccountApprovalNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSubaccountApprovalSubaccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "SubaccountApprovalDeadlinePassed",
    type: "error",
  },
] as const;

const _bytecode =
  "0x6109af610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100345760003560e01c8062295b7614610039575b600080fd5b81801561004557600080fd5b50610059610054366004610614565b61005b565b005b61006d8961006830610192565b61021d565b60405163f7b4e61960e01b81526001600160a01b03808b16600483015280891660248301528616604482015273__$cd9cbb3e1d35f471855f1a1916300c2072$__9063f7b4e6199060640160006040518083038186803b1580156100d057600080fd5b505af41580156100e4573d6000803e3d6000fd5b505050506100f6898989898686610251565b604051631bbb493d60e31b81526001600160a01b03808b166004830152808a1660248301528089166044830152861660648201526084810185905260a4810184905273__$cd9cbb3e1d35f471855f1a1916300c2072$__9063ddda49e89060c40160006040518083038186803b15801561016f57600080fd5b505af4158015610183573d6000803e3d6000fd5b50505050505050505050505050565b60006040516020016101d3906020808252601b908201527a14d5509050d0d3d5539517d191505515549157d11254d050931151602a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b6102278282610577565b1561024d5760405163dd70e0c960e01b8152600481018290526024015b60405180910390fd5b5050565b61025f6101208301836106ce565b15905061056f576000610275602084018461071b565b6001600160a01b03160361029c5760405163545e8f2b60e01b815260040160405180910390fd5b468260c00135146102c657604051637db6c74560e01b815260c08301356004820152602401610244565b8160e001354211156102f7576040516313012da760e11b815242600482015260e08301356024820152604401610244565b6001600160a01b03841660009081526020829052604090205460a0830135811461034157604051633044992f60e01b81526004810182905260a08401356024820152604401610244565b61034c81600161073f565b6001600160a01b038616600090815260208490526040808220929092559051638a3b3d6f60e01b81526004810186905273__$e8eac12d00fdb3e93794499b0cb727dd34$__90638a3b3d6f90602401602060405180830381865af41580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190610760565b9050600073__$e8eac12d00fdb3e93794499b0cb727dd34$__63db1ba349866040518263ffffffff1660e01b815260040161041791906108a5565b602060405180830381865af4158015610434573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104589190610760565b90506000610480838360405161190160f01b8152600281019290925260228201526042902090565b905073__$e8eac12d00fdb3e93794499b0cb727dd34$__63bead678584836104ac6101208b018b6106ce565b8d6040518663ffffffff1660e01b81526004016104cd9594939291906108b8565b60006040518083038186803b1580156104e557600080fd5b505af41580156104f9573d6000803e3d6000fd5b5050604051630c62de5b60e11b815273__$cd9cbb3e1d35f471855f1a1916300c2072$__92506318c5bcb6915061053a908d908d908d908c9060040161091e565b60006040518083038186803b15801561055257600080fd5b505af4158015610566573d6000803e3d6000fd5b50505050505050505b505050505050565b604051633d70e7e560e11b8152600481018290526000906001600160a01b03841690637ae1cfca90602401602060405180830381865afa1580156105bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e3919061095c565b90505b92915050565b6001600160a01b038116811461060157600080fd5b50565b803561060f816105ec565b919050565b60008060008060008060008060006101208a8c03121561063357600080fd5b893561063e816105ec565b985060208a013561064e816105ec565b975060408a013561065e816105ec565b965060608a0135955060808a0135610675816105ec565b945060a08a0135935060c08a0135925060e08a01356001600160401b0381111561069e57600080fd5b8a016000610140828e0312156106b357600080fd5b50989b979a5095989497939692955090936101000135919050565b6000808335601e198436030181126106e557600080fd5b8301803591506001600160401b038211156106ff57600080fd5b60200191503681900382131561071457600080fd5b9250929050565b60006020828403121561072d57600080fd5b8135610738816105ec565b9392505050565b808201808211156105e657634e487b7160e01b600052601160045260246000fd5b60006020828403121561077257600080fd5b5051919050565b801515811461060157600080fd5b803561060f81610779565b6000808335601e198436030181126107a957600080fd5b83016020810192503590506001600160401b038111156107c857600080fd5b80360382131561071457600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b61081a8261080d83610604565b6001600160a01b03169052565b600061082860208301610787565b1515602084015260408281013590840152606080830135908401526080808301359084015260a0808301359084015260c0808301359084015260e080830135908401526101008083013590840152610884610120830183610792565b61014061012086015261089c610140860182846107d7565b95945050505050565b6020815260006105e36020830184610800565b85815284602082015260a0604082015260006108d860a0830185876107d7565b6001600160a01b039390931660608301525080820360809091015260138152721cdd589858d8dbdd5b9d08185c1c1c9bdd985b606a1b6020820152604001949350505050565b6001600160a01b03858116825284811660208301528316604082015260806060820181905260009061095290830184610800565b9695505050505050565b60006020828403121561096e57600080fd5b81516107388161077956fea2646970667358221220e00e3dfb9a2b8e4a8aa29b6503dab4cd212206fee50dd5517f363bb470fe077e64736f6c634300081d0033";

type SubaccountRouterUtilsConstructorParams =
  | [
      linkLibraryAddresses: SubaccountRouterUtilsLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubaccountRouterUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SubaccountRouterUtils__factory extends ContractFactory {
  constructor(...args: SubaccountRouterUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SubaccountRouterUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SubaccountRouterUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$cd9cbb3e1d35f471855f1a1916300c2072\$__", "g"),
      linkLibraryAddresses[
        "contracts/subaccount/SubaccountUtils.sol:SubaccountUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e8eac12d00fdb3e93794499b0cb727dd34\$__", "g"),
      linkLibraryAddresses["contracts/router/relay/RelayUtils.sol:RelayUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SubaccountRouterUtils> {
    return super.deploy(overrides || {}) as Promise<SubaccountRouterUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SubaccountRouterUtils {
    return super.attach(address) as SubaccountRouterUtils;
  }
  override connect(signer: Signer): SubaccountRouterUtils__factory {
    return super.connect(signer) as SubaccountRouterUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubaccountRouterUtilsInterface {
    return new utils.Interface(_abi) as SubaccountRouterUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubaccountRouterUtils {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SubaccountRouterUtils;
  }
}

export interface SubaccountRouterUtilsLibraryAddresses {
  ["contracts/subaccount/SubaccountUtils.sol:SubaccountUtils"]: string;
  ["contracts/router/relay/RelayUtils.sol:RelayUtils"]: string;
}
