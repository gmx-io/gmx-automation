/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RelayUtils,
  RelayUtilsInterface,
} from "../../../../contracts/router/relay/RelayUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidSwapMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapPathLengh",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSwapPathLength",
        type: "uint256",
      },
    ],
    name: "MaxSwapPathLengthExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedFeeToken",
        type: "address",
      },
    ],
    name: "UnexpectedRelayFeeTokenAfterSwap",
    type: "error",
  },
  {
    inputs: [],
    name: "BATCH_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CANCEL_ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_ADDRESSES_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_NUMBERS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_PARAMS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_SUBACCOUNT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBACCOUNT_APPROVAL_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATE_ORDER_PARAMS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATE_ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "subaccount",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldAdd",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllowedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "actionType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SubaccountApproval",
        name: "subaccountApproval",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType:
                  "struct IBaseOrderUtils.CreateOrderParamsAddresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct IBaseOrderUtils.CreateOrderParamsNumbers",
                name: "numbers",
                type: "tuple",
              },
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "Order.OrderType",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "Order.DecreasePositionSwapType",
              },
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "referralCode",
                type: "bytes32",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParams[]",
            name: "createOrderParamsList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "executionFeeIncrease",
                type: "uint256",
              },
            ],
            internalType: "struct UpdateOrderParams[]",
            name: "updateOrderParamsList",
            type: "tuple[]",
          },
          {
            internalType: "bytes32[]",
            name: "cancelOrderKeys",
            type: "bytes32[]",
          },
        ],
        internalType: "struct BatchParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getBatchStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61279461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100ae5760003560e01c806305fb17a8146100b35780631f46dd35146100cd5780633e9acb35146100d55780633ed79d03146100dd578063486c2683146100e5578063589a8cbc146100ed57806371c1a3b4146100f55780638192f63c146100fd578063b7848f3214610105578063e1d3aac11461010d578063eca1bee41461012f578063f69482d414610137575b600080fd5b6100bb61014a565b60405190815260200160405180910390f35b6100bb61016d565b6100bb610191565b6100bb6101ee565b6100bb610211565b6100bb610234565b6100bb61025d565b6100bb6102a1565b6100bb6102c4565b81801561011957600080fd5b5061012d6101283660046111f2565b61033d565b005b6100bb61059d565b6100bb6101453660046112cc565b6105c0565b6040518060e0016040528060b3815260200161259e60b391398051906020012081565b60405180610100016040528060d6815260200161268960d691398051906020012081565b6040518060e0016040528060b3815260200161259e60b3913960405180610100016040528060d6815260200161268960d691396040516020016101d592919061139d565b6040516020818303038152906040528051906020012081565b60405180608001604052806057815260200161232e605791398051906020012081565b6040518060c001604052806091815260200161250d609191398051906020012081565b6040518060e0016040528060bb815260200161238560bb91396040516020016101d591906114b4565b6040518060e0016040528060b3815260200161259e60b3913960405180610100016040528060d6815260200161268960d691396040516020016101d592919061153f565b604051806060016040528060388152602001612651603891398051906020012081565b6040518060e0016040528060b3815260200161259e60b3913960405180610100016040528060d6815260200161268960d6913960405180610100016040528060cd815260200161244060cd91396040518060e0016040528060bb815260200161238560bb91396040516020016101d5949392919061168f565b816001600160a01b031663070211e66040518163ffffffff1660e01b815260040160006040518083038186803b15801561037657600080fd5b505afa15801561038a573d6000803e3d6000fd5b505085516103d9925090506103a26040840184611794565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061062292505050565b8351600090610426906103ef6040850185611794565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061075e92505050565b9050600073__$2ebd8d293950cf319742e0db402ead4961$__635706dc46604051806101a0016040528089600001516001600160a01b03168152602001886001600160a01b03168152602001876001600160a01b0316815260200189602001516001600160a01b031681526020016000801b81526020018660000160208101906104b091906117e4565b6001600160a01b03168152602087810135908201526040810186905260006060820181905230608083015260a0820181905260c082015260e00160058152506040518263ffffffff1660e01b815260040161050b91906118b1565b6040805180830381865af4158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b91906119aa565b50905085604001516001600160a01b0316816001600160a01b0316146105955780866040015160405163a972124160e01b815260040161058c9291906119d8565b60405180910390fd5b505050505050565b6040518060e0016040528060bb815260200161238560bb91398051906020012081565b600061061985856040516020016105d79190611a79565b60408051601f198184030181529190528051602090910120856105fa8680611794565b6106076020890189611b05565b61061460408b018b611794565b610824565b95945050505050565b6000826001600160a01b031663bd02d0f560405160200161066b9060208082526014908201527309a82b0bea6ae82a0bea082a890be988a9c8ea8960631b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161069f91815260200190565b602060405180830381865afa1580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e09190611b4e565b90508082511115610711578151604051639da3604360e01b815260048101919091526024810182905260440161058c565b60005b825181101561075857600083828151811061073157610731611b67565b602002602001015190506107458582610961565b508061075081611b7d565b915050610714565b50505050565b6060600082516001600160401b0381111561077b5761077b611174565b6040519080825280602002602001820160405280156107b457816020015b6107a161114d565b8152602001906001900390816107995790505b50905060005b835181101561081c5760008482815181106107d7576107d7611b67565b602002602001015190506107eb86826109ef565b8383815181106107fd576107fd611b67565b602002602001018190525050808061081490611b7d565b9150506107ba565b509392505050565b60006040518060e0016040528060b3815260200161259e60b3913960405180610100016040528060d6815260200161268960d6913960405180610100016040528060cd815260200161244060cd91396040518060e0016040528060bb815260200161238560bb913960405160200161089f949392919061168f565b60405160208183030381529060405280519060200120886108c08989610a87565b6108ca8888610b65565b86866040516020016108dd929190611ba4565b604051602081830303815290604052805190602001206108fc8f610c07565b6040805160208101979097526001600160a01b03909516948601949094526060850192909252608084015260a083015260c082015260e081018a9052610100016040516020818303038152906040528051906020012090509998505050505050505050565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff59061099d90869086906004016119d8565b608060405180830381865af41580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de9190611bcd565b90506109ea8382610c77565b505050565b6109f761114d565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$";

type RelayUtilsConstructorParams =
  | [linkLibraryAddresses: RelayUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class RelayUtils__factory extends ContractFactory {
  constructor(...args: RelayUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        RelayUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: RelayUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2ebd8d293950cf319742e0db402ead4961\\$__", "g"),
      linkLibraryAddresses["contracts/swap/SwapUtils.sol:SwapUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff439aa65a80c9eec648f15db20b189505\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayUtils> {
    return super.deploy(overrides || {}) as Promise<RelayUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RelayUtils {
    return super.attach(address) as RelayUtils;
  }
  override connect(signer: Signer): RelayUtils__factory {
    return super.connect(signer) as RelayUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayUtilsInterface {
    return new utils.Interface(_abi) as RelayUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayUtils {
    return new Contract(address, _abi, signerOrProvider) as RelayUtils;
  }
}

export interface RelayUtilsLibraryAddresses {
  ["contracts/swap/SwapUtils.sol:SwapUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
}
