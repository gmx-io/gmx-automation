// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RelayUtils,
  RelayUtilsInterface,
} from "../../../../contracts/router/relay/RelayUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "signatureType",
        type: "string",
      },
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
      {
        internalType: "address",
        name: "recoveredFromMinified",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedSigner",
        type: "address",
      },
    ],
    name: "InvalidRecoveredSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "signatureType",
        type: "string",
      },
    ],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedFeeToken",
        type: "address",
      },
    ],
    name: "UnexpectedRelayFeeTokenAfterSwap",
    type: "error",
  },
  {
    inputs: [],
    name: "BATCH_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BRIDGE_OUT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CANCEL_ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CLAIM_AFFILIATE_REWARDS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CLAIM_COLLATERAL_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CLAIM_FUNDING_FEES_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_DEPOSIT_ADDRESSES_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_DEPOSIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_GLV_DEPOSIT_ADDRESSES_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_GLV_DEPOSIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_GLV_WITHDRAWAL_ADDRESSES_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_GLV_WITHDRAWAL_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_ADDRESSES_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_NUMBERS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_PARAMS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_SHIFT_ADDRESSES_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_SHIFT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_WITHDRAWAL_ADDRESSES_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CREATE_WITHDRAWAL_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR_NAME_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR_VERSION_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIFIED_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REMOVE_SUBACCOUNT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SET_TRADER_REFERRAL_CODE_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBACCOUNT_APPROVAL_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRANSFER_REQUESTS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATE_ORDER_PARAMS_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATE_ORDER_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "subaccount",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldAdd",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllowedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "actionType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "integrationId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SubaccountApproval",
        name: "subaccountApproval",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType:
                  "struct IBaseOrderUtils.CreateOrderParamsAddresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct IBaseOrderUtils.CreateOrderParamsNumbers",
                name: "numbers",
                type: "tuple",
              },
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "Order.OrderType",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "Order.DecreasePositionSwapType",
              },
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "referralCode",
                type: "bytes32",
              },
              {
                internalType: "bytes32[]",
                name: "dataList",
                type: "bytes32[]",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParams[]",
            name: "createOrderParamsList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "executionFeeIncrease",
                type: "uint256",
              },
            ],
            internalType: "struct IRelayUtils.UpdateOrderParams[]",
            name: "updateOrderParamsList",
            type: "tuple[]",
          },
          {
            internalType: "bytes32[]",
            name: "cancelOrderKeys",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IRelayUtils.BatchParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getBatchStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType:
                  "struct IBaseOrderUtils.CreateOrderParamsAddresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct IBaseOrderUtils.CreateOrderParamsNumbers",
                name: "numbers",
                type: "tuple",
              },
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "Order.OrderType",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "Order.DecreasePositionSwapType",
              },
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "referralCode",
                type: "bytes32",
              },
              {
                internalType: "bytes32[]",
                name: "dataList",
                type: "bytes32[]",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParams[]",
            name: "createOrderParamsList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "executionFeeIncrease",
                type: "uint256",
              },
            ],
            internalType: "struct IRelayUtils.UpdateOrderParams[]",
            name: "updateOrderParamsList",
            type: "tuple[]",
          },
          {
            internalType: "bytes32[]",
            name: "cancelOrderKeys",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IRelayUtils.BatchParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getBatchStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "provider",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IRelayUtils.BridgeOutParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getBridgeOutStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getCancelOrderStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "subaccount",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldAdd",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllowedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "actionType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "integrationId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SubaccountApproval",
        name: "subaccountApproval",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getCancelOrderStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "getClaimAffiliateRewardsStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "timeKeys",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "getClaimCollateralStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "getClaimFundingFeesStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "receivers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct IRelayUtils.TransferRequests",
        name: "transferRequests",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialLongToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialShortToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IDepositUtils.CreateDepositParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minMarketTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IDepositUtils.CreateDepositParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getCreateDepositStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "receivers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct IRelayUtils.TransferRequests",
        name: "transferRequests",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "glv",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialLongToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialShortToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType:
              "struct IGlvDepositUtils.CreateGlvDepositParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minGlvTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isMarketTokenDeposit",
            type: "bool",
          },
          {
            internalType: "bytes32[]",
            name: "dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IGlvDepositUtils.CreateGlvDepositParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getCreateGlvDepositStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "receivers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct IRelayUtils.TransferRequests",
        name: "transferRequests",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "glv",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType:
              "struct IGlvWithdrawalUtils.CreateGlvWithdrawalParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minLongTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minShortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IGlvWithdrawalUtils.CreateGlvWithdrawalParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getCreateGlvWithdrawalStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParamsNumbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "enum Order.OrderType",
            name: "orderType",
            type: "Order.OrderType",
          },
          {
            internalType: "enum Order.DecreasePositionSwapType",
            name: "decreasePositionSwapType",
            type: "Order.DecreasePositionSwapType",
          },
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "autoCancel",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "referralCode",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IBaseOrderUtils.CreateOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getCreateOrderStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "subaccount",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldAdd",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllowedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "actionType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "integrationId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SubaccountApproval",
        name: "subaccountApproval",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct IBaseOrderUtils.CreateOrderParamsNumbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "enum Order.OrderType",
            name: "orderType",
            type: "Order.OrderType",
          },
          {
            internalType: "enum Order.DecreasePositionSwapType",
            name: "decreasePositionSwapType",
            type: "Order.DecreasePositionSwapType",
          },
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "autoCancel",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "referralCode",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IBaseOrderUtils.CreateOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getCreateOrderStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "receivers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct IRelayUtils.TransferRequests",
        name: "transferRequests",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct IShiftUtils.CreateShiftParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minMarketTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IShiftUtils.CreateShiftParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getCreateShiftStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "receivers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct IRelayUtils.TransferRequests",
        name: "transferRequests",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType:
              "struct IWithdrawalUtils.CreateWithdrawalParamsAddresses",
            name: "addresses",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minLongTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minShortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct IWithdrawalUtils.CreateWithdrawalParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getCreateWithdrawalStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sourceChainId",
        type: "uint256",
      },
    ],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "subaccount",
        type: "address",
      },
    ],
    name: "getRemoveSubaccountStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "subaccount",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldAdd",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllowedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "actionType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "integrationId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SubaccountApproval",
        name: "subaccountApproval",
        type: "tuple",
      },
    ],
    name: "getSubaccountApprovalStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "referralCode",
        type: "bytes32",
      },
    ],
    name: "getTraderReferralCodeStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "subaccount",
            type: "address",
          },
          {
            internalType: "bool",
            name: "shouldAdd",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiresAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllowedCount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "actionType",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "integrationId",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SubaccountApproval",
        name: "subaccountApproval",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "sizeDeltaUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "acceptablePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "triggerPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "validFromTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "autoCancel",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFeeIncrease",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.UpdateOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getUpdateOrderStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address[]",
                name: "tokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "providers",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "data",
                type: "bytes[]",
              },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "sendTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "sendAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "externalCallTargets",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "externalCallDataList",
                type: "bytes[]",
              },
              {
                internalType: "address[]",
                name: "refundTokens",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "refundReceivers",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "owner",
                type: "address",
              },
              {
                internalType: "address",
                name: "spender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
              },
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "feeToken",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
              },
              {
                internalType: "address[]",
                name: "feeSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "desChainId",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "sizeDeltaUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "acceptablePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "triggerPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOutputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "validFromTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "autoCancel",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFeeIncrease",
            type: "uint256",
          },
        ],
        internalType: "struct IRelayUtils.UpdateOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getUpdateOrderStructHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domainSeparator",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "expectedSigner",
        type: "address",
      },
      {
        internalType: "string",
        name: "signatureType",
        type: "string",
      },
    ],
    name: "validateSignature",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x615f16610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106102705760003560e01c80624eae1014610275578063040918fe1461028f578063056fe806146102a257806305fa6609146102b557806305fb17a8146102fa578063063dbda314610302578063108234b91461030a57806316666e02146103125780631db61b54146103255780631f46dd351461032d5780632281ed53146103355780633e9acb351461033d5780633ed79d03146103455780634128522a1461034d5780634131450814610360578063451558671461038e578063486c2683146103a15780634873ef1b146103a95780634bbc148b146103b15780634ef092d7146103c4578063540edf5b146103d757806355cacc1b146103ea578063589a8cbc1461042f5780635fe05506146104375780636d2a629b1461044c57806371259ba41461045f57806371c1a3b41461046757806374c025ee1461046f57806377bd068c146104845780637a34aa381461049757806380fcf158146104aa5780638192f63c146104bf5780638a3b3d6f146104c75780638dfdf18f146104da578063a5a36711146104e2578063af6239a4146104ea578063b4597a5c146104fd578063b7848f3214610512578063b8366dbd1461051a578063b985465d14610522578063ba953c281461052a578063bead67851461053d578063bff9e7a114610552578063c02b481b1461055a578063cabd70e61461056d578063cbb114e714610580578063d656996f146105a0578063db1ba349146105b3578063e3522df0146105c6578063e55ee37b146105ce578063e72da496146105e1578063eca1bee4146105f4578063edf7c958146105fc575b600080fd5b61027d61060f565b60405190815260200160405180910390f35b61027d61029d3660046129ed565b610632565b61027d6102b0366004612c0c565b610647565b6040805180820190915260188152774d696e69666965642862797465733332206469676573742960401b60209091015261027d6000805160206152c383398151915281565b61027d610712565b61027d610735565b61027d610758565b61027d610320366004612cb0565b61077e565b61027d6107f4565b61027d610817565b61027d61083b565b61027d61085e565b61027d6108bb565b61027d61035b366004612d5c565b6108de565b6040805180820190915260018152603160f81b60209091015261027d60008051602061544383398151915281565b61027d61039c366004612e49565b610991565b61027d610a88565b61027d610aab565b61027d6103bf3660046130dc565b610ad1565b61027d6103d2366004613425565b610c58565b61027d6103e536600461349f565b610d85565b60408051808201909152601881527723b6bc2130b9b2a3b2b630ba37a932b630bca937baba32b960411b60209091015261027d600080516020615c4883398151915281565b61027d610de7565b61027d60008051602061546383398151915281565b61027d61045a366004613543565b610e10565b61027d610f6a565b61027d610f8d565b61027d600080516020615ec183398151915281565b61027d6104923660046129ed565b610fd1565b61027d6104a536600461368a565b61101c565b61027d60008051602061516783398151915281565b61027d611186565b61027d6104d5366004613796565b6111a9565b61027d61126b565b61027d61128f565b61027d6104f83660046137af565b6112b2565b61027d60008051602061589a83398151915281565b61027d6112e6565b61027d61135f565b61027d611382565b61027d61053836600461383b565b6113a5565b61055061054b3660046139bd565b611509565b005b61027d611729565b61027d610568366004613b56565b61174f565b61027d61057b366004613d2c565b6118c3565b81801561058c57600080fd5b5061055061059b366004613de3565b611995565b61027d6105ae366004612c0c565b611c11565b61027d6105c1366004613e8e565b611c44565b61027d611d0a565b61027d6105dc366004613eca565b611d2d565b61027d6105ef366004613f4b565b611d61565b61027d611d6f565b61027d61060a366004613f9a565b611d92565b604051806080016040528060488152602001615adb604891398051906020012081565b600061064083828085611da4565b9392505050565b60006040518060800160405280605e8152602001615037605e9139805190602001208460405160200161067a9190614004565b60405160208183030381529060405280519060200120846040516020016106a19190614004565b60405160208183030381529060405280519060200120846106c189611e08565b60408051602081019690965285019390935260608401919091526001600160a01b0316608083015260a082015260c0015b604051602081830303815290604052805190602001209050949350505050565b6040518060e0016040528060b38152602001615c6860b391398051906020012081565b6040518060600160405280603f8152602001615d1b603f91398051906020012081565b6040518061020001604052806101cf81526020016158ba6101cf91398051906020012081565b6000604051806060016040528060388152602001615d5a6038913980519060200120826107aa85611e08565b6040516020016107d6939291909283526001600160a01b03919091166020830152604082015260600190565b60405160208183030381529060405280519060200120905092915050565b604051806080016040528060528152602001615a89605291398051906020012081565b60405180610100016040528060d68152602001615deb60d691398051906020012081565b6040518060a00160405280606b8152602001615b23606b91398051906020012081565b6040518060e0016040528060b38152602001615c6860b3913960405180610100016040528060d68152602001615deb60d691396040516020016108a2929190614067565b6040516020818303038152906040528051906020012081565b604051806080016040528060578152602001615200605791398051906020012081565b60006040518060a00160405280606c8152602001615257606c9139805190602001208260000151836020015184604001518560600151866080015160405160200161092991906141a6565b6040516020818303038152906040528051906020012061094889611e08565b6040805160208101989098526001600160a01b03968716908801526060870194909452608086019290925290921660a084015260c083019190915260e0820152610100016107d6565b60006040518060a00160405280606b8152602001615b23606b913980519060200120856040516020016109c49190614004565b60405160208183030381529060405280519060200120856040516020016109eb9190614004565b6040516020818303038152906040528051906020012085604051602001610a1291906141c2565b6040516020818303038152906040528051906020012085610a328b611e08565b604080516020810197909752860194909452606085019290925260808401526001600160a01b031660a083015260c082015260e00160405160208183030381529060405280519060200120905095945050505050565b6040518060e0016040528060ba8152602001615b8e60ba91398051906020012081565b60405180610180016040528061016081526020016152e361016091398051906020012081565b6000600080516020615167833981519152610aec84806141ed565b604051602001610afd929190614236565b60405160208183030381529060405280519060200120848060200190610b2391906141ed565b604051602001610b34929190614236565b60405160208183030381529060405280519060200120858060400190610b5a91906141ed565b604051602001610b6b9291906142a1565b60405160208183030381529060405280519060200120610b8e8660000151611e61565b86602001518760400151886060015189608001518a60a001518b60c00151604051602001610bbc91906141c2565b60405160208183030381529060405280519060200120610bdb8f611e08565b60408051602081019d909d528c019a909a5260608b019890985260808a019690965260a089019490945260c088019290925260e0870152610100860152151561012085015215156101408401526101608301526101808201526101a0015b6040516020818303038152906040528051906020012090509392505050565b600080610c6484611e08565b90506040518060e0016040528060b38152602001615c6860b3913960405180610100016040528060d68152602001615deb60d69139604051602001610caa9291906142ae565b604051602081830303815290604052805190602001206000610ccf8560000151611f4f565b610cdc866020015161200b565b86604001516008811115610cf257610cf2614439565b87606001516002811115610d0857610d08614439565b88608001518960a001518a60c001518b60e001518c6101000151604051602001610d3291906141c2565b60408051601f19818403018152908290528051602091820120610d669c9b9a999897969594939290918e916000910161444f565b6040516020818303038152906040528051906020012091505092915050565b6000610dde8585604051602001610d9c9190614527565b60408051601f19818403018152919052805160209091012085610dbf86806141ed565b610dcc60208901896145d1565b610dd960408b018b6141ed565b6120a8565b95945050505050565b6040518060e0016040528060bb81526020016157df60bb91396040516020016108a2919061461a565b600080610e1c86611e08565b9050600085604051602001610e319190614527565b6040516020818303038152906040528051906020012090506040518060e0016040528060b38152602001615c6860b3913960405180610100016040528060d68152602001615deb60d69139604051602001610e8d9291906142ae565b6040516020818303038152906040528051906020012085610eb18660000151611f4f565b610ebe876020015161200b565b87604001516008811115610ed457610ed4614439565b88606001516002811115610eea57610eea614439565b89608001518a60a001518b60c001518c60e001518d6101000151604051602001610f1491906141c2565b604051602081830303815290604052805190602001208c8c604051602001610f489d9c9b9a9998979695949392919061444f565b6040516020818303038152906040528051906020012092505050949350505050565b6040518060e0016040528060a2815260200161573d60a291398051906020012081565b6040518060e0016040528060b38152602001615c6860b3913960405180610100016040528060d68152602001615deb60d691396040516020016108a29291906142ae565b60006040518060600160405280603f8152602001615d1b603f91398051906020012082610ffd85611e08565b60408051602081019490945283019190915260608201526080016107d6565b600060008051602061589a83398151915261103784806141ed565b604051602001611048929190614236565b6040516020818303038152906040528051906020012084806020019061106e91906141ed565b60405160200161107f929190614236565b604051602081830303815290604052805190602001208580604001906110a591906141ed565b6040516020016110b69291906142a1565b604051602081830303815290604052805190602001206110d986600001516121e5565b86602001518760400151886060015189608001518a60a001518b60c0015160405160200161110791906141c2565b604051602081830303815290604052805190602001206111268f611e08565b60408051602081019d909d528c019a909a5260608b019890985260808a019690965260a089019490945260c088019290925260e087015215156101008601526101208501526101408401526101608301526101808201526101a001610c39565b604051806060016040528060388152602001615d5a603891398051906020012081565b6000604051806080016040528060528152602001615a89605291398051602091820120604080518082018252601881527723b6bc2130b9b2a3b2b630ba37a932b630bca937baba32b960411b908401528051808201825260018152603160f81b90840152805192830191909152600080516020615c48833981519152908201526000805160206154438339815191526060820152608081018390523060a082015260c0015b604051602081830303815290604052805190602001209050919050565b60405180610100016040528060d2815260200161509560d291398051906020012081565b6040518060a00160405280606c8152602001615257606c91398051906020012081565b6000610dde85856040516020016112c99190614527565b6040516020818303038152906040528051906020012085856122b7565b6040518060e0016040528060b38152602001615c6860b3913960405180610100016040528060d68152602001615deb60d6913960405180610100016040528060e0815260200161548360e091396040518060e0016040528060bb81526020016157df60bb91396040516020016108a294939291906146b8565b6040518060a0016040528060798152602001615187607991398051906020012081565b6040518060800160405280605e8152602001615037605e91398051906020012081565b600060405180610180016040528061016081526020016152e3610160913980516020909101206113d584806141ed565b6040516020016113e6929190614236565b6040516020818303038152906040528051906020012084806020019061140c91906141ed565b60405160200161141d929190614236565b6040516020818303038152906040528051906020012085806040019061144391906141ed565b6040516020016114549291906142a1565b60405160208183030381529060405280519060200120611477866000015161230b565b866020015187604001518860600151896080015160405160200161149b91906141c2565b604051602081830303815290604052805190602001206114ba8d611e08565b60408051602081019b909b528a01989098526060890196909652608088019490945260a087019290925260c086015260e085015261010084015261012083015261014082015261016001610c39565b60008061154c8787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061238592505050565b909250905073ed2c07d8f92305fa60df1ada590943fb3aa1305a193201611574575050611721565b600081600481111561158857611588614439565b146115b1578260405163151a7bff60e11b81526004016115a8919061481b565b60405180910390fd5b836001600160a01b0316826001600160a01b03161461171e5760408051808201825260188152774d696e69666965642862797465733332206469676573742960401b6020918201529051600091611623916000805160206152c3833981519152918b9101918252602082015260400190565b60405160208183030381529060405280519060200120905060006116618a8360405161190160f01b8152600281019290925260228201526042902090565b90506000806116a6838b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061238592505050565b909250905060008160048111156116bf576116bf614439565b146116df578660405163151a7bff60e11b81526004016115a8919061481b565b876001600160a01b0316826001600160a01b031614611719578686838a604051632416afa960e01b81526004016115a8949392919061482e565b505050505b50505b505050505050565b6040518061020001604052806101da81526020016155636101da91398051906020012081565b60006040518061020001604052806101da81526020016155636101da9139805160209091012061177f84806141ed565b604051602001611790929190614236565b604051602081830303815290604052805190602001208480602001906117b691906141ed565b6040516020016117c7929190614236565b604051602081830303815290604052805190602001208580604001906117ed91906141ed565b6040516020016117fe9291906142a1565b6040516020818303038152906040528051906020012061182186600001516123ca565b86602001518760400151886060015189608001518a60a0015160405160200161184a91906141c2565b604051602081830303815290604052805190602001206118698e611e08565b60408051602081019c909c528b019990995260608a0197909752608089019590955260a088019390935260c0870191909152151560e086015261010085015261012084015261014083015261016082015261018001610c39565b60006040518061020001604052806101cf81526020016158ba6101cf913980516020909101206118f384806141ed565b604051602001611904929190614236565b6040516020818303038152906040528051906020012084806020019061192a91906141ed565b60405160200161193b929190614236565b6040516020818303038152906040528051906020012085806040019061196191906141ed565b6040516020016119729291906142a1565b604051602081830303815290604052805190602001206110d986600001516124bb565b835173__$e53db83827f4e07ebc418caf7145b8c2d5$__90637b3435fc906119c060408501856141ed565b6040518463ffffffff1660e01b81526004016119de9392919061486a565b60006040518083038186803b1580156119f657600080fd5b505af4158015611a0a573d6000803e3d6000fd5b505085516000925073__$e53db83827f4e07ebc418caf7145b8c2d5$";

type RelayUtilsConstructorParams =
  | [linkLibraryAddresses: RelayUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class RelayUtils__factory extends ContractFactory {
  constructor(...args: RelayUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        RelayUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: RelayUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayUtils> {
    return super.deploy(overrides || {}) as Promise<RelayUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RelayUtils {
    return super.attach(address) as RelayUtils;
  }
  override connect(signer: Signer): RelayUtils__factory {
    return super.connect(signer) as RelayUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayUtilsInterface {
    return new utils.Interface(_abi) as RelayUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayUtils {
    return new Contract(address, _abi, signerOrProvider) as RelayUtils;
  }
}

export interface RelayUtilsLibraryAddresses {
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
}
