// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ReferralUtils,
  ReferralUtilsInterface,
} from "../../../contracts/referral/ReferralUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensLength",
        type: "uint256",
      },
    ],
    name: "InvalidClaimAffiliateRewardsInput",
    type: "error",
  },
] as const;

const _bytecode =
  "0x61097661003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063cc6997d71461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046107ac565b610070565b604051610067919061085a565b60405180910390f35b606083518551146100a65784518451604051635b3043dd60e01b8152600481019290925260248201526044015b60405180910390fd5b6100b8876100b33061018f565b61022d565b6100c18361025c565b600085516001600160401b038111156100dc576100dc6106e5565b604051908082528060200260200182016040528015610105578160200160208202803683370190505b50905060005b865181101561018357610154898989848151811061012b5761012b61089e565b60200260200101518985815181106101455761014561089e565b6020026020010151888a610286565b8282815181106101665761016661089e565b60209081029190910101528061017b816108b4565b91505061010b565b50979650505050505050565b60006040516020016101e39060208082526028908201527f434c41494d5f414646494c494154455f524557415244535f464541545552455f604082015267111254d05093115160c21b606082015260800190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b6102378282610586565b156102585760405163dd70e0c960e01b81526004810182905260240161009d565b5050565b6001600160a01b0381166102835760405163d551823d60e01b815260040160405180910390fd5b50565b6000806102948686866105f9565b60405163bd02d0f560e01b8152600481018290529091506000906001600160a01b038a169063bd02d0f590602401602060405180830381865afa1580156102df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030391906108db565b604051637152429d60e11b815260048101849052600060248201529091506001600160a01b038a169063e2a4853a906044016020604051808303816000875af1158015610354573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037891906108db565b506000896001600160a01b031663e98aabc16103948a8a610669565b846040518363ffffffff1660e01b81526004016103bb929190918252602082015260400190565b6020604051808303816000875af11580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe91906108db565b60405163078d3b7960e01b81526001600160a01b0389811660048301528781166024830152604482018590529192509089169063078d3b7990606401600060405180830381600087803b15801561045457600080fd5b505af1158015610468573d6000803e3d6000fd5b5050604051632c9800af60e11b81526001600160a01b03808e1660048301528b16602482015273__$e53db83827f4e07ebc418caf7145b8c2d5$__9250635930015e915060440160006040518083038186803b1580156104c757600080fd5b505af41580156104db573d6000803e3d6000fd5b505060405163489e6a9160e11b81526001600160a01b03808d166004830152808c166024830152808b166044830152808a1660648301528816608482015260a4810185905260c4810184905273__$c5242c1b4d0e7cbc87936b604afb77fd42$__925063913cd522915060e40160006040518083038186803b15801561056057600080fd5b505af4158015610574573d6000803e3d6000fd5b50939c9b505050505050505050505050565b604051633d70e7e560e11b8152600481018290526000906001600160a01b03841690637ae1cfca90602401602060405180830381865afa1580156105ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f291906108f4565b9392505050565b600060405160200161060a90610916565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915280851660608301528316608082015260a0016040516020818303038152906040528051906020012090509392505050565b600060405160200161067a90610916565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800160405160208183030381529060405280519060200120905092915050565b6001600160a01b038116811461028357600080fd5b634e487b7160e01b600052604160045260246000fd5b8035610706816106d0565b919050565b600082601f83011261071c57600080fd5b813560206001600160401b0380831115610738576107386106e5565b8260051b604051601f19603f8301168101818110848211171561075d5761075d6106e5565b60405293845285810183019383810192508785111561077b57600080fd5b83870191505b848210156107a157610792826106fb565b83529183019190830190610781565b979650505050505050565b60008060008060008060c087890312156107c557600080fd5b86356107d0816106d0565b955060208701356107e0816106d0565b945060408701356001600160401b03808211156107fc57600080fd5b6108088a838b0161070b565b9550606089013591508082111561081e57600080fd5b5061082b89828a0161070b565b935050608087013561083c816106d0565b915060a087013561084c816106d0565b809150509295509295509295565b6020808252825182820181905260009190848201906040850190845b8181101561089257835183529284019291840191600101610876565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016108d457634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156108ed57600080fd5b5051919050565b60006020828403121561090657600080fd5b815180151581146105f257600080fd5b60208082526010908201526f10519192531250551157d49155d0549160821b60408201526060019056fea26469706673582212204aa0faa9d09f9cda44130abba7c7e5dbcd60e6441fc2b3b5f519ed65bafad0fc64736f6c63430008140033";

type ReferralUtilsConstructorParams =
  | [linkLibraryAddresses: ReferralUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReferralUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ReferralUtils__factory extends ContractFactory {
  constructor(...args: ReferralUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ReferralUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ReferralUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$c5242c1b4d0e7cbc87936b604afb77fd42\$__", "g"),
      linkLibraryAddresses[
        "contracts/referral/ReferralEventUtils.sol:ReferralEventUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReferralUtils> {
    return super.deploy(overrides || {}) as Promise<ReferralUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReferralUtils {
    return super.attach(address) as ReferralUtils;
  }
  override connect(signer: Signer): ReferralUtils__factory {
    return super.connect(signer) as ReferralUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReferralUtilsInterface {
    return new utils.Interface(_abi) as ReferralUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReferralUtils {
    return new Contract(address, _abi, signerOrProvider) as ReferralUtils;
  }
}

export interface ReferralUtilsLibraryAddresses {
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
  ["contracts/referral/ReferralEventUtils.sol:ReferralEventUtils"]: string;
}
