/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Oracle, OracleInterface } from "../../../contracts/oracle/Oracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "_sequencerUptimeFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "heartbeatDuration",
        type: "uint256",
      },
    ],
    name: "ChainlinkPriceFeedNotUpdated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyChainlinkPriceFeedMultiplier",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "EmptyPrimaryPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    name: "InvalidFeedPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "InvalidMinMaxForPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "InvalidOracleProvider",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedProvider",
        type: "address",
      },
    ],
    name: "InvalidOracleProviderForToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
    ],
    name: "InvalidOracleSetPricesDataParam",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "providersLength",
        type: "uint256",
      },
    ],
    name: "InvalidOracleSetPricesProvidersParam",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "range",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxRange",
        type: "uint256",
      },
    ],
    name: "MaxOracleTimestampRangeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
    ],
    name: "MaxPriceAgeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxRefPriceDeviationFactor",
        type: "uint256",
      },
    ],
    name: "MaxRefPriceDeviationExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "NonAtomicOracleProvider",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokensWithPricesLength",
        type: "uint256",
      },
    ],
    name: "NonEmptyTokensWithPrices",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPrice",
        type: "uint256",
      },
    ],
    name: "PriceAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "SequencerDown",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeSinceUp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sequencerGraceDuration",
        type: "uint256",
      },
    ],
    name: "SequencerGraceDurationNotYetPassed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "clearAllPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPrimaryPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getTokensWithPrices",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensWithPricesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "primaryPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerUptimeFeed",
    outputs: [
      {
        internalType: "contract AggregatorV2V3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "providers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "setPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "providers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "setPricesForAtomicAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "price",
        type: "tuple",
      },
    ],
    name: "setPrimaryPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxTimestamp",
        type: "uint256",
      },
    ],
    name: "setTimestamps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "providers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "forAtomicAction",
        type: "bool",
      },
    ],
    name: "validatePrices",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "provider",
            type: "address",
          },
        ],
        internalType: "struct OracleUtils.ValidatedPrice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "validateSequencerUp",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200322b3803806200322b833981016040819052620000359162000071565b6001600160a01b0393841660805291831660a052821660c0521660e052620000d9565b6001600160a01b03811681146200006e57600080fd5b50565b600080600080608085870312156200008857600080fd5b8451620000958162000058565b6020860151909450620000a88162000058565b6040860151909350620000bb8162000058565b6060860151909250620000ce8162000058565b939692955090935050565b60805160a05160c05160e0516130bd6200016e600039600081816102690152818161035d015261039001526000818161020d01526119210152600081816101a70152818161043c015281816108c1015281816109a101528181610ac501528181610b9f01528181610c6501528181610de301528181610ed701526110a601526000818161011c01526106d501526130bd6000f3fe608060405234801561001057600080fd5b50600436106100da5760003560e01c8062ccf155146100df578063070211e6146100e95780633d333c85146100f157806347cba33d146101045780634a4a7b041461011757806351b5107a146101545780635dcf719414610174578063660d0d67146101a257806371604245146101c95780637901828d146101e05780639364c21a146101e85780639ff78c3014610208578063a2bbd6041461022f578063a726470514610264578063c7a667f41461028b578063f002606b1461029e578063fa101977146102a7575b600080fd5b6100e76102ba565b005b6100e761035b565b6100e76100ff366004612304565b61055e565b6100e7610112366004612338565b61058c565b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b60405161014b91906123ac565b60405180910390f35b6101676101623660046123c0565b6105a8565b60405161014b91906123e2565b61018761018236600461242f565b6105bf565b6040805182518152602092830151928101929092520161014b565b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b6101d260045481565b60405190815260200161014b565b6101d2610653565b6101fb6101f636600461245a565b610664565b60405161014b91906124ab565b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b61025661023d36600461242f565b6002602052600090815260409020805460019091015482565b60405161014b929190612525565b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b6100e7610299366004612304565b610682565b6101d260035481565b6100e76102b53660046123c0565b6106a1565b61030a6040516020016102cc90612533565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b8152506106be565b6000610316600061076e565b905060005b8181101561034d57600061032f8180610778565b905061033a81610784565b50806103458161256d565b91505061031b565b505060006003819055600455565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661038b57565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041091906125a2565b5091945092505082159050806104385760405162032b3d60e81b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f56040516020016104a59060208082526018908201527729a2a8aaa2a721a2a92fa3a920a1a2afa22aa920aa24a7a760411b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016104d991815260200190565b602060405180830381865afa1580156104f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051a91906125f2565b90506000610528844261260b565b905081811161055757808260405163113cfc0360e01b815260040161054e929190612525565b60405180910390fd5b5050505050565b6105706040516020016102cc90612533565b600061057d8260006107af565b905061058881610f6a565b5050565b61059e6040516020016102cc90612533565b61058882826111cc565b60606105b660008484611296565b90505b92915050565b60408051808201909152600080825260208201526001600160a01b0382166105fa575050604080518082019091526000808252602082015290565b6001600160a01b038216600090815260026020908152604091829020825180840190935280548352600101549082015261063381611365565b156105b9578260405163cd64a02560e01b815260040161054e91906123ac565b600061065f600061076e565b905090565b60606106786040516020016102cc90612533565b6105b683836107af565b6106946040516020016102cc90612533565b600061057d8260016107af565b6106b36040516020016102cc90612533565b600391909155600455565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb9061070c903390869060040161261e565b602060405180830381865afa158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074d9190612637565b61058857338160405163a35b150b60e01b815260040161054e92919061269a565b60006105b9825490565b60006105b6838361137a565b6001600160a01b038116600090815260026020526040812081815560010181905561058890826113a4565b602082015151825151606091146107e45782515160208401515160405163dd51dc7360e01b815261054e929190600401612525565b604083015151835151146108165782515160408085015151905163f9996e9f60e01b815261054e929190600401612525565b8251516000906001600160401b0381111561083357610833612091565b6040519080825280602002602001820160405280156108a857816020015b6108956040518060a0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b8152602001906001900390816108515790505b508451519091506000036108bd5790506105b9565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f5604051602001610926906020808252601490820152734d41585f4f5241434c455f50524943455f41474560601b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161095a91815260200190565b602060405180830381865afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b91906125f2565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f5604051602001610a1d9060208082526025908201527f4d41585f4f5241434c455f5245465f50524943455f444556494154494f4e5f4660408201526420a1aa27a960d91b606082015260800190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610a5191815260200190565b602060405180830381865afa158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9291906125f2565b905060005b865151811015610f5f57600087602001518281518110610ab957610ab96126be565b602002602001015190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637ae1cfca610afb836113b9565b6040518263ffffffff1660e01b8152600401610b1991815260200190565b602060405180830381865afa158015610b36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5a9190612637565b610b7957806040516302e8815160e11b815260040161054e91906123ac565b600088600001518381518110610b9157610b916126be565b6020026020010151905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637ae1cfca610bd585611443565b6040518263ffffffff1660e01b8152600401610bf391815260200190565b602060405180830381865afa158015610c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c349190612637565b90508815610c615780610c5c57826040516353410c4360e01b815260040161054e91906123ac565b610d43565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166321f8a721610c9b85611482565b6040518263ffffffff1660e01b8152600401610cb991815260200190565b602060405180830381865afa158015610cd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfa91906126d4565b9050806001600160a01b0316846001600160a01b031614610d4157604051631a2d279b60e21b81526001600160a01b0380861660048301528216602482015260440161054e565b505b60008a604001518581518110610d5b57610d5b6126be565b602002602001015190506000846001600160a01b031663377bbdaf85846040518363ffffffff1660e01b8152600401610d9592919061269a565b60a0604051808303816000875af1158015610db4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd891906126f1565b905082610e925760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f5610e1a88886114c1565b6040518263ffffffff1660e01b8152600401610e3891815260200190565b602060405180830381865afa158015610e55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7991906125f2565b90508082606001818151610e8d919061260b565b905250505b42888260600151610ea3919061276f565b1015610eca57606081015142604051632b6e7c3f60e01b815260040161054e929190612525565b82610f2957600080610efc7f000000000000000000000000000000000000000000000000000000000000000087611558565b915091508115610f2657610f16868460200151838c611787565b610f26868460400151838c611787565b50505b80898781518110610f3c57610f3c6126be565b602002602001018190525050505050508080610f579061256d565b915050610a97565b509195945050505050565b8051600003610f765750565b610f80600061076e565b15610fab57610f8f600061076e565b60405163ef2df9b560e01b815260040161054e91815260200190565b600081600081518110610fc057610fc06126be565b6020026020010151606001519050600082600081518110610fe357610fe36126be565b602002602001015160600151905060005b83518110156110a1576000848281518110611011576110116126be565b60200260200101519050611045816000015160405180604001604052808460200151815260200184604001518152506111cc565b838160600151101561105957806060015193505b828160600151111561106d57806060015192505b61108e816000015182602001518360400151846060015185608001516117ec565b50806110998161256d565b915050610ff4565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f5604051602001611111906020808252601a90820152794d41585f4f5241434c455f54494d455354414d505f52414e474560301b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161114591815260200190565b602060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118691906125f2565b905080611193848461260b565b11156111bf576111a3838361260b565b81604051636ece35cd60e11b815260040161054e929190612525565b5060039190915560045550565b6020810151815111156111fd5780516020820151604051630b046a0d60e11b815261054e9285929091600401612782565b6001600160a01b038216600090815260026020908152604091829020825180840190935280548352600101549082015261123681611365565b61125e5780516020820151604051636f684cef60e11b815261054e9286929091600401612782565b6001600160a01b03831660009081526002602090815260408220845181559084015160019091015561129090846119b6565b50505050565b606060006112a38561076e565b9050808311156112b1578092505b60006112bd858561260b565b6001600160401b038111156112d4576112d4612091565b6040519080825280602002602001820160405280156112fd578160200160208202803683370190505b509050845b84811015611359576113148782610778565b8261131f888461260b565b8151811061132f5761132f6126be565b6001600160a01b0390921660209283029190910190910152806113518161256d565b915050611302565b509150505b9392505050565b805160009015806105b9575050602001511590565b6000826000018281548110611391576113916126be565b9060005260206000200154905092915050565b60006105b6836001600160a01b0384166119cb565b60006040516020016113f9906020808252601a90820152791254d7d3d49050d31157d41493d59251115497d153905093115160321b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b60006040516020016113f99060208082526019908201527824a9afa0aa27a6a4a1afa7a920a1a622afa82927ab24a222a960391b604082015260600190565b60006040516020016113f99060208082526019908201527827a920a1a622afa82927ab24a222a92fa327a92faa27a5a2a760391b604082015260600190565b6000604051602001611502906020808252601b908201527a13d49050d31157d512535154d510535417d051129554d513515395602a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800160405160208183030381529060405280519060200120905092915050565b6000806000846001600160a01b03166321f8a72161157586611abe565b6040518263ffffffff1660e01b815260040161159391815260200190565b602060405180830381865afa1580156115b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d491906126d4565b90506001600160a01b0381166115f1576000809250925050611780565b6000819050600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165b91906125a2565b5093505092505060008213611687578682604051635f328a5b60e11b815260040161054e92919061261e565b6000886001600160a01b031663bd02d0f56116a18a611aee565b6040518263ffffffff1660e01b81526004016116bf91815260200190565b602060405180830381865afa1580156116dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170091906125f2565b90508142118015611719575080611717834261260b565b115b1561173d578782826040516306b5a95b60e51b815260040161054e93929190612782565b600061174884611b31565b905060006117568b8b611b87565b90506000611771838368327cb2734119d3b7a9601e1b611c26565b60019a50985050505050505050505b9250929050565b60006117938484611c3b565b905060006117a18285611c5d565b9050828111156117e457604051633d1986f760e01b81526001600160a01b038716600482015260248101869052604481018590526064810184905260840161054e565b505050505050565b6117f4611fa0565b8051611801906002611c6b565b6040805180820190915260058152643a37b5b2b760d91b6020820152815161182c9160009089611cd0565b604080518082019091526008815267383937bb34b232b960c11b6020820152815161185a9160019085611cd0565b602081015161186a906003611c6b565b6118a66000604051806040016040528060088152602001676d696e507269636560c01b815250878460200151611d2d909392919063ffffffff16565b6118e26001604051806040016040528060088152602001676d6178507269636560c01b815250868460200151611d2d909392919063ffffffff16565b61191f600260405180604001604052806009815260200168074696d657374616d760bc1b815250858460200151611d2d909392919063ffffffff16565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166324de01e461195e886001600160a01b031690565b836040518363ffffffff1660e01b815260040161197c929190612f3c565b600060405180830381600087803b15801561199657600080fd5b505af11580156119aa573d6000803e3d6000fd5b50505050505050505050565b60006105b6836001600160a01b038416611d80565b60008181526001830160205260408120548015611ab45760006119ef60018361260b565b8554909150600090611a039060019061260b565b9050818114611a68576000866000018281548110611a2357611a236126be565b9060005260206000200154905080876000018481548110611a4657611a466126be565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611a7957611a79613045565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105b9565b60009150506105b9565b60006040516020016113f9906020808252600a908201526914149250d157d191515160b21b604082015260600190565b60006040516020016113f9906020808252601d908201527f50524943455f464545445f4845415254424541545f4455524154494f4e000000604082015260600190565b600080821215611b835760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161054e565b5090565b600080836001600160a01b031663bd02d0f5611ba285611dcf565b6040518263ffffffff1660e01b8152600401611bc091815260200190565b602060405180830381865afa158015611bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0191906125f2565b9050806000036105b6578260405163b86fffef60e01b815260040161054e91906123ac565b6000611c33848484611e0a565b949350505050565b6000818311611c5357611c4e838361260b565b6105b6565b6105b6828461260b565b60006105b683836000611ef4565b806001600160401b03811115611c8357611c83612091565b604051908082528060200260200182016040528015611cc957816020015b604080518082019091526060815260006020820152815260200190600190039081611ca15790505b5090915250565b8184600001518481518110611ce757611ce76126be565b6020026020010151600001819052508084600001518481518110611d0d57611d0d6126be565b6020908102919091018101516001600160a01b0390921691015250505050565b8184600001518481518110611d4457611d446126be565b6020026020010151600001819052508084600001518481518110611d6a57611d6a6126be565b6020026020010151602001818152505050505050565b6000818152600183016020526040812054611dc7575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105b9565b5060006105b9565b60006040516020016113f990602080825260159082015274282924a1a2afa322a2a22fa6aaa62a24a82624a2a960591b604082015260600190565b6000808060001985870985870292508281108382030391505080600003611e4457838281611e3a57611e3a61305b565b049250505061135e565b808411611e8b5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b604482015260640161054e565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600083600003611f065750600061135e565b8115611f2c57611f258468327cb2734119d3b7a9601e1b856001611f43565b905061135e565b611c338468327cb2734119d3b7a9601e1b85611e0a565b600080611f51868686611e0a565b90506001836002811115611f6757611f67613071565b148015611f84575060008480611f7f57611f7f61305b565b868809115b15611f9757611f9460018261276f565b90505b95945050505050565b604080516101208101909152606060e0820181815261010083019190915281908152602001611fe2604051806040016040528060608152602001606081525090565b8152602001612004604051806040016040528060608152602001606081525090565b8152602001612026604051806040016040528060608152602001606081525090565b8152602001612048604051806040016040528060608152602001606081525090565b815260200161206a604051806040016040528060608152602001606081525090565b815260200161208c604051806040016040528060608152602001606081525090565b905290565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156120c9576120c9612091565b60405290565b604051601f8201601f191681016001600160401b03811182821017156120f7576120f7612091565b604052919050565b60006001600160401b0382111561211857612118612091565b5060051b60200190565b6001600160a01b038116811461213757600080fd5b50565b600082601f83011261214b57600080fd5b8135602061216061215b836120ff565b6120cf565b82815260059290921b8401810191818101908684111561217f57600080fd5b8286015b848110156121a357803561219681612122565b8352918301918301612183565b509695505050505050565b6000606082840312156121c057600080fd5b6121c86120a7565b905081356001600160401b03808211156121e157600080fd5b6121ed8583860161213a565b835260209150818401358181111561220457600080fd5b6122108682870161213a565b83850152506040808501358281111561222857600080fd5b8501601f808201881361223a57600080fd5b813561224861215b826120ff565b81815260059190911b8301860190868101908a83111561226757600080fd5b8785015b838110156122f0578035888111156122835760008081fd5b8601603f81018d136122955760008081fd5b89810135898111156122a9576122a9612091565b6122ba818801601f19168c016120cf565b8181528e8a8385010111156122cf5760008081fd5b818a84018d83013760009181018c019190915284525091880191880161226b565b5080868a0152505050505050505092915050565b60006020828403121561231657600080fd5b81356001600160401b0381111561232c57600080fd5b611c33848285016121ae565b600080828403606081121561234c57600080fd5b833561235781612122565b92506040601f198201121561236b57600080fd5b50604080519081016001600160401b038111828210171561238e5761238e612091565b60409081526020858101358352940135938101939093525092909150565b6001600160a01b0391909116815260200190565b600080604083850312156123d357600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156124235783516001600160a01b0316835292840192918401916001016123fe565b50909695505050505050565b60006020828403121561244157600080fd5b81356105b681612122565b801515811461213757600080fd5b6000806040838503121561246d57600080fd5b82356001600160401b0381111561248357600080fd5b61248f858286016121ae565b92505060208301356124a08161244c565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b8281101561251857815180516001600160a01b0390811686528782015188870152868201518787015260608083015190870152608091820151169085015260a090930192908501906001016124c8565b5091979650505050505050565b918252602082015260400190565b6020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001820161257f5761257f612557565b5060010190565b80516001600160501b038116811461259d57600080fd5b919050565b600080600080600060a086880312156125ba57600080fd5b6125c386612586565b94506020860151935060408601519250606086015191506125e660808701612586565b90509295509295909350565b60006020828403121561260457600080fd5b5051919050565b818103818111156105b9576105b9612557565b6001600160a01b03929092168252602082015260400190565b60006020828403121561264957600080fd5b81516105b68161244c565b6000815180845260005b8181101561267a5760208185018101518683018201520161265e565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b0383168152604060208201819052600090611c3390830184612654565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156126e657600080fd5b81516105b681612122565b600060a0828403121561270357600080fd5b60405160a081016001600160401b038111828210171561272557612725612091565b604052825161273381612122565b80825250602083015160208201526040830151604082015260608301516060820152608083015161276381612122565b60808201529392505050565b808201808211156105b9576105b9612557565b6001600160a01b039390931683526020830191909152604082015260600190565b600081518084526020808501808196508360051b810191508286016000805b8681101561283e578385038a528251604081518188526127e482890182612654565b92890151888403898b01528051808552908a01938693508a0191505b808310156128295783516001600160a01b03168252928901926001929092019190890190612800565b509b88019b96505050918501916001016127c2565b509298975050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156128c357898603605f190184528451805188885261289d89890182612654565b918401516001600160a01b03169784019790975295509381019392810192600101612879565b50808801519550888503818a015250505050611f9781836127a3565b600081518084526020808501808196508360051b810191508286016000805b8681101561283e578385038a5282516040815181885261292082890182612654565b92890151888403898b01528051808552908a01938693508a0191505b8083101561295c578351825292890192600192909201919089019061293c565b509b88019b96505050918501916001016128fe565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156129df57898603605f19018452845180518888526129c289890182612654565b91840151978401979097529550938101939281019260010161299e565b50808801519550888503818a015250505050611f9781836128df565b600081518084526020808501808196508360051b810191508286016000805b8681101561283e578385038a52825160408151818852612a3c82890182612654565b92890151888403898b01528051808552908a01938693508a0191505b80831015612a785783518252928901926001929092019190890190612a58565b509b88019b9650505091850191600101612a1a565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015612afb57898603605f1901845284518051888852612ade89890182612654565b918401519784019790975295509381019392810192600101612aba565b50808801519550888503818a015250505050611f9781836129fb565b600081518084526020808501808196508360051b810191508286016000805b8681101561283e578385038a52825160408151818852612b5882890182612654565b92890151888403898b01528051808552908a01938693508a0191505b80831015612b9657835115158252928901926001929092019190890190612b74565b509b88019b9650505091850191600101612b36565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015612c1b57898603605f1901845284518051888852612bfc89890182612654565b9184015115159784019790975295509381019392810192600101612bd8565b50808801519550888503818a015250505050611f978183612b17565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015612afb57898603605f1901845284518051888852612c8889890182612654565b918401519784019790975295509381019392810192600101612c64565b600081518084526020808501808196506005915083821b81018387016000805b87811015612d50578484038b52825160408151818752612ce782880182612654565b928a0151878403888c01528051808552908b019392508a83019150808a1b83018b01865b82811015612d3957601f19858303018452612d27828751612654565b958d0195938d01939150600101612d0b565b509e8b019e97505050938801935050600101612cc5565b50919998505050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015612ddc57898603605f1901845284518051888852612db089890182612654565b9184015188830389860152919050612dc88183612654565b975050509381019392810192600101612d8c565b50808801519550888503818a015250505050611f978183612ca5565b600081518084526020808501808196506005915083821b81018387016000805b87811015612d50578484038b52825160408151818752612e3a82880182612654565b928a0151878403888c01528051808552908b019392508a83019150808a1b83018b01865b82811015612e8c57601f19858303018452612e7a828751612654565b958d0195938d01939150600101612e5e565b509e8b019e97505050938801935050600101612e18565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015612f2057898603605f1901845284518051888852612ef489890182612654565b9184015188830389860152919050612f0c8183612654565b975050509381019392810192600101612ed0565b50808801519550888503818a015250505050611f978183612df8565b6060815260116060820152704f7261636c65507269636555706461746560781b608082015282602082015260a060408201526000825160e060a0840152612f8761018084018261284c565b90506020840151609f19808584030160c0860152612fa58383612971565b925060408601519150808584030160e0860152612fc28383612a8d565b9250606086015191508085840301610100860152612fe08383612bab565b9250608086015191508085840301610120860152612ffe8383612c37565b925060a08601519150808584030161014086015261301c8383612d5f565b925060c0860151915080858403016101608601525061303b8282612ea3565b9695505050505050565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122057d6de6db85bc02084ba46cda21f8c527de33ae17e989e52f625238eecbbf54e64736f6c63430008120033";

type OracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Oracle__factory extends ContractFactory {
  constructor(...args: OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _sequencerUptimeFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Oracle> {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _sequencerUptimeFeed,
      overrides || {}
    ) as Promise<Oracle>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _sequencerUptimeFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _sequencerUptimeFeed,
      overrides || {}
    );
  }
  override attach(address: string): Oracle {
    return super.attach(address) as Oracle;
  }
  override connect(signer: Signer): Oracle__factory {
    return super.connect(signer) as Oracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleInterface {
    return new utils.Interface(_abi) as OracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Oracle {
    return new Contract(address, _abi, signerOrProvider) as Oracle;
  }
}
