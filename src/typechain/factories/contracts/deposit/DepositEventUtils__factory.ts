// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DepositEventUtils,
  DepositEventUtilsInterface,
} from "../../../contracts/deposit/DepositEventUtils";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialLongToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialShortToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Deposit.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "initialLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Deposit.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Deposit.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Deposit.Props",
        name: "deposit",
        type: "tuple",
      },
      {
        internalType: "enum Deposit.DepositType",
        name: "depositType",
        type: "Deposit.DepositType",
      },
    ],
    name: "createEventData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x612055610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80632365fa231461005b5780633ad763151461007d5780637093839f1461009d578063af74ad10146100c6575b600080fd5b81801561006757600080fd5b5061007b610076366004610ee1565b6100e6565b005b81801561008957600080fd5b5061007b6100983660046112ee565b610259565b6100b06100ab366004611357565b61031d565b6040516100bd91906119e6565b60405180910390f35b8180156100d257600080fd5b5061007b6100e1366004611ab6565b6107fb565b6100ee610cdc565b60808101516100fe906001610a0b565b6040805180820190915260038152626b657960e81b6020820152608082015161012a9160009088610a70565b8051610137906001610a0b565b6040805180820190915260078152661858d8dbdd5b9d60ca1b602082015281516101649160009087610ac3565b60c0810151610174906001610b20565b6040805180820190915260068152653932b0b9b7b760d11b602082015260c08201516101a39160009086610b82565b60a08101516101b3906001610b20565b60408051808201909152600b81526a726561736f6e427974657360a81b602082015260a08201516101e79160009085610b82565b856001600160a01b03166363d163638661020087610bd4565b846040518463ffffffff1660e01b815260040161021f93929190611f24565b600060405180830381600087803b15801561023957600080fd5b505af115801561024d573d6000803e3d6000fd5b50505050505050505050565b6000610265838361031d565b6080810151909150610278906001610a0b565b6040805180820190915260038152626b657960e81b602082015260808201516102a49160009087610a70565b846001600160a01b03166363d16363856102c56102c087515190565b610bd4565b846040518463ffffffff1660e01b81526004016102e493929190611f6a565b600060405180830381600087803b1580156102fe57600080fd5b505af1158015610312573d6000803e3d6000fd5b505050505050505050565b610325610cdc565b61032d610cdc565b805161033a906007610a0b565b6103726000604051806040016040528060078152602001661858d8dbdd5b9d60ca1b81525061036887515190565b8451929190610ac3565b6103a46001604051806040016040528060088152602001673932b1b2b4bb32b960c11b81525061036887516020015190565b6103de60026040518060400160405280601081526020016f18d85b1b189858dad0dbdb9d1c9858dd60821b81525061036887516040015190565b61040e6003604051806040016040528060068152602001651b585c9ad95d60d21b81525061036887516080015190565b61044860046040518060400160405280601081526020016f34b734ba34b0b62637b733aa37b5b2b760811b815250610368875160a0015190565b61048360056040518060400160405280601181526020017034b734ba34b0b629b437b93a2a37b5b2b760791b815250610368875160c0015190565b6104ba60066040518060400160405280600d81526020016c3ab4a332b2a932b1b2b4bb32b960991b81525061036887516060015190565b80516104c7906002610be0565b61050c6000604051806040016040528060118152602001700d8dedccea8ded6cadca6eec2e0a0c2e8d607b1b815250610502875160e0015190565b8451929190610c4a565b6105496001604051806040016040528060128152602001710e6d0dee4e8a8ded6cadca6eec2e0a0c2e8d60731b8152506105028751610100015190565b6020810151610559906008610a0b565b6105a66000604051806040016040528060168152602001751a5b9a5d1a585b131bdb99d51bdad95b905b5bdd5b9d60521b81525061059987602001515190565b6020850151929190610a70565b6105ea6001604051806040016040528060178152602001761a5b9a5d1a585b14da1bdc9d151bdad95b905b5bdd5b9d604a1b81525061059987602090810151015190565b61062660026040518060400160405280600f81526020016e6d696e4d61726b6574546f6b656e7360881b81525061059987602001516040015190565b61066060036040518060400160405280600d81526020016c75706461746564417454696d6560981b81525061059987602001516060015190565b61069960046040518060400160405280600c81526020016b657865637574696f6e46656560a01b81525061059987602001516080015190565b6106d660056040518060400160405280601081526020016f18d85b1b189858dad1d85cd31a5b5a5d60821b815250610599876020015160a0015190565b61071160066040518060400160405280600b81526020016a6465706f7369745479706560a81b81525085600281111561059957610599611fae565b61074860076040518060400160405280600a8152602001691cdc98d0da185a5b925960b21b815250610599876020015160c0015190565b6060810151610758906001610a0b565b6107a660006040518060400160405280601781526020017639b437bab6322ab73bb930b82730ba34bb32aa37b5b2b760491b81525061079987604001515190565b6060850151929190610c87565b60808101516107b6906001610be0565b6107f460006040518060400160405280600881526020016719185d18531a5cdd60c21b8152506107e7876060015190565b6080850151929190610c4a565b9392505050565b610803610cdc565b6080810151610813906001610a0b565b6040805180820190915260038152626b657960e81b6020820152608082015161083f916000908a610a70565b805161084c906001610a0b565b6040805180820190915260078152661858d8dbdd5b9d60ca1b602082015281516108799160009089610ac3565b6020810151610889906004610a0b565b6108cc60006040518060400160405280600f81526020016e1b1bdb99d51bdad95b905b5bdd5b9d608a1b815250878460200151610a70909392919063ffffffff16565b61091060016040518060400160405280601081526020016f1cda1bdc9d151bdad95b905b5bdd5b9d60821b815250868460200151610a70909392919063ffffffff16565b61095860026040518060400160405280601481526020017372656365697665644d61726b6574546f6b656e7360601b815250858460200151610a70909392919063ffffffff16565b61099760036040518060400160405280600f81526020016e7377617050726963696e675479706560881b81525084600581111561059957610599611fae565b876001600160a01b03166363d16363886109b089610bd4565b846040518463ffffffff1660e01b81526004016109cf93929190611fc4565b600060405180830381600087803b1580156109e957600080fd5b505af11580156109fd573d6000803e3d6000fd5b505050505050505050505050565b806001600160401b03811115610a2357610a23610df5565b604051908082528060200260200182016040528015610a6957816020015b604080518082019091526060815260006020820152815260200190600190039081610a415790505b5090915250565b8184600001518481518110610a8757610a87612009565b6020026020010151600001819052508084600001518481518110610aad57610aad612009565b6020026020010151602001818152505050505050565b8184600001518481518110610ada57610ada612009565b6020026020010151600001819052508084600001518481518110610b0057610b00612009565b6020908102919091018101516001600160a01b0390921691015250505050565b806001600160401b03811115610b3857610b38610df5565b604051908082528060200260200182016040528015610a6957816020015b6040805180820190915260608082526020820152815260200190600190039081610b5657505090915250565b8184600001518481518110610b9957610b99612009565b6020026020010151600001819052508084600001518481518110610bbf57610bbf612009565b60200260200101516020018190525050505050565b6001600160a01b031690565b806001600160401b03811115610bf857610bf8610df5565b604051908082528060200260200182016040528015610c3d57816020015b6040805180820190915260608082526020820152815260200190600190039081610c165790505b5082602001819052505050565b8184602001518481518110610c6157610c61612009565b6020026020010151600001819052508084602001518481518110610bbf57610bbf612009565b8184600001518481518110610c9e57610c9e612009565b6020026020010151600001819052508084600001518481518110610cc457610cc4612009565b60209081029190910181015191151591015250505050565b604080516101208101909152606060e0820181815261010083019190915281908152602001610d1e604051806040016040528060608152602001606081525090565b8152602001610d40604051806040016040528060608152602001606081525090565b8152602001610d62604051806040016040528060608152602001606081525090565b8152602001610d84604051806040016040528060608152602001606081525090565b8152602001610da6604051806040016040528060608152602001606081525090565b8152602001610dc8604051806040016040528060608152602001606081525090565b905290565b6001600160a01b0381168114610de257600080fd5b50565b8035610df081610dcd565b919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715610e2d57610e2d610df5565b60405290565b60405161012081016001600160401b0381118282101715610e2d57610e2d610df5565b604051601f8201601f191681016001600160401b0381118282101715610e7e57610e7e610df5565b604052919050565b6000806001600160401b03841115610ea057610ea0610df5565b50601f8301601f1916602001610eb581610e56565b915050828152838383011115610eca57600080fd5b828260208301376000602084830101529392505050565b600080600080600060a08688031215610ef957600080fd5b8535610f0481610dcd565b9450602086013593506040860135610f1b81610dcd565b925060608601356001600160401b03811115610f3657600080fd5b8601601f81018813610f4757600080fd5b610f5688823560208401610e86565b92505060808601356001600160401b03811115610f7257600080fd5b86016000601f82018913610f8557600080fd5b610f9489833560208501610e86565b905080925050509295509295909350565b60006001600160401b03821115610fbe57610fbe610df5565b5060051b60200190565b600082601f830112610fd957600080fd5b8135610fec610fe782610fa5565b610e56565b8082825260208201915060208360051b86010192508583111561100e57600080fd5b602085015b8381101561103457803561102681610dcd565b835260209283019201611013565b5095945050505050565b600060e0828403121561105057600080fd5b60405160e081016001600160401b038111828210171561107257611072610df5565b604090815283358252602080850135908301528381013590820152606080840135908201526080808401359082015260a0808401359082015260c0928301359281019290925250919050565b6000602082840312156110d057600080fd5b604051602081016001600160401b03811182821017156110f2576110f2610df5565b6040529050808235801515811461110857600080fd5b905292915050565b600082601f83011261112157600080fd5b813561112f610fe782610fa5565b8082825260208201915060208360051b86010192508583111561115157600080fd5b602085015b83811015611034578035835260209283019201611156565b6000610140828403121561118157600080fd5b611189610e0b565b905081356001600160401b038111156111a157600080fd5b820161012081850312156111b457600080fd5b6111bc610e33565b6111c582610de5565b81526111d360208301610de5565b60208201526111e460408301610de5565b60408201526111f560608301610de5565b606082015261120660808301610de5565b608082015261121760a08301610de5565b60a082015261122860c08301610de5565b60c082015260e08201356001600160401b0381111561124657600080fd5b61125286828501610fc8565b60e0830152506101008201356001600160401b0381111561127257600080fd5b61127e86828501610fc8565b61010083015250825250611295836020840161103e565b60208201526112a88361010084016110be565b60408201526101208201356001600160401b038111156112c757600080fd5b6112d384828501611110565b60608301525092915050565b803560038110610df057600080fd5b6000806000806080858703121561130457600080fd5b843561130f81610dcd565b93506020850135925060408501356001600160401b0381111561133157600080fd5b61133d8782880161116e565b92505061134c606086016112df565b905092959194509250565b6000806040838503121561136a57600080fd5b82356001600160401b0381111561138057600080fd5b61138c8582860161116e565b92505061139b602084016112df565b90509250929050565b6000815180845260005b818110156113ca576020818501810151868301820152016113ae565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208501945060208160051b8301016020850160005b8381101561149157601f19858403018852815180516040855261142e60408601826113a4565b6020928301518682038785015280518083529084019360009350909101905b808310156114785783516001600160a01b03168252602093840193600193909301929091019061144d565b5060209a8b019a90955093909301925050600101611408565b50909695505050505050565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561151757605f1988860301835283518051604087526114ef60408801826113a4565b6020928301516001600160a01b031697830197909752509384019392909201916001016114c9565b505050506020830151848203602086015261153282826113ea565b95945050505050565b600082825180855260208501945060208160051b8301016020850160005b8381101561149157601f19858403018852815180516040855261157f60408601826113a4565b6020928301518682038785015280518083529084019360009350909101905b808310156115c1578351825260208201915060208401935060018301925061159e565b5060209a8b019a90955093909301925050600101611559565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561164b57605f19888603018352835180516040875261162c60408801826113a4565b6020928301519783019790975250938401939290920191600101611606565b5050505060208301518482036020860152611532828261153b565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561164b57605f1988860301835283518051604087526116b860408801826113a4565b6020928301519783019790975250938401939290920191600101611692565b600082825180855260208501945060208160051b8301016020850160005b8381101561149157601f19858403018852815180516040855261171b60408601826113a4565b6020928301518682038785015280518083529084019360009350909101905b8083101561175f5783511515825260208201915060208401935060018301925061173a565b5060209a8b019a909550939093019250506001016116f5565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156117eb57605f1988860301835283518051604087526117ca60408801826113a4565b602092830151151597830197909752509384019392909201916001016117a4565b505050506020830151848203602086015261153282826116d7565b600082825180855260208501945060208160051b8301016020850160005b8381101561149157601f19858403018852815180516040855261184a60408601826113a4565b6020928301518682038785015280518083529084019391925081830191600582901b84010160005b828110156118a357601f1985830301845261188e8287516113a4565b60209687019694909401939150600101611872565b508097505050505050602082019150602088019750600181019050611824565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561194757605f19888603018352835180516040875261191560408801826113a4565b905060208201519150868103602088015261193081836113a4565b9650505060209384019392909201916001016118ef565b50505050602083015184820360208601526115328282611806565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561194757605f1988860301835283518051604087526119b460408801826113a4565b90506020820151915086810360208801526119cf81836113a4565b96505050602093840193929092019160010161198e565b602081526000825160e06020840152611a0361010084018261149d565b90506020840151601f19848303016040850152611a2082826115da565b9150506040840151601f19848303016060850152611a3e8282611666565b9150506060840151601f19848303016080850152611a5c8282611778565b9150506080840151601f198483030160a0850152611a7a8282611666565b91505060a0840151601f198483030160c0850152611a9882826118c3565b91505060c0840151601f198483030160e08501526115328282611962565b600080600080600080600060e0888a031215611ad157600080fd5b8735611adc81610dcd565b9650602088013595506040880135611af381610dcd565b9450606088013593506080880135925060a0880135915060c088013560068110611b1c57600080fd5b8091505092959891949750929550565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561151757605f198886030183528351805160408752611b7e60408801826113a4565b6020928301516001600160a01b03169783019790975250938401939290920191600101611b58565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561164b57605f198886030183528351805160408752611bf860408801826113a4565b6020928301519783019790975250938401939290920191600101611bd2565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561164b57605f198886030183528351805160408752611c6960408801826113a4565b6020928301519783019790975250938401939290920191600101611c43565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156117eb57605f198886030183528351805160408752611cda60408801826113a4565b60209283015115159783019790975250938401939290920191600101611cb4565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561164b57605f198886030183528351805160408752611d4d60408801826113a4565b6020928301519783019790975250938401939290920191600101611d27565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561194757605f198886030183528351805160408752611dbe60408801826113a4565b9050602082015191508681036020880152611dd981836113a4565b965050506020938401939290920191600101611d98565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561194757605f198886030183528351805160408752611e4260408801826113a4565b9050602082015191508681036020880152611e5d81836113a4565b965050506020938401939290920191600101611e1c565b6000815160e08452611e8960e0850182611b2c565b905060208301518482036020860152611ea28282611ba6565b91505060408301518482036040860152611ebc8282611c17565b91505060608301518482036060860152611ed68282611c88565b91505060808301518482036080860152611ef08282611cfb565b91505060a083015184820360a0860152611f0a8282611d6c565b91505060c083015184820360c08601526115328282611df0565b60808152601060808201526f11195c1bdcda5d10d85b98d95b1b195960821b60a082015283602082015282604082015260c06060820152600061153260c0830184611e74565b60808152600e60808201526d11195c1bdcda5d10dc99585d195960921b60a082015283602082015282604082015260c06060820152600061153260c0830184611e74565b634e487b7160e01b600052602160045260246000fd5b60808152600f60808201526e11195c1bdcda5d115e1958dd5d1959608a1b60a082015283602082015282604082015260c06060820152600061153260c0830184611e74565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220c4c4dcb77702641f22c4bfc0ee2a9f738ad6898fe0a83e4f6ca1455990ed7bdc64736f6c634300081d0033";

type DepositEventUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositEventUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositEventUtils__factory extends ContractFactory {
  constructor(...args: DepositEventUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositEventUtils> {
    return super.deploy(overrides || {}) as Promise<DepositEventUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DepositEventUtils {
    return super.attach(address) as DepositEventUtils;
  }
  override connect(signer: Signer): DepositEventUtils__factory {
    return super.connect(signer) as DepositEventUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositEventUtilsInterface {
    return new utils.Interface(_abi) as DepositEventUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositEventUtils {
    return new Contract(address, _abi, signerOrProvider) as DepositEventUtils;
  }
}
