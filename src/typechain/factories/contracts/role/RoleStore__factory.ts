// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RoleStore,
  RoleStoreInterface,
} from "../../../contracts/role/RoleStore";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ThereMustBeAtLeastOneRoleAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "ThereMustBeAtLeastOneTimelockMultiSig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "getRoleCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleKey",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "roleKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getRoleMembers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getRoles",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "roleKey",
        type: "bytes32",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "roleKey",
        type: "bytes32",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "roleKey",
        type: "bytes32",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061006433604051602001610043906020808252600a90820152692927a622afa0a226a4a760b11b604082015260600190565b6040516020818303038152906040528051906020012061006960201b60201c565b610133565b6100746000826100be565b50600081815260026020526040902061008d90836100d3565b506001600160a01b03909116600090815260036020908152604080832093835292905220805460ff19166001179055565b60006100ca83836100e4565b90505b92915050565b60006100ca836001600160a01b0384165b600081815260018301602052604081205461012b575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556100cd565b5060006100cd565b610926806101426000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c8063208dd1ff146100725780632a861f5714610087578063821c1898146100b057806383d33319146100d0578063ab2742dc146100e6578063ac4ab3fb146100f9578063ca15c8731461011c575b600080fd5b6100856100803660046106f6565b61012f565b005b61009a61009536600461072e565b610193565b6040516100a7919061075a565b60405180910390f35b6100c36100be3660046107a7565b6101b7565b6040516100a791906107c9565b6100d86101ce565b6040519081526020016100a7565b6100856100f43660046106f6565b6101df565b61010c6101073660046106f6565b61021b565b60405190151581526020016100a7565b6100d861012a366004610801565b610246565b61015d3360405160200161014290610837565b6040516020818303038152906040528051906020012061021b565b610185573360405163a35b150b60e01b815260040161017c9190610849565b60405180910390fd5b61018f828261025d565b5050565b60008381526002602052604090206060906101af908484610366565b949350505050565b60606101c560008484610433565b90505b92915050565b60006101da60006104e9565b905090565b6101f23360405160200161014290610837565b610211573360405163a35b150b60e01b815260040161017c9190610849565b61018f82826104f3565b6001600160a01b03919091166000908152600360209081526040808320938352929052205460ff1690565b60008181526002602052604081206101c8906104e9565b60008181526002602052604090206102759083610548565b506001600160a01b03821660009081526003602090815260408083208484528252808320805460ff19169055600290915290206102b1906104e9565b60000361018f576040516020016102c790610837565b6040516020818303038152906040528051906020012081036102fc57604051635bc1e44560e11b815260040160405180910390fd5b6040516020016103319060208082526011908201527054494d454c4f434b5f4d554c544953494760781b604082015260600190565b60405160208183030381529060405280519060200120810361018f57604051630282b5b760e41b815260040160405180910390fd5b60606000610373856104e9565b905080831115610381578092505b600061038d8585610882565b6001600160401b038111156103a4576103a4610895565b6040519080825280602002602001820160405280156103cd578160200160208202803683370190505b509050845b84811015610429576103e4878261055d565b826103ef8884610882565b815181106103ff576103ff6108ab565b6001600160a01b039092166020928302919091019091015280610421816108c1565b9150506103d2565b5095945050505050565b60606000610440856104e9565b90508083111561044e578092505b600061045a8585610882565b6001600160401b0381111561047157610471610895565b60405190808252806020026020018201604052801561049a578160200160208202803683370190505b509050845b84811015610429576104b1878261055d565b826104bc8884610882565b815181106104cc576104cc6108ab565b6020908102919091010152806104e1816108c1565b91505061049f565b60006101c8825490565b6104fe600082610569565b5060008181526002602052604090206105179083610575565b506001600160a01b03909116600090815260036020908152604080832093835292905220805460ff19166001179055565b60006101c5836001600160a01b03841661058a565b60006101c5838361067d565b60006101c583836106a7565b60006101c5836001600160a01b0384166106a7565b600081815260018301602052604081205480156106735760006105ae600183610882565b85549091506000906105c290600190610882565b90508181146106275760008660000182815481106105e2576105e26108ab565b9060005260206000200154905080876000018481548110610605576106056108ab565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610638576106386108da565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506101c8565b60009150506101c8565b6000826000018281548110610694576106946108ab565b9060005260206000200154905092915050565b60008181526001830160205260408120546106ee575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101c8565b5060006101c8565b6000806040838503121561070957600080fd5b82356001600160a01b038116811461072057600080fd5b946020939093013593505050565b60008060006060848603121561074357600080fd5b505081359360208301359350604090920135919050565b6020808252825182820181905260009190848201906040850190845b8181101561079b5783516001600160a01b031683529284019291840191600101610776565b50909695505050505050565b600080604083850312156107ba57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561079b578351835292840192918401916001016107e5565b60006020828403121561081357600080fd5b5035919050565b600a8152692927a622afa0a226a4a760b11b602082015260400190565b6020815260006101c86020830161081a565b6001600160a01b03821681526040602082018190526000906101c590830161081a565b634e487b7160e01b600052601160045260246000fd5b818103818111156101c8576101c861086c565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016108d3576108d361086c565b5060010190565b634e487b7160e01b600052603160045260246000fdfea26469706673582212201dac04ba9f08894822a80508d22a1df701db42647c530d57e7902de9ee0aef0f64736f6c63430008140033";

type RoleStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoleStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoleStore__factory extends ContractFactory {
  constructor(...args: RoleStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RoleStore> {
    return super.deploy(overrides || {}) as Promise<RoleStore>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RoleStore {
    return super.attach(address) as RoleStore;
  }
  override connect(signer: Signer): RoleStore__factory {
    return super.connect(signer) as RoleStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoleStoreInterface {
    return new utils.Interface(_abi) as RoleStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoleStore {
    return new Contract(address, _abi, signerOrProvider) as RoleStore;
  }
}
