/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GlvUtils,
  GlvUtilsInterface,
} from "../../../contracts/glv/GlvUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
    ],
    name: "EmptyGlv",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarketTokenSupply",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvDisabledMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvEnabledMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "provided",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "GlvInvalidLongToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "provided",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "GlvInvalidShortToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvMarketAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "glvMaxMarketCount",
        type: "uint256",
      },
    ],
    name: "GlvMaxMarketCountExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxMarketTokenBalanceAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "marketTokenBalanceAmount",
        type: "uint256",
      },
    ],
    name: "GlvMaxMarketTokenBalanceAmountExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxMarketTokenBalanceUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "marketTokenBalanceUsd",
        type: "uint256",
      },
    ],
    name: "GlvMaxMarketTokenBalanceUsdExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvNegativeMarketPoolValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvNonZeroMarketBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvUnsupportedMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
    ],
    name: "getGlvMarketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address[]",
        name: "marketAddresses",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props[]",
        name: "indexTokenPrices",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "longTokenPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "shortTokenPrice",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getGlvValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "contract Oracle",
        name: "oracle",
        type: "Oracle",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getGlvValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
    ],
    name: "validateGlv",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "bool",
        name: "shouldBeEnabled",
        type: "bool",
      },
    ],
    name: "validateGlvMarket",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "marketPoolValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "marketTokenSupply",
        type: "uint256",
      },
    ],
    name: "validateGlvMarketTokenBalance",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x612d2961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100825760003560e01c80630856d2ec146100875780633aa8c3e6146100a95780638aa2b9e7146100bc57806391f0f183146100dc578063ac6c1991146100ef578063b18e943314610114578063c61cf99014610127578063d19a261e1461013a575b600080fd5b81801561009357600080fd5b506100a76100a2366004611ae0565b61014d565b005b6100a76100b7366004611b3c565b61039d565b8180156100c857600080fd5b506100a76100d7366004611ae0565b610470565b6100a76100ea366004611c28565b610636565b6101026100fd366004611dbb565b610840565b60405190815260200160405180910390f35b610102610122366004611ed7565b6108e4565b610102610135366004611b3c565b610c48565b6100a7610148366004611ed7565b610cca565b610157848361039d565b60006101638583610e0a565b9050600073__$c61efa35244e2ed3fbfa63ba28e8d0556c$__63a8d8fff587866040518363ffffffff1660e01b81526004016101a0929190611f28565b606060405180830381865af41580156101bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e19190611f42565b905080602001516001600160a01b031682604001516001600160a01b0316146102345783826040015182602001516040516380ad683160e01b815260040161022b93929190611fb3565b60405180910390fd5b80604001516001600160a01b031682606001516001600160a01b03161461027c578382606001518260400151604051639673a10b60e01b815260040161022b93929190611fb3565b600061028785610e9b565b60405163c769d1a160e01b81529091506001600160a01b0388169063c769d1a1906102b89084908890600401611fd6565b602060405180830381865afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190611fed565b1561031b578484604051633aa9fc9160e01b815260040161022b929190611f28565b60405163b348e63960e01b81526001600160a01b0388169063b348e639906103499084908890600401611fd6565b600060405180830381600087803b15801561036357600080fd5b505af1158015610377573d6000803e3d6000fd5b505050506103858786610f1f565b61039486868560000151611099565b50505050505050565b816001600160a01b031663c769d1a16040516020016103d89060208082526008908201526711d31597d31254d560c21b604082015260600190565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b815260040161040c929190611fd6565b602060405180830381865afa158015610429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044d9190611fed565b61046c578060405163a14e1b3d60e01b815260040161022b919061200a565b5050565b61047a848361039d565b6104878483836000610cca565b836001600160a01b0316637ae1cfca6104a08484611171565b6040518263ffffffff1660e01b81526004016104be91815260200190565b602060405180830381865afa1580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190611fed565b610520578181604051638da3116160e01b815260040161022b929190611f28565b60405163523fba7f60e01b81526000906001600160a01b0384169063523fba7f9061054f90859060040161200a565b602060405180830381865afa15801561056c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610590919061201e565b905080156105b5578282604051633afc5e6560e01b815260040161022b929190611f28565b60006105c084610e9b565b6040516369721d4160e01b81529091506001600160a01b038716906369721d41906105f19084908790600401611fd6565b600060405180830381600087803b15801561060b57600080fd5b505af115801561061f573d6000803e3d6000fd5b5050505061062e858585611203565b505050505050565b6000856001600160a01b031663bd02d0f56106558787600001516112ad565b6040518263ffffffff1660e01b815260040161067391815260200190565b602060405180830381865afa158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b4919061201e565b90506000866001600160a01b031663bd02d0f56106d58888600001516112ee565b6040518263ffffffff1660e01b81526004016106f391815260200190565b602060405180830381865afa158015610710573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610734919061201e565b905080158015610742575081155b1561074e575050610839565b845160405163523fba7f60e01b81526000916001600160a01b0389169163523fba7f9161077d9160040161200a565b602060405180830381865afa15801561079a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107be919061201e565b90506000821180156107cf57508181115b156107f557855160405163d859f94760e01b815261022b91899185908590600401612037565b821561083557600061080882878761133d565b9050838111156108335786516040516366560e7d60e01b815261022b918a9187908590600401612037565b505b5050505b5050505050565b600061084a611934565b60005b88518110156108d157600089828151811061086a5761086a612060565b6020026020010151905088828151811061088657610886612060565b602002602001015183606001819052506108a98b878386606001518c8c8b611375565b836040018181516108ba919061208c565b9052508190506108c98161209f565b91505061084d565b506040015190505b979650505050505050565b60006108ee611934565b6108f784610e9b565b8082526040516335ea805960e01b815260048101919091526001600160a01b038716906335ea805990602401602060405180830381865afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610964919061201e565b6020820181905281516040516373f20a4760e11b8152600481019190915260006024820181905260448201929092526001600160a01b0388169063e7e4148e90606401600060405180830381865afa1580156109c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109ec91908101906120b8565b905060005b8151811015610c39576000828281518110610a0e57610a0e612060565b60200260200101519050600073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58b846040518363ffffffff1660e01b8152600401610a53929190611f28565b608060405180830381865af4158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a949190612146565b905082600003610b89576040808201519051631773dc6560e21b81526001600160a01b038b1691635dcf719491610ace919060040161200a565b6040805180830381865afa158015610aea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0e91906121ad565b60808601526060810151604051631773dc6560e21b81526001600160a01b038b1691635dcf719491610b43919060040161200a565b6040805180830381865afa158015610b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8391906121ad565b60a08601525b610c0f8a89848c6001600160a01b0316635dcf719486602001516040518263ffffffff1660e01b8152600401610bbf919061200a565b6040805180830381865afa158015610bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bff91906121ad565b89608001518a60a001518d611375565b85604001818151610c20919061208c565b905250829150610c3190508161209f565b9150506109f1565b50506040015195945050505050565b6000826001600160a01b03166335ea8059610c6284610e9b565b6040518263ffffffff1660e01b8152600401610c8091815260200190565b602060405180830381865afa158015610c9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc1919061201e565b90505b92915050565b836001600160a01b031663c769d1a1610ce285610e9b565b846040518363ffffffff1660e01b8152600401610d00929190611fd6565b602060405180830381865afa158015610d1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d419190611fed565b610d625782826040516307e9c4d560e01b815260040161022b929190611f28565b808015610de25750836001600160a01b0316637ae1cfca610d838585611171565b6040518263ffffffff1660e01b8152600401610da191815260200190565b602060405180830381865afa158015610dbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de29190611fed565b15610e045782826040516330b8a22560e01b815260040161022b929190611f28565b50505050565b610e1261198b565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590610e4e9087908790600401611f28565b608060405180830381865af4158015610e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8f9190612146565b9050610cc184826115b4565b6000604051602001610eda9060208082526019908201527811d31597d4d5541413d495115117d3505492d15517d31254d5603a1b604082015260600190565b6040516020818303038152906040528051906020012082604051602001610f02929190611fd6565b604051602081830303815290604052805190602001209050919050565b6000826001600160a01b031663bd02d0f5604051602001610f689060208082526014908201527311d31597d3505617d3505492d15517d0d3d5539560621b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610f9c91815260200190565b602060405180830381865afa158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd919061201e565b90508015611094576000610ff083610e9b565b6040516335ea805960e01b8152600481018290529091506000906001600160a01b038616906335ea805990602401602060405180830381865afa15801561103b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105f919061201e565b9050828111156108395760405163af7d378760e01b81526001600160a01b03851660048201526024810184905260440161022b565b505050565b6110a16119b2565b80516110ae90600261167d565b60408051808201909152600381526233b63b60e91b602082015281516110d791600090866116e2565b6040805180820190915260068152651b585c9ad95d60d21b6020820152815161110391600190856116e2565b836001600160a01b03166363d1636361111b8561173f565b6111248561173f565b846040518463ffffffff1660e01b815260040161114393929190612b25565b600060405180830381600087803b15801561115d57600080fd5b505af1158015610835573d6000803e3d6000fd5b60006040516020016111ad906020808252601690820152751254d7d1d31597d3505492d15517d11254d05093115160521b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800160405160208183030381529060405280519060200120905092915050565b61120b6119b2565b805161121890600261167d565b60408051808201909152600381526233b63b60e91b6020820152815161124191600090866116e2565b6040805180820190915260068152651b585c9ad95d60d21b6020820152815161126d91600190856116e2565b836001600160a01b03166363d163636112858561173f565b61128e8561173f565b846040518463ffffffff1660e01b815260040161114393929190612b69565b60006040516020016111ad906020808252818101527f474c565f4d41585f4d41524b45545f544f4b454e5f42414c414e43455f555344604082015260600190565b60006040516020016111ad9060208082526023908201527f474c565f4d41585f4d41524b45545f544f4b454e5f42414c414e43455f414d4f60408201526215539560ea1b606082015260800190565b60008160000361136057604051630bb8f5a760e21b815260040160405180910390fd5b61136b83858461174b565b90505b9392505050565b60008073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58a896040518363ffffffff1660e01b81526004016113b1929190611f28565b608060405180830381865af41580156113ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f29190612146565b905060006113ff88611758565b90506000896001600160a01b031663523fba7f8a6040518263ffffffff1660e01b815260040161142f919061200a565b602060405180830381865afa15801561144c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611470919061201e565b90508060000361148657600093505050506108d9565b600073__$e53db83827f4e07ebc418caf7145b8c2d5$__63f2e2a4f58d868c8c8c6040516020016114e6906020808252601b908201527a4d41585f504e4c5f464143544f525f464f525f4445504f5349545360281b604082015260600190565b604051602081830303815290604052805190602001208d6040518863ffffffff1660e01b815260040161151f9796959493929190612baf565b61016060405180830381865af415801561153d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115619190612c4a565b905060008160000151121561158d578a8a604051632e3780e560e01b815260040161022b929190611f28565b6115a48261159e83600001516117bc565b8561133d565b9c9b505050505050505050505050565b80516001600160a01b03166115dc576040516302fde0d760e11b815260040160405180910390fd5b6000826001600160a01b0316637ae1cfca6115fa8460000151611812565b6040518263ffffffff1660e01b815260040161161891815260200190565b602060405180830381865afa158015611635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116599190611fed565b905080156110945781516040516309f8c93760e01b815261022b919060040161200a565b806001600160401b0381111561169557611695611b75565b6040519080825280602002602001820160405280156116db57816020015b6040805180820190915260608152600060208201528152602001906001900390816116b35790505b5090915250565b81846000015184815181106116f9576116f9612060565b602002602001015160000181905250808460000151848151811061171f5761171f612060565b6020908102919091018101516001600160a01b0390921691015250505050565b6001600160a01b031690565b600061136b84848461184a565b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611798573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc4919061201e565b60008082121561180e5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161022b565b5090565b6000604051602001610eda906020808252601290820152711254d7d3505492d15517d11254d05093115160721b604082015260600190565b60008080600019858709858702925082811083820303915050806000036118845783828161187a5761187a612cdd565b049250505061136e565b8084116118cb5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b604482015260640161022b565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6040518060e0016040528060008019168152602001600081526020016000815260200161195f611a9e565b815260200161196c611a9e565b8152602001611979611a9e565b815260200161198661198b565b905290565b60408051608081018252600080825260208201819052918101829052606081019190915290565b604080516101208101909152606060e08201818152610100830191909152819081526020016119f4604051806040016040528060608152602001606081525090565b8152602001611a16604051806040016040528060608152602001606081525090565b8152602001611a38604051806040016040528060608152602001606081525090565b8152602001611a5a604051806040016040528060608152602001606081525090565b8152602001611a7c604051806040016040528060608152602001606081525090565b8152602001611986604051806040016040528060608152602001606081525090565b604051806040016040528060008152602001600081525090565b6001600160a01b0381168114611acd57600080fd5b50565b8035611adb81611ab8565b919050565b60008060008060808587031215611af657600080fd5b8435611b0181611ab8565b93506020850135611b1181611ab8565b92506040850135611b2181611ab8565b91506060850135611b3181611ab8565b939692955090935050565b60008060408385031215611b4f57600080fd5b8235611b5a81611ab8565b91506020830135611b6a81611ab8565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611bad57611bad611b75565b60405290565b604080519081016001600160401b0381118282101715611bad57611bad611b75565b60405161016081016001600160401b0381118282101715611bad57611bad611b75565b604051601f8201601f191681016001600160401b0381118282101715611c2057611c20611b75565b604052919050565b6000806000806000858703610100811215611c4257600080fd5b8635611c4d81611ab8565b95506020870135611c5d81611ab8565b94506080603f1982011215611c7157600080fd5b50611c7a611b8b565b6040870135611c8881611ab8565b81526060870135611c9881611ab8565b60208201526080870135611cab81611ab8565b604082015260a0870135611cbe81611ab8565b60608201529497939650939460c0810135945060e0013592915050565b60006001600160401b03821115611cf457611cf4611b75565b5060051b60200190565b600060408284031215611d1057600080fd5b611d18611bb3565b9050813581526020820135602082015292915050565b600082601f830112611d3f57600080fd5b81356020611d54611d4f83611cdb565b611bf8565b82815260069290921b84018101918181019086841115611d7357600080fd5b8286015b84811015611d9757611d898882611cfe565b835291830191604001611d77565b509695505050505050565b8015158114611acd57600080fd5b8035611adb81611da2565b6000806000806000806000610120888a031215611dd757600080fd5b8735611de281611ab8565b96506020888101356001600160401b0380821115611dff57600080fd5b818b0191508b601f830112611e1357600080fd5b8135611e21611d4f82611cdb565b81815260059190911b8301840190848101908e831115611e4057600080fd5b938501935b82851015611e67578435611e5881611ab8565b82529385019390850190611e45565b9a50505060408b0135925080831115611e7f57600080fd5b5050611e8d8a828b01611d2e565b955050611e9d8960608a01611cfe565b9350611eac8960a08a01611cfe565b9250611eba60e08901611ad0565b9150611ec96101008901611db0565b905092959891949750929550565b60008060008060808587031215611eed57600080fd5b8435611ef881611ab8565b93506020850135611f0881611ab8565b92506040850135611f1881611ab8565b91506060850135611b3181611da2565b6001600160a01b0392831681529116602082015260400190565b600060608284031215611f5457600080fd5b604051606081016001600160401b0381118282101715611f7657611f76611b75565b6040528251611f8481611ab8565b81526020830151611f9481611ab8565b60208201526040830151611fa781611ab8565b60408201529392505050565b6001600160a01b0393841681529183166020830152909116604082015260600190565b9182526001600160a01b0316602082015260400190565b600060208284031215611fff57600080fd5b8151610cc181611da2565b6001600160a01b0391909116815260200190565b60006020828403121561203057600080fd5b5051919050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610cc457610cc4612076565b6000600182016120b1576120b1612076565b5060010190565b600060208083850312156120cb57600080fd5b82516001600160401b038111156120e157600080fd5b8301601f810185136120f257600080fd5b8051612100611d4f82611cdb565b81815260059190911b8201830190838101908783111561211f57600080fd5b928401925b828410156108d957835161213781611ab8565b82529284019290840190612124565b60006080828403121561215857600080fd5b612160611b8b565b825161216b81611ab8565b8152602083015161217b81611ab8565b6020820152604083015161218e81611ab8565b604082015260608301516121a181611ab8565b60608201529392505050565b6000604082840312156121bf57600080fd5b6121c7611bb3565b82518152602083015160208201528091505092915050565b6000815180845260005b81811015612205576020818501810151868301820152016121e9565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501808196508360051b810191508286016000805b868110156122c0578385038a52825160408151818852612266828901826121df565b92890151888403898b01528051808552908a01938693508a0191505b808310156122ab5783516001600160a01b03168252928901926001929092019190890190612282565b509b88019b9650505091850191600101612244565b509298975050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561234557898603605f190184528451805188885261231f898901826121df565b918401516001600160a01b031697840197909752955093810193928101926001016122fb565b50808801519550888503818a0152505050506123618183612225565b95945050505050565b600081518084526020808501808196508360051b810191508286016000805b868110156122c0578385038a528251604081518188526123ab828901826121df565b92890151888403898b01528051808552908a01938693508a0191505b808310156123e757835182529289019260019290920191908901906123c7565b509b88019b9650505091850191600101612389565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561246a57898603605f190184528451805188885261244d898901826121df565b918401519784019790975295509381019392810192600101612429565b50808801519550888503818a015250505050612361818361236a565b600081518084526020808501808196508360051b810191508286016000805b868110156122c0578385038a528251604081518188526124c7828901826121df565b92890151888403898b01528051808552908a01938693508a0191505b8083101561250357835182529289019260019290920191908901906124e3565b509b88019b96505050918501916001016124a5565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561258657898603605f1901845284518051888852612569898901826121df565b918401519784019790975295509381019392810192600101612545565b50808801519550888503818a0152505050506123618183612486565b600081518084526020808501808196508360051b810191508286016000805b868110156122c0578385038a528251604081518188526125e3828901826121df565b92890151888403898b01528051808552908a01938693508a0191505b80831015612621578351151582529289019260019290920191908901906125ff565b509b88019b96505050918501916001016125c1565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156126a657898603605f1901845284518051888852612687898901826121df565b9184015115159784019790975295509381019392810192600101612663565b50808801519550888503818a01525050505061236181836125a2565b600081518084526020808501808196508360051b810191508286016000805b868110156122c0578385038a52825160408151818852612703828901826121df565b92890151888403898b01528051808552908a01938693508a0191505b8083101561273f578351825292890192600192909201919089019061271f565b509b88019b96505050918501916001016126e1565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156127c257898603605f19018452845180518888526127a5898901826121df565b918401519784019790975295509381019392810192600101612781565b50808801519550888503818a01525050505061236181836126c2565b600081518084526020808501808196506005915083821b81018387016000805b87811015612889578484038b52825160408151818752612820828801826121df565b928a0151878403888c01528051808552908b019392508a83019150808a1b83018b01865b8281101561287257601f198583030184526128608287516121df565b958d0195938d01939150600101612844565b509e8b019e975050509388019350506001016127fe565b50919998505050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561291557898603605f19018452845180518888526128e9898901826121df565b918401518883038986015291905061290181836121df565b9750505093810193928101926001016128c5565b50808801519550888503818a01525050505061236181836127de565b600081518084526020808501808196506005915083821b81018387016000805b87811015612889578484038b52825160408151818752612973828801826121df565b928a0151878403888c01528051808552908b019392508a83019150808a1b83018b01865b828110156129c557601f198583030184526129b38287516121df565b958d0195938d01939150600101612997565b509e8b019e97505050938801935050600101612951565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015612a5957898603605f1901845284518051888852612a2d898901826121df565b9184015188830389860152919050612a4581836121df565b975050509381019392810192600101612a09565b50808801519550888503818a0152505050506123618183612931565b6000815160e08452612a8a60e08501826122ce565b905060208301518482036020860152612aa382826123fc565b91505060408301518482036040860152612abd8282612518565b91505060608301518482036060860152612ad78282612636565b91505060808301518482036080860152612af18282612754565b91505060a083015184820360a0860152612b0b8282612898565b91505060c083015184820360c086015261236182826129dc565b60808152600e60808201526d11db1d93585c9ad95d105919195960921b60a082015283602082015282604082015260c06060820152600061236160c0830184612a75565b60808152601060808201526f11db1d93585c9ad95d14995b5bdd995960821b60a082015283602082015282604082015260c06060820152600061236160c0830184612a75565b60006101a08201905060018060a01b03808a1683528089511660208401528060208a01511660408401528060408a01511660608401528060608a015116608084015250612c0960a083018880518252602090810151910152565b855160e08301526020860151610100830152845161012083015260208501516101408301528361016083015282151561018083015298975050505050505050565b60006101608284031215612c5d57600080fd5b612c65611bd5565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152506101408084015181830152508091505092915050565b634e487b7160e01b600052601260045260246000fdfea264697066735822122082a93a528b346fcf36982c6fbbae0ffd650465ed1595ed3d1e3fc69e58e9975d64736f6c63430008120033";

type GlvUtilsConstructorParams =
  | [linkLibraryAddresses: GlvUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlvUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GlvUtils__factory extends ContractFactory {
  constructor(...args: GlvUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, GlvUtils__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: GlvUtilsLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c61efa35244e2ed3fbfa63ba28e8d0556c\\$__", "g"),
      linkLibraryAddresses["contracts/glv/GlvStoreUtils.sol:GlvStoreUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff439aa65a80c9eec648f15db20b189505\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e53db83827f4e07ebc418caf7145b8c2d5\\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GlvUtils> {
    return super.deploy(overrides || {}) as Promise<GlvUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GlvUtils {
    return super.attach(address) as GlvUtils;
  }
  override connect(signer: Signer): GlvUtils__factory {
    return super.connect(signer) as GlvUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlvUtilsInterface {
    return new utils.Interface(_abi) as GlvUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlvUtils {
    return new Contract(address, _abi, signerOrProvider) as GlvUtils;
  }
}

export interface GlvUtilsLibraryAddresses {
  ["contracts/glv/GlvStoreUtils.sol:GlvStoreUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
}
