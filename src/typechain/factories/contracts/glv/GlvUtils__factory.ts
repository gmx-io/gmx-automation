// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GlvUtils,
  GlvUtilsInterface,
} from "../../../contracts/glv/GlvUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
    ],
    name: "EmptyGlv",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarketTokenSupply",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvDisabledMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvEnabledMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "provided",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "GlvInvalidLongToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "provided",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "GlvInvalidShortToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvMarketAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "glvMaxMarketCount",
        type: "uint256",
      },
    ],
    name: "GlvMaxMarketCountExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxMarketTokenBalanceAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "marketTokenBalanceAmount",
        type: "uint256",
      },
    ],
    name: "GlvMaxMarketTokenBalanceAmountExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxMarketTokenBalanceUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "marketTokenBalanceUsd",
        type: "uint256",
      },
    ],
    name: "GlvMaxMarketTokenBalanceUsdExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvNegativeMarketPoolValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvNonZeroMarketBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "GlvUnsupportedMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
    ],
    name: "getGlvMarketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "contract IOracle",
        name: "oracle",
        type: "IOracle",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getGlvValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address[]",
        name: "marketAddresses",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props[]",
        name: "indexTokenPrices",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "longTokenPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "shortTokenPrice",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getGlvValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
    ],
    name: "validateGlv",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "bool",
        name: "shouldBeEnabled",
        type: "bool",
      },
    ],
    name: "validateGlvMarket",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "glv",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "marketPoolValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "marketTokenSupply",
        type: "uint256",
      },
    ],
    name: "validateGlvMarketTokenBalance",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x612b6561003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100825760003560e01c80630856d2ec146100875780633aa8c3e6146100a957806351b1bf02146100bc5780638aa2b9e7146100e157806391f0f18314610101578063ac6c199114610114578063c61cf99014610127578063d19a261e1461013a575b600080fd5b81801561009357600080fd5b506100a76100a23660046119bb565b61014d565b005b6100a76100b7366004611a17565b61040e565b6100cf6100ca366004611a69565b6104e1565b60405190815260200160405180910390f35b8180156100ed57600080fd5b506100a76100fc3660046119bb565b610845565b6100a761010f366004611b6d565b610a0b565b6100cf610122366004611ce7565b610c15565b6100cf610135366004611a17565b610cb9565b6100a7610148366004611a69565b610d3b565b610157848361040e565b604051632ecad23f60e11b815260009073__$e53db83827f4e07ebc418caf7145b8c2d5$__90635d95a47e906101939088908690600401611e03565b608060405180830381865af41580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190611e1d565b9050600073__$c61efa35244e2ed3fbfa63ba28e8d0556c$__63a8d8fff587866040518363ffffffff1660e01b8152600401610211929190611e03565b606060405180830381865af415801561022e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102529190611e84565b905080602001516001600160a01b031682604001516001600160a01b0316146102a55783826040015182602001516040516380ad683160e01b815260040161029c93929190611ef5565b60405180910390fd5b80604001516001600160a01b031682606001516001600160a01b0316146102ed578382606001518260400151604051639673a10b60e01b815260040161029c93929190611ef5565b60006102f885610e7b565b60405163c769d1a160e01b81529091506001600160a01b0388169063c769d1a1906103299084908890600401611f18565b602060405180830381865afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190611f2f565b1561038c578484604051633aa9fc9160e01b815260040161029c929190611e03565b60405163b348e63960e01b81526001600160a01b0388169063b348e639906103ba9084908890600401611f18565b600060405180830381600087803b1580156103d457600080fd5b505af11580156103e8573d6000803e3d6000fd5b505050506103f68786610eff565b61040586868560000151611079565b50505050505050565b816001600160a01b031663c769d1a16040516020016104499060208082526008908201526711d31597d31254d560c21b604082015260600190565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b815260040161047d929190611f18565b602060405180830381865afa15801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be9190611f2f565b6104dd578060405163a14e1b3d60e01b815260040161029c9190611f4c565b5050565b60006104eb611819565b6104f484610e7b565b8082526040516335ea805960e01b815260048101919091526001600160a01b038716906335ea805990602401602060405180830381865afa15801561053d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105619190611f60565b6020820181905281516040516373f20a4760e11b8152600481019190915260006024820181905260448201929092526001600160a01b0388169063e7e4148e90606401600060405180830381865afa1580156105c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e99190810190611f79565b905060005b815181101561083657600082828151811061060b5761060b612007565b60200260200101519050600073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58b846040518363ffffffff1660e01b8152600401610650929190611e03565b608060405180830381865af415801561066d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106919190611e1d565b905082600003610786576040808201519051631773dc6560e21b81526001600160a01b038b1691635dcf7194916106cb9190600401611f4c565b6040805180830381865afa1580156106e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070b919061201d565b60808601526060810151604051631773dc6560e21b81526001600160a01b038b1691635dcf7194916107409190600401611f4c565b6040805180830381865afa15801561075c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610780919061201d565b60a08601525b61080c8a89848c6001600160a01b0316635dcf719486602001516040518263ffffffff1660e01b81526004016107bc9190611f4c565b6040805180830381865afa1580156107d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fc919061201d565b89608001518a60a001518d611151565b8560400181815161081d9190612065565b90525082915061082e905081612078565b9150506105ee565b50506040015195945050505050565b61084f848361040e565b61085c8483836000610d3b565b836001600160a01b0316637ae1cfca61087584846113ff565b6040518263ffffffff1660e01b815260040161089391815260200190565b602060405180830381865afa1580156108b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d49190611f2f565b6108f5578181604051638da3116160e01b815260040161029c929190611e03565b60405163523fba7f60e01b81526000906001600160a01b0384169063523fba7f90610924908590600401611f4c565b602060405180830381865afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190611f60565b9050801561098a578282604051633afc5e6560e01b815260040161029c929190611e03565b600061099584610e7b565b6040516369721d4160e01b81529091506001600160a01b038716906369721d41906109c69084908790600401611f18565b600060405180830381600087803b1580156109e057600080fd5b505af11580156109f4573d6000803e3d6000fd5b50505050610a03858585611491565b505050505050565b6000856001600160a01b031663bd02d0f5610a2a87876000015161153b565b6040518263ffffffff1660e01b8152600401610a4891815260200190565b602060405180830381865afa158015610a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a899190611f60565b90506000866001600160a01b031663bd02d0f5610aaa88886000015161157c565b6040518263ffffffff1660e01b8152600401610ac891815260200190565b602060405180830381865afa158015610ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b099190611f60565b905080158015610b17575081155b15610b23575050610c0e565b845160405163523fba7f60e01b81526000916001600160a01b0389169163523fba7f91610b5291600401611f4c565b602060405180830381865afa158015610b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b939190611f60565b9050600082118015610ba457508181115b15610bca57855160405163d859f94760e01b815261029c91899185908590600401612091565b8215610c0a576000610bdd8287876115cb565b905083811115610c085786516040516366560e7d60e01b815261029c918a9187908590600401612091565b505b5050505b5050505050565b6000610c1f611819565b60005b8851811015610ca6576000898281518110610c3f57610c3f612007565b60200260200101519050888281518110610c5b57610c5b612007565b60200260200101518360600181905250610c7e8b878386606001518c8c8b611151565b83604001818151610c8f9190612065565b905250819050610c9e81612078565b915050610c22565b506040015190505b979650505050505050565b6000826001600160a01b03166335ea8059610cd384610e7b565b6040518263ffffffff1660e01b8152600401610cf191815260200190565b602060405180830381865afa158015610d0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d329190611f60565b90505b92915050565b836001600160a01b031663c769d1a1610d5385610e7b565b846040518363ffffffff1660e01b8152600401610d71929190611f18565b602060405180830381865afa158015610d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db29190611f2f565b610dd35782826040516307e9c4d560e01b815260040161029c929190611e03565b808015610e535750836001600160a01b0316637ae1cfca610df485856113ff565b6040518263ffffffff1660e01b8152600401610e1291815260200190565b602060405180830381865afa158015610e2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e539190611f2f565b15610e755782826040516330b8a22560e01b815260040161029c929190611e03565b50505050565b6000604051602001610eba9060208082526019908201527811d31597d4d5541413d495115117d3505492d15517d31254d5603a1b604082015260600190565b6040516020818303038152906040528051906020012082604051602001610ee2929190611f18565b604051602081830303815290604052805190602001209050919050565b6000826001600160a01b031663bd02d0f5604051602001610f489060208082526014908201527311d31597d3505617d3505492d15517d0d3d5539560621b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610f7c91815260200190565b602060405180830381865afa158015610f99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbd9190611f60565b90508015611074576000610fd083610e7b565b6040516335ea805960e01b8152600481018290529091506000906001600160a01b038616906335ea805990602401602060405180830381865afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f9190611f60565b905082811115610c0e5760405163af7d378760e01b81526001600160a01b03851660048201526024810184905260440161029c565b505050565b61108161188d565b805161108e906002611603565b60408051808201909152600381526233b63b60e91b602082015281516110b79160009086611668565b6040805180820190915260068152651b585c9ad95d60d21b602082015281516110e39160019085611668565b836001600160a01b03166363d163636110fb856116c5565b611104856116c5565b846040518463ffffffff1660e01b815260040161112393929190612955565b600060405180830381600087803b15801561113d57600080fd5b505af1158015610c0a573d6000803e3d6000fd5b60008073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58a896040518363ffffffff1660e01b815260040161118d929190611e03565b608060405180830381865af41580156111aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ce9190611e1d565b9050600073__$e53db83827f4e07ebc418caf7145b8c2d5$__6316ba2089896040518263ffffffff1660e01b81526004016112099190611f4c565b602060405180830381865af4158015611226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124a9190611f60565b90506000896001600160a01b031663523fba7f8a6040518263ffffffff1660e01b815260040161127a9190611f4c565b602060405180830381865afa158015611297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bb9190611f60565b9050806000036112d15760009350505050610cae565b600073__$e53db83827f4e07ebc418caf7145b8c2d5$";

type GlvUtilsConstructorParams =
  | [linkLibraryAddresses: GlvUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlvUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GlvUtils__factory extends ContractFactory {
  constructor(...args: GlvUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, GlvUtils__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: GlvUtilsLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$c61efa35244e2ed3fbfa63ba28e8d0556c\$__", "g"),
      linkLibraryAddresses["contracts/glv/GlvStoreUtils.sol:GlvStoreUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$ff439aa65a80c9eec648f15db20b189505\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GlvUtils> {
    return super.deploy(overrides || {}) as Promise<GlvUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GlvUtils {
    return super.attach(address) as GlvUtils;
  }
  override connect(signer: Signer): GlvUtils__factory {
    return super.connect(signer) as GlvUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlvUtilsInterface {
    return new utils.Interface(_abi) as GlvUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlvUtils {
    return new Contract(address, _abi, signerOrProvider) as GlvUtils;
  }
}

export interface GlvUtilsLibraryAddresses {
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
  ["contracts/glv/GlvStoreUtils.sol:GlvStoreUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
}
