// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GlvStoreUtils,
  GlvStoreUtilsInterface,
} from "../../../contracts/glv/GlvStoreUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "GlvNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "GLV_SALT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GLV_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LONG_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHORT_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "get",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "glvToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Glv.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "getBySalt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "glvToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Glv.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610efc61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100815760003560e01c8062a28b36146100865780635231e24f146100a1578063537803c2146100a9578063576a0b24146100ee578063929b41c414610110578063a8d8fff514610118578063b4fd62651461012b578063ef0185ea1461014b575b600080fd5b61008e610153565b6040519081526020015b60405180910390f35b61008e61017b565b6100bc6100b7366004610c79565b61018a565b6040805182516001600160a01b0390811682526020808501518216908301529282015190921690820152606001610098565b8180156100fa57600080fd5b5061010e610109366004610ca5565b610221565b005b61008e61056c565b6100bc610126366004610d67565b61057b565b81801561013757600080fd5b5061010e610146366004610d67565b610895565b61008e610be0565b60405160200161016290610da0565b6040516020818303038152906040528051906020012081565b60405160200161016290610dc4565b610192610c41565b6000836001600160a01b03166321f8a7216101ac85610bef565b6040518263ffffffff1660e01b81526004016101ca91815260200190565b602060405180830381865afa1580156101e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020b9190610de9565b9050610217848261057b565b9150505b92915050565b836001600160a01b031663b348e63960405160200161023f90610e0d565b60405160208183030381529060405280519060200120856040518363ffffffff1660e01b8152600401610273929190610e2f565b600060405180830381600087803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b50505050836001600160a01b031663ca446dd96102bd84610bef565b856040518363ffffffff1660e01b81526004016102db929190610e2f565b6020604051808303816000875af11580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e9190610de9565b50836001600160a01b031663ca446dd98460405160200161033e90610e46565b60405160208183030381529060405280519060200120604051602001610365929190610e69565b60408051601f1981840301815290829052805160209091012084516001600160e01b031960e085901b16835261039d92600401610e2f565b6020604051808303816000875af11580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e09190610de9565b50836001600160a01b031663ca446dd98460405160200161040090610da0565b60405160208183030381529060405280519060200120604051602001610427929190610e69565b6040516020818303038152906040528051906020012083602001516040518363ffffffff1660e01b815260040161045f929190610e2f565b6020604051808303816000875af115801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a29190610de9565b50836001600160a01b031663ca446dd9846040516020016104c290610dc4565b604051602081830303815290604052805190602001206040516020016104e9929190610e69565b60408051601f198184030181528282528051602090910120908501516001600160e01b031960e085901b16835261052292600401610e2f565b6020604051808303816000875af1158015610541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105659190610de9565b5050505050565b60405160200161016290610e46565b610583610c41565b61058b610c41565b836001600160a01b031663c769d1a16040516020016105a990610e0d565b60405160208183030381529060405280519060200120856040518363ffffffff1660e01b81526004016105dd929190610e2f565b602060405180830381865afa1580156105fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061e9190610e82565b61062957905061021b565b836001600160a01b03166321f8a7218460405160200161064890610e46565b6040516020818303038152906040528051906020012060405160200161066f929190610e69565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016106a391815260200190565b602060405180830381865afa1580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e49190610de9565b6001600160a01b039081168252604051908516906321f8a72190859061070c90602001610da0565b60405160208183030381529060405280519060200120604051602001610733929190610e69565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161076791815260200190565b602060405180830381865afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190610de9565b81602001906001600160a01b031690816001600160a01b031681525050836001600160a01b03166321f8a721846040516020016107e490610dc4565b6040516020818303038152906040528051906020012060405160200161080b929190610e69565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161083f91815260200190565b602060405180830381865afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108809190610de9565b6001600160a01b031660408201529392505050565b816001600160a01b031663c769d1a16040516020016108b390610e0d565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b81526004016108e7929190610e2f565b602060405180830381865afa158015610904573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109289190610e82565b6109545760405163360076c560e11b81526001600160a01b038216600482015260240160405180910390fd5b816001600160a01b03166369721d4160405160200161097290610e0d565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b81526004016109a6929190610e2f565b600060405180830381600087803b1580156109c057600080fd5b505af11580156109d4573d6000803e3d6000fd5b50505050816001600160a01b0316639faf6fb6826040516020016109f790610e46565b60405160208183030381529060405280519060200120604051602001610a1e929190610e69565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610a5291815260200190565b600060405180830381600087803b158015610a6c57600080fd5b505af1158015610a80573d6000803e3d6000fd5b50505050816001600160a01b0316639faf6fb682604051602001610aa390610da0565b60405160208183030381529060405280519060200120604051602001610aca929190610e69565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610afe91815260200190565b600060405180830381600087803b158015610b1857600080fd5b505af1158015610b2c573d6000803e3d6000fd5b50505050816001600160a01b0316639faf6fb682604051602001610b4f90610dc4565b60405160208183030381529060405280519060200120604051602001610b76929190610e69565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610baa91815260200190565b600060405180830381600087803b158015610bc457600080fd5b505af1158015610bd8573d6000803e3d6000fd5b505050505050565b60405160200161016290610ea4565b6000604051602001610c0090610ea4565b60408051601f198184030181528282528051602091820120908301528101839052606001604051602081830303815290604052805190602001209050919050565b604080516060810182526000808252602082018190529181019190915290565b6001600160a01b0381168114610c7657600080fd5b50565b60008060408385031215610c8c57600080fd5b8235610c9781610c61565b946020939093013593505050565b60008060008084860360c0811215610cbc57600080fd5b8535610cc781610c61565b94506020860135610cd781610c61565b9350604086013592506060605f1982011215610cf257600080fd5b50604051606081016001600160401b0381118282101715610d2357634e487b7160e01b600052604160045260246000fd5b6040526060860135610d3481610c61565b81526080860135610d4481610c61565b602082015260a0860135610d5781610c61565b6040820152939692955090935050565b60008060408385031215610d7a57600080fd5b8235610d8581610c61565b91506020830135610d9581610c61565b809150509250929050565b6020808252600a90820152692627a723afaa27a5a2a760b11b604082015260600190565b6020808252600b908201526a29a427a92a2faa27a5a2a760a91b604082015260600190565b600060208284031215610dfb57600080fd5b8151610e0681610c61565b9392505050565b60208082526008908201526711d31597d31254d560c21b604082015260600190565b9182526001600160a01b0316602082015260400190565b60208082526009908201526823a62b2faa27a5a2a760b91b604082015260600190565b6001600160a01b03929092168252602082015260400190565b600060208284031215610e9457600080fd5b81518015158114610e0657600080fd5b60208082526008908201526711d31597d4d0531560c21b60408201526060019056fea2646970667358221220dd58c40576a80a67f6a9c5df167d846c14ffdee8c220c17cf4ada8b949d3658c64736f6c63430008140033";

type GlvStoreUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlvStoreUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GlvStoreUtils__factory extends ContractFactory {
  constructor(...args: GlvStoreUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GlvStoreUtils> {
    return super.deploy(overrides || {}) as Promise<GlvStoreUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GlvStoreUtils {
    return super.attach(address) as GlvStoreUtils;
  }
  override connect(signer: Signer): GlvStoreUtils__factory {
    return super.connect(signer) as GlvStoreUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlvStoreUtilsInterface {
    return new utils.Interface(_abi) as GlvStoreUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlvStoreUtils {
    return new Contract(address, _abi, signerOrProvider) as GlvStoreUtils;
  }
}
