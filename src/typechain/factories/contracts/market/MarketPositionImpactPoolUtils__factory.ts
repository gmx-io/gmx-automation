/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MarketPositionImpactPoolUtils,
  MarketPositionImpactPoolUtilsInterface,
} from "../../../contracts/market/MarketPositionImpactPoolUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "withdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolValue",
        type: "uint256",
      },
    ],
    name: "InsufficientImpactPoolValueForWithdrawal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "poolValue",
        type: "int256",
      },
    ],
    name: "InvalidPoolValueForWithdrawal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "UnexpectedTokenForVirtualInventory",
    type: "error",
  },
];

const _bytecode =
  "0x6113eb61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806317d954241461003a575b600080fd5b81801561004657600080fd5b5061005a610055366004610fb1565b61005c565b005b600082116100b15760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b60405163c468d13560e01b81526001600160a01b03808816600483015280871660248301528516604482015273__$e53db83827f4e07ebc418caf7145b8c2d5$__9063c468d1359060640160006040518083038186803b15801561011457600080fd5b505af4158015610128573d6000803e3d6000fd5b505060405163a8d8fff560e01b81526000925073__$ff439aa65a80c9eec648f15db20b189505$__915063a8d8fff590610168908a90899060040161102a565b608060405180830381865af4158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a9919061107b565b905060006101b783836105de565b604051631ce5b4e360e21b815290915073__$91a1a7f12f728c8759f4be979bae55555f$__90637396d38c906101f7908b908b908790879060040161114f565b60006040518083038186803b15801561020f57600080fd5b505af4158015610223573d6000803e3d6000fd5b50505050600073__$e53db83827f4e07ebc418caf7145b8c2d5$__63f2e2a4f58a85856000015186602001518760400151604051602001610295906020808252601e908201527f4d41585f504e4c5f464143544f525f464f525f5749544844524157414c530000604082015260600190565b6040516020818303038152906040528051906020012060006040518863ffffffff1660e01b81526004016102cf97969594939291906111b4565b61016060405180830381865af41580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103119190611216565b9050600081600001511361033e5780516040516390a6af3b60e01b815260048101919091526024016100a8565b848161014001511161037457610140810151604051637a103a6160e01b81526100a8918791600401918252602082015260400190565b61039189898961038389610756565b61038c906112bf565b6107c4565b5060006103bb8684600001516020015185602001516020015160026103b691906112db565b6108d7565b905060006103e18785600001516020015186604001516020015160026103b691906112db565b90506104058b8b8788604001516103f787610756565b610400906112bf565b6108ee565b5061041a8b8b8788606001516103f786610756565b50604080860151905163078d3b7960e01b81526001600160a01b038b169163078d3b799161044f91908c9087906004016112f2565b600060405180830381600087803b15801561046957600080fd5b505af115801561047d573d6000803e3d6000fd5b505050606086015160405163078d3b7960e01b81526001600160a01b038c16925063078d3b79916104b4918c9086906004016112f2565b600060405180830381600087803b1580156104ce57600080fd5b505af11580156104e2573d6000803e3d6000fd5b5050604051632c9800af60e11b815273__$e53db83827f4e07ebc418caf7145b8c2d5$__9250635930015e915061051f908e908d9060040161102a565b60006040518083038186803b15801561053757600080fd5b505af415801561054b573d6000803e3d6000fd5b5050604051635bb3aa7360e01b81526001600160a01b03808e166004830152808d1660248301528b166044820152606481018a905273__$c1eebf06e53d0bd092f667687cf73e1ebf$__9250635bb3aa73915060840160006040518083038186803b1580156105b957600080fd5b505af41580156105cd573d6000803e3d6000fd5b505050505050505050505050505050565b6105e6610f4d565b6040518060600160405280846001600160a01b0316635dcf719485602001516040518263ffffffff1660e01b81526004016106219190611316565b6040805180830381865afa15801561063d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610661919061132a565b8152602001846001600160a01b0316635dcf719485604001516040518263ffffffff1660e01b81526004016106969190611316565b6040805180830381865afa1580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d6919061132a565b8152602001846001600160a01b0316635dcf719485606001516040518263ffffffff1660e01b815260040161070b9190611316565b6040805180830381865afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b919061132a565b905290505b92915050565b60006001600160ff1b038211156107c05760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016100a8565b5090565b600080856001600160a01b0316638ca498b06107df86610a5e565b856040518363ffffffff1660e01b8152600401610806929190918252602082015260400190565b6020604051808303816000875af1158015610825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108499190611386565b60405163555a997960e01b81526001600160a01b03808816600483015286166024820152604481018590526064810182905290915073__$c1eebf06e53d0bd092f667687cf73e1ebf$__9063555a99799060840160006040518083038186803b1580156108b557600080fd5b505af41580156108c9573d6000803e3d6000fd5b509298975050505050505050565b60006108e4848484610ae9565b90505b9392505050565b600080866001600160a01b03166332f85bbf61090e876000015187610bd3565b6040516001600160e01b031960e084901b16815260048101919091526024810186905260606044820152602260648201527f496e76616c69642073746174652c206e6567617469766520706f6f6c416d6f756084820152611b9d60f21b60a482015260c4016020604051808303816000875af1158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190611386565b90506109c58787878787610c5b565b50508451604051631daaefa160e01b81526001600160a01b03808916600483015291821660248201529085166044820152606481018490526084810182905273__$c1eebf06e53d0bd092f667687cf73e1ebf$__90631daaefa19060a40160006040518083038186803b158015610a3b57600080fd5b505af4158015610a4f573d6000803e3d6000fd5b50929998505050505050505050565b6000604051602001610a9f906020808252601b908201527a1413d4d2551253d397d253541050d517d413d3d317d05353d55395602a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b6000808060001985870985870292508281108382030391505080600003610b2357838281610b1957610b1961139f565b04925050506108e7565b808411610b6a5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016100a8565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000604051602001610c04906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b0380861691830191909152831660608201526080015b60405160208183030381529060405280519060200120905092915050565b6000806000876001600160a01b031663a6ed563e610c7c8860000151610e2c565b6040518263ffffffff1660e01b8152600401610c9a91815260200190565b602060405180830381865afa158015610cb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdb9190611386565b905080610cef576000809250925050610e22565b6000610cfb8787610e63565b90506000896001600160a01b0316638ca498b0610d188585610edb565b886040518363ffffffff1660e01b8152600401610d3f929190918252602082015260400190565b6020604051808303816000875af1158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d829190611386565b885160405163a814bb6f60e01b81526001600160a01b03808d16600483015290911660248201528315156044820152606481018590526084810188905260a4810182905290915073__$c1eebf06e53d0bd092f667687cf73e1ebf$__9063a814bb6f9060c40160006040518083038186803b158015610e0057600080fd5b505af4158015610e14573d6000803e3d6000fd5b506001975092955050505050505b9550959350505050565b6000604051602001610a9f906020808252601190820152701592549515505317d3505492d15517d251607a1b604082015260600190565b600082604001516001600160a01b0316826001600160a01b031614158015610ea1575082606001516001600160a01b0316826001600160a01b031614155b15610ec357825160405163785ee46960e01b81526100a891849160040161102a565b506040909101516001600160a01b0391821691161490565b6000604051602001610f1c906020808252601b908201527a5649525455414c5f494e56454e544f52595f464f525f535741505360281b604082015260600190565b60408051601f1981840301815282825280516020918201209083015281018490528215156060820152608001610c3d565b6040518060600160405280610f60610f7f565b8152602001610f6d610f7f565b8152602001610f7a610f7f565b905290565b604051806040016040528060008152602001600081525090565b6001600160a01b0381168114610fae57600080fd5b50565b60008060008060008060c08789031215610fca57600080fd5b8635610fd581610f99565b95506020870135610fe581610f99565b94506040870135610ff581610f99565b9350606087013561100581610f99565b92506080870135915060a087013561101c81610f99565b809150509295509295509295565b6001600160a01b0392831681529116602082015260400190565b60405161016081016001600160401b038111828210171561107557634e487b7160e01b600052604160045260246000fd5b60405290565b60006080828403121561108d57600080fd5b604051608081016001600160401b03811182821017156110bd57634e487b7160e01b600052604160045260246000fd5b60405282516110cb81610f99565b815260208301516110db81610f99565b602082015260408301516110ee81610f99565b6040820152606083015161110181610f99565b60608201529392505050565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b80518252602090810151910152565b6001600160a01b038581168252841660208201526101808101611175604083018561110d565b61118360c083018451611140565b6020830151611196610100840182611140565b5060408301516111aa610140840182611140565b5095945050505050565b6001600160a01b03881681526101a081016111d2602083018961110d565b6111df60a0830188611140565b6111ec60e0830187611140565b6111fa610120830186611140565b8361016083015282151561018083015298975050505050505050565b6000610160828403121561122957600080fd5b611231611044565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152506101408084015181830152508091505092915050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016112d4576112d46112a9565b5060000390565b8082028115828204841417610750576107506112a9565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0391909116815260200190565b60006040828403121561133c57600080fd5b604080519081016001600160401b038111828210171561136c57634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b60006020828403121561139857600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220bfc523c11551c98657cb1fef6c6b1b4babd60d3d4bdcf792e8bc41b9753fe7f164736f6c63430008140033";

type MarketPositionImpactPoolUtilsConstructorParams =
  | [
      linkLibraryAddresses: MarketPositionImpactPoolUtilsLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketPositionImpactPoolUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MarketPositionImpactPoolUtils__factory extends ContractFactory {
  constructor(...args: MarketPositionImpactPoolUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MarketPositionImpactPoolUtils__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MarketPositionImpactPoolUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e53db83827f4e07ebc418caf7145b8c2d5\\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff439aa65a80c9eec648f15db20b189505\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$91a1a7f12f728c8759f4be979bae55555f\\$__", "g"),
      linkLibraryAddresses["contracts/position/PositionUtils.sol:PositionUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$c1eebf06e53d0bd092f667687cf73e1ebf\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketEventUtils.sol:MarketEventUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketPositionImpactPoolUtils> {
    return super.deploy(
      overrides || {}
    ) as Promise<MarketPositionImpactPoolUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarketPositionImpactPoolUtils {
    return super.attach(address) as MarketPositionImpactPoolUtils;
  }
  override connect(signer: Signer): MarketPositionImpactPoolUtils__factory {
    return super.connect(signer) as MarketPositionImpactPoolUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketPositionImpactPoolUtilsInterface {
    return new utils.Interface(_abi) as MarketPositionImpactPoolUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketPositionImpactPoolUtils {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MarketPositionImpactPoolUtils;
  }
}

export interface MarketPositionImpactPoolUtilsLibraryAddresses {
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
  ["contracts/position/PositionUtils.sol:PositionUtils"]: string;
  ["contracts/market/MarketEventUtils.sol:MarketEventUtils"]: string;
}
