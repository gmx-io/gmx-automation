// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ShiftEventUtils,
  ShiftEventUtilsInterface,
} from "../../../contracts/shift/ShiftEventUtils";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct Shift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Shift.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Shift.Props",
        name: "shift",
        type: "tuple",
      },
    ],
    name: "createEventData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x611b80610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80636e5172691461005b57806384b29b571461007d5780638f4118bd146100a657806393c2bd13146100c6575b600080fd5b81801561006757600080fd5b5061007b610076366004610b14565b6100e6565b005b61009061008b366004610dae565b61022d565b60405161009d919061149d565b60405180910390f35b8180156100b257600080fd5b5061007b6100c13660046115c8565b61055a565b8180156100d257600080fd5b5061007b6100e136600461168c565b6106cd565b6100ee610a0b565b60808101516100fe90600161078f565b6040805180820190915260038152626b657960e81b6020820152608082015161012a91600090876107f4565b805161013790600161078f565b6040805180820190915260078152661858d8dbdd5b9d60ca1b602082015281516101649160009086610847565b602081015161017490600161078f565b6101bc60006040518060400160405280601481526020017372656365697665644d61726b6574546f6b656e7360601b8152508484602001516107f4909392919063ffffffff16565b846001600160a01b03166363d16363856101d5866108a4565b846040518463ffffffff1660e01b81526004016101f493929190611a6b565b600060405180830381600087803b15801561020e57600080fd5b505af1158015610222573d6000803e3d6000fd5b505050505050505050565b610235610a0b565b61023d610a0b565b805161024a90600661078f565b6102826000604051806040016040528060078152602001661858d8dbdd5b9d60ca1b81525061027886515190565b8451929190610847565b6102b46001604051806040016040528060088152602001673932b1b2b4bb32b960c11b81525061027886516020015190565b6102ee60026040518060400160405280601081526020016f18d85b1b189858dad0dbdb9d1c9858dd60821b81525061027886516040015190565b61032260036040518060400160405280600a815260200169199c9bdb53585c9ad95d60b21b81525061027886516080015190565b6103546004604051806040016040528060088152602001671d1bd3585c9ad95d60c21b815250610278865160a0015190565b61038b60056040518060400160405280600d81526020016c3ab4a332b2a932b1b2b4bb32b960991b81525061027886516060015190565b602081015161039b90600661078f565b6103e36000604051806040016040528060118152602001701b585c9ad95d151bdad95b905b5bdd5b9d607a1b8152506103d686602001515190565b60208501519291906107f4565b61041f60016040518060400160405280600f81526020016e6d696e4d61726b6574546f6b656e7360881b8152506103d686602090810151015190565b61045960026040518060400160405280600d81526020016c75706461746564417454696d6560981b8152506103d686602001516040015190565b61049260036040518060400160405280600c81526020016b657865637574696f6e46656560a01b8152506103d686602001516060015190565b6104cf60046040518060400160405280601081526020016f18d85b1b189858dad1d85cd31a5b5a5d60821b8152506103d686602001516080015190565b61050660056040518060400160405280600a8152602001691cdc98d0da185a5b925960b21b8152506103d6866020015160a0015190565b60808101516105169060016108b0565b61055460006040518060400160405280600881526020016719185d18531a5cdd60c21b815250610547866040015190565b608085015192919061091a565b92915050565b610562610a0b565b608081015161057290600161078f565b6040805180820190915260038152626b657960e81b6020820152608082015161059e91600090886107f4565b80516105ab90600161078f565b6040805180820190915260078152661858d8dbdd5b9d60ca1b602082015281516105d89160009087610847565b60c08101516105e890600161096c565b6040805180820190915260068152653932b0b9b7b760d11b602082015260c082015161061791600090866109ce565b60a081015161062790600161096c565b60408051808201909152600b81526a726561736f6e427974657360a81b602082015260a082015161065b91600090856109ce565b856001600160a01b03166363d1636386610674876108a4565b846040518463ffffffff1660e01b815260040161069393929190611aae565b600060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b50505050505050505050565b60006106d88261022d565b60808101519091506106eb90600161078f565b6040805180820190915260038152626b657960e81b6020820152608082015161071791600090866107f4565b836001600160a01b03166363d163638461073861073386515190565b6108a4565b846040518463ffffffff1660e01b815260040161075793929190611af2565b600060405180830381600087803b15801561077157600080fd5b505af1158015610785573d6000803e3d6000fd5b5050505050505050565b806001600160401b038111156107a7576107a7610b5c565b6040519080825280602002602001820160405280156107ed57816020015b6040805180820190915260608152600060208201528152602001906001900390816107c55790505b5090915250565b818460000151848151811061080b5761080b611b34565b602002602001015160000181905250808460000151848151811061083157610831611b34565b6020026020010151602001818152505050505050565b818460000151848151811061085e5761085e611b34565b602002602001015160000181905250808460000151848151811061088457610884611b34565b6020908102919091018101516001600160a01b0390921691015250505050565b6001600160a01b031690565b806001600160401b038111156108c8576108c8610b5c565b60405190808252806020026020018201604052801561090d57816020015b60408051808201909152606080825260208201528152602001906001900390816108e65790505b5082602001819052505050565b818460200151848151811061093157610931611b34565b602002602001015160000181905250808460200151848151811061095757610957611b34565b60200260200101516020018190525050505050565b806001600160401b0381111561098457610984610b5c565b6040519080825280602002602001820160405280156107ed57816020015b60408051808201909152606080825260208201528152602001906001900390816109a257505090915250565b81846000015184815181106109e5576109e5611b34565b602002602001015160000181905250808460000151848151811061095757610957611b34565b604080516101208101909152606060e0820181815261010083019190915281908152602001610a4d604051806040016040528060608152602001606081525090565b8152602001610a6f604051806040016040528060608152602001606081525090565b8152602001610a91604051806040016040528060608152602001606081525090565b8152602001610ab3604051806040016040528060608152602001606081525090565b8152602001610ad5604051806040016040528060608152602001606081525090565b8152602001610af7604051806040016040528060608152602001606081525090565b905290565b6001600160a01b0381168114610b1157600080fd5b50565b60008060008060808587031215610b2a57600080fd5b8435610b3581610afc565b9350602085013592506040850135610b4c81610afc565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610b9457610b94610b5c565b60405290565b604051606081016001600160401b0381118282101715610b9457610b94610b5c565b604051601f8201601f191681016001600160401b0381118282101715610be457610be4610b5c565b604052919050565b600060c08284031215610bfe57600080fd5b610c06610b72565b823581526020808401359082015260408084013590820152606080840135908201526080808401359082015260a0928301359281019290925250919050565b600082601f830112610c5657600080fd5b81356001600160401b03811115610c6f57610c6f610b5c565b8060051b610c7f60208201610bbc565b91825260208185018101929081019086841115610c9b57600080fd5b6020860192505b83831015610cbd578235825260209283019290910190610ca2565b9695505050505050565b60008183036101a0811215610cdb57600080fd5b610ce3610b9a565b915060c0811215610cf357600080fd5b50610cfc610b72565b8235610d0781610afc565b81526020830135610d1781610afc565b60208201526040830135610d2a81610afc565b60408201526060830135610d3d81610afc565b60608201526080830135610d5081610afc565b608082015260a0830135610d6381610afc565b60a08201528152610d778360c08401610bec565b60208201526101808201356001600160401b03811115610d9657600080fd5b610da284828501610c45565b60408301525092915050565b600060208284031215610dc057600080fd5b81356001600160401b03811115610dd657600080fd5b610de284828501610cc7565b949350505050565b6000815180845260005b81811015610e1057602081850181015186830182015201610df4565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208501945060208160051b8301016020850160005b83811015610ed757601f198584030188528151805160408552610e746040860182610dea565b6020928301518682038785015280518083529084019360009350909101905b80831015610ebe5783516001600160a01b031682526020938401936001939093019290910190610e93565b5060209a8b019a90955093909301925050600101610e4e565b50909695505050505050565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015610f5d57605f198886030183528351805160408752610f356040880182610dea565b6020928301516001600160a01b03169783019790975250938401939290920191600101610f0f565b5050505060208301518482036020860152610f788282610e30565b95945050505050565b600082825180855260208501945060208160051b8301016020850160005b83811015610ed757601f198584030188528151805160408552610fc56040860182610dea565b6020928301518682038785015280518083529084019360009350909101905b808310156110075783518252602082019150602084019350600183019250610fe4565b5060209a8b019a90955093909301925050600101610f9f565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561109157605f1988860301835283518051604087526110726040880182610dea565b602092830151978301979097525093840193929092019160010161104c565b5050505060208301518482036020860152610f788282610f81565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561109157605f1988860301835283518051604087526110fe6040880182610dea565b60209283015197830197909752509384019392909201916001016110d8565b600082825180855260208501945060208160051b8301016020850160005b83811015610ed757601f1985840301885281518051604085526111616040860182610dea565b6020928301518682038785015280518083529084019360009350909101905b808310156111a557835115158252602082019150602084019350600183019250611180565b5060209a8b019a9095509390930192505060010161113b565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561123157605f1988860301835283518051604087526112106040880182610dea565b602092830151151597830197909752509384019392909201916001016111ea565b5050505060208301518482036020860152610f78828261111d565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561109157605f19888603018352835180516040875261129e6040880182610dea565b6020928301519783019790975250938401939290920191600101611278565b600082825180855260208501945060208160051b8301016020850160005b83811015610ed757601f1985840301885281518051604085526113016040860182610dea565b6020928301518682038785015280518083529084019391925081830191600582901b84010160005b8281101561135a57601f19858303018452611345828751610dea565b60209687019694909401939150600101611329565b5080975050505050506020820191506020880197506001810190506112db565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156113fe57605f1988860301835283518051604087526113cc6040880182610dea565b90506020820151915086810360208801526113e78183610dea565b9650505060209384019392909201916001016113a6565b5050505060208301518482036020860152610f7882826112bd565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156113fe57605f19888603018352835180516040875261146b6040880182610dea565b90506020820151915086810360208801526114868183610dea565b965050506020938401939290920191600101611445565b602081526000825160e060208401526114ba610100840182610ee3565b90506020840151601f198483030160408501526114d78282611020565b9150506040840151601f198483030160608501526114f582826110ac565b9150506060840151601f1984830301608085015261151382826111be565b9150506080840151601f198483030160a0850152611531828261124c565b91505060a0840151601f198483030160c085015261154f828261137a565b91505060c0840151601f198483030160e0850152610f788282611419565b6000806001600160401b0384111561158757611587610b5c565b50601f8301601f191660200161159c81610bbc565b9150508281528383830111156115b157600080fd5b828260208301376000602084830101529392505050565b600080600080600060a086880312156115e057600080fd5b85356115eb81610afc565b945060208601359350604086013561160281610afc565b925060608601356001600160401b0381111561161d57600080fd5b8601601f8101881361162e57600080fd5b61163d8882356020840161156d565b92505060808601356001600160401b0381111561165957600080fd5b86016000601f8201891361166c57600080fd5b61167b8983356020850161156d565b905080925050509295509295909350565b6000806000606084860312156116a157600080fd5b83356116ac81610afc565b92506020840135915060408401356001600160401b038111156116ce57600080fd5b6116da86828701610cc7565b9150509250925092565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015610f5d57605f1988860301835283518051604087526117366040880182610dea565b6020928301516001600160a01b03169783019790975250938401939290920191600101611710565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561109157605f1988860301835283518051604087526117b06040880182610dea565b602092830151978301979097525093840193929092019160010161178a565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561123157605f1988860301835283518051604087526118216040880182610dea565b602092830151151597830197909752509384019392909201916001016117fb565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561109157605f1988860301835283518051604087526118946040880182610dea565b602092830151978301979097525093840193929092019160010161186e565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156113fe57605f1988860301835283518051604087526119056040880182610dea565b90506020820151915086810360208801526119208183610dea565b9650505060209384019392909201916001016118df565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156113fe57605f1988860301835283518051604087526119896040880182610dea565b90506020820151915086810360208801526119a48183610dea565b965050506020938401939290920191600101611963565b6000815160e084526119d060e08501826116e4565b9050602083015184820360208601526119e9828261175e565b91505060408301518482036040860152611a03828261175e565b91505060608301518482036060860152611a1d82826117cf565b91505060808301518482036080860152611a378282611842565b91505060a083015184820360a0860152611a5182826118b3565b91505060c083015184820360c0860152610f788282611937565b60808152600d60808201526c14da1a599d115e1958dd5d1959609a1b60a082015283602082015282604082015260c060608201526000610f7860c08301846119bb565b60808152600e60808201526d14da1a599d10d85b98d95b1b195960921b60a082015283602082015282604082015260c060608201526000610f7860c08301846119bb565b60808152600c60808201526b14da1a599d10dc99585d195960a21b60a082015283602082015282604082015260c060608201526000610f7860c08301846119bb565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220094c0a1b4eed2e3040fea4418162377fa7f56cf309051fc411cd53c9eb1df0fc64736f6c634300081d0033";

type ShiftEventUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShiftEventUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShiftEventUtils__factory extends ContractFactory {
  constructor(...args: ShiftEventUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ShiftEventUtils> {
    return super.deploy(overrides || {}) as Promise<ShiftEventUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ShiftEventUtils {
    return super.attach(address) as ShiftEventUtils;
  }
  override connect(signer: Signer): ShiftEventUtils__factory {
    return super.connect(signer) as ShiftEventUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShiftEventUtilsInterface {
    return new utils.Interface(_abi) as ShiftEventUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShiftEventUtils {
    return new Contract(address, _abi, signerOrProvider) as ShiftEventUtils;
  }
}
