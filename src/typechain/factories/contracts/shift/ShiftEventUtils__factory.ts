// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ShiftEventUtils,
  ShiftEventUtilsInterface,
} from "../../../contracts/shift/ShiftEventUtils";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct Shift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Shift.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Shift.Props",
        name: "shift",
        type: "tuple",
      },
    ],
    name: "createEventData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61215f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80636e5172691461005b57806384b29b571461007d5780638f4118bd146100a657806393c2bd13146100c6575b600080fd5b81801561006757600080fd5b5061007b610076366004610b14565b6100e6565b005b61009061008b366004610daa565b61022d565b60405161009d9190611690565b60405180910390f35b8180156100b257600080fd5b5061007b6100c13660046117b4565b61055a565b8180156100d257600080fd5b5061007b6100e1366004611871565b6106cd565b6100ee610a0b565b60808101516100fe90600161078f565b6040805180820190915260038152626b657960e81b6020820152608082015161012a91600090876107f4565b805161013790600161078f565b6040805180820190915260078152661858d8dbdd5b9d60ca1b602082015281516101649160009086610847565b602081015161017490600161078f565b6101bc60006040518060400160405280601481526020017372656365697665644d61726b6574546f6b656e7360601b8152508484602001516107f4909392919063ffffffff16565b846001600160a01b03166363d16363856101d5866108a4565b846040518463ffffffff1660e01b81526004016101f49392919061204a565b600060405180830381600087803b15801561020e57600080fd5b505af1158015610222573d6000803e3d6000fd5b505050505050505050565b610235610a0b565b61023d610a0b565b805161024a90600661078f565b6102826000604051806040016040528060078152602001661858d8dbdd5b9d60ca1b81525061027886515190565b8451929190610847565b6102b46001604051806040016040528060088152602001673932b1b2b4bb32b960c11b81525061027886516020015190565b6102ee60026040518060400160405280601081526020016f18d85b1b189858dad0dbdb9d1c9858dd60821b81525061027886516040015190565b61032260036040518060400160405280600a815260200169199c9bdb53585c9ad95d60b21b81525061027886516080015190565b6103546004604051806040016040528060088152602001671d1bd3585c9ad95d60c21b815250610278865160a0015190565b61038b60056040518060400160405280600d81526020016c3ab4a332b2a932b1b2b4bb32b960991b81525061027886516060015190565b602081015161039b90600661078f565b6103e36000604051806040016040528060118152602001701b585c9ad95d151bdad95b905b5bdd5b9d607a1b8152506103d686602001515190565b60208501519291906107f4565b61041f60016040518060400160405280600f81526020016e6d696e4d61726b6574546f6b656e7360881b8152506103d686602090810151015190565b61045960026040518060400160405280600d81526020016c75706461746564417454696d6560981b8152506103d686602001516040015190565b61049260036040518060400160405280600c81526020016b657865637574696f6e46656560a01b8152506103d686602001516060015190565b6104cf60046040518060400160405280601081526020016f18d85b1b189858dad1d85cd31a5b5a5d60821b8152506103d686602001516080015190565b61050660056040518060400160405280600a8152602001691cdc98d0da185a5b925960b21b8152506103d6866020015160a0015190565b60808101516105169060016108b0565b61055460006040518060400160405280600881526020016719185d18531a5cdd60c21b815250610547866040015190565b608085015192919061091a565b92915050565b610562610a0b565b608081015161057290600161078f565b6040805180820190915260038152626b657960e81b6020820152608082015161059e91600090886107f4565b80516105ab90600161078f565b6040805180820190915260078152661858d8dbdd5b9d60ca1b602082015281516105d89160009087610847565b60c08101516105e890600161096c565b6040805180820190915260068152653932b0b9b7b760d11b602082015260c082015161061791600090866109ce565b60a081015161062790600161096c565b60408051808201909152600b81526a726561736f6e427974657360a81b602082015260a082015161065b91600090856109ce565b856001600160a01b03166363d1636386610674876108a4565b846040518463ffffffff1660e01b81526004016106939392919061208d565b600060405180830381600087803b1580156106ad57600080fd5b505af11580156106c1573d6000803e3d6000fd5b50505050505050505050565b60006106d88261022d565b60808101519091506106eb90600161078f565b6040805180820190915260038152626b657960e81b6020820152608082015161071791600090866107f4565b836001600160a01b03166363d163638461073861073386515190565b6108a4565b846040518463ffffffff1660e01b8152600401610757939291906120d1565b600060405180830381600087803b15801561077157600080fd5b505af1158015610785573d6000803e3d6000fd5b5050505050505050565b806001600160401b038111156107a7576107a7610b5c565b6040519080825280602002602001820160405280156107ed57816020015b6040805180820190915260608152600060208201528152602001906001900390816107c55790505b5090915250565b818460000151848151811061080b5761080b612113565b602002602001015160000181905250808460000151848151811061083157610831612113565b6020026020010151602001818152505050505050565b818460000151848151811061085e5761085e612113565b602002602001015160000181905250808460000151848151811061088457610884612113565b6020908102919091018101516001600160a01b0390921691015250505050565b6001600160a01b031690565b806001600160401b038111156108c8576108c8610b5c565b60405190808252806020026020018201604052801561090d57816020015b60408051808201909152606080825260208201528152602001906001900390816108e65790505b5082602001819052505050565b818460200151848151811061093157610931612113565b602002602001015160000181905250808460200151848151811061095757610957612113565b60200260200101516020018190525050505050565b806001600160401b0381111561098457610984610b5c565b6040519080825280602002602001820160405280156107ed57816020015b60408051808201909152606080825260208201528152602001906001900390816109a257505090915250565b81846000015184815181106109e5576109e5612113565b602002602001015160000181905250808460000151848151811061095757610957612113565b604080516101208101909152606060e0820181815261010083019190915281908152602001610a4d604051806040016040528060608152602001606081525090565b8152602001610a6f604051806040016040528060608152602001606081525090565b8152602001610a91604051806040016040528060608152602001606081525090565b8152602001610ab3604051806040016040528060608152602001606081525090565b8152602001610ad5604051806040016040528060608152602001606081525090565b8152602001610af7604051806040016040528060608152602001606081525090565b905290565b6001600160a01b0381168114610b1157600080fd5b50565b60008060008060808587031215610b2a57600080fd5b8435610b3581610afc565b9350602085013592506040850135610b4c81610afc565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610b9457610b94610b5c565b60405290565b604051606081016001600160401b0381118282101715610b9457610b94610b5c565b604051601f8201601f191681016001600160401b0381118282101715610be457610be4610b5c565b604052919050565b600060c08284031215610bfe57600080fd5b610c06610b72565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b600082601f830112610c5557600080fd5b813560206001600160401b03821115610c7057610c70610b5c565b8160051b610c7f828201610bbc565b9283528481018201928281019087851115610c9957600080fd5b83870192505b84831015610cb857823582529183019190830190610c9f565b979650505050505050565b60008183036101a0811215610cd757600080fd5b610cdf610b9a565b915060c0811215610cef57600080fd5b50610cf8610b72565b8235610d0381610afc565b81526020830135610d1381610afc565b60208201526040830135610d2681610afc565b60408201526060830135610d3981610afc565b60608201526080830135610d4c81610afc565b608082015260a0830135610d5f81610afc565b60a08201528152610d738360c08401610bec565b60208201526101808201356001600160401b03811115610d9257600080fd5b610d9e84828501610c44565b60408301525092915050565b600060208284031215610dbc57600080fd5b81356001600160401b03811115610dd257600080fd5b610dde84828501610cc3565b949350505050565b6000815180845260005b81811015610e0c57602081850181015186830182015201610df0565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208086019550808260051b8401018186016000805b85811015610eca57601f19878503018a52825160408151818752610e7082880182610de6565b92880151878403888a0152805180855290890193869350890191505b80831015610eb55783516001600160a01b03168252928801926001929092019190880190610e8c565b509b87019b9550505091840191600101610e4a565b509198975050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015610f4f57898603605f1901845284518051888852610f2989890182610de6565b918401516001600160a01b03169784019790975295509381019392810192600101610f05565b50808801519550888503818a015250505050610f6b8183610e2c565b95945050505050565b600081518084526020808501808196508360051b810191508286016000805b86811015611006578385038a52825160408151818852610fb582890182610de6565b92890151888403898b01528051808552908a01938693508a0191505b80831015610ff15783518252928901926001929092019190890190610fd1565b509b88019b9650505091850191600101610f93565b509298975050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561108257898603605f190184528451805188885261106589890182610de6565b918401519784019790975295509381019392810192600101611041565b50808801519550888503818a015250505050610f6b8183610f74565b600081518084526020808501808196508360051b810191508286016000805b86811015611006578385038a528251604081518188526110df82890182610de6565b92890151888403898b01528051808552908a01938693508a0191505b8083101561111b57835182529289019260019290920191908901906110fb565b509b88019b96505050918501916001016110bd565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561119e57898603605f190184528451805188885261118189890182610de6565b91840151978401979097529550938101939281019260010161115d565b50808801519550888503818a015250505050610f6b818361109e565b6000815180845260208085019450848260051b86018286016000805b86811015610eca578484038a528251604081518187526111f882880182610de6565b92890151878403888b01528051808552908a01938693508a0191505b8083101561123657835115158252928901926001929092019190890190611214565b509b88019b95505050918501916001016111d6565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156112bb57898603605f190184528451805188885261129c89890182610de6565b9184015115159784019790975295509381019392810192600101611278565b50808801519550888503818a015250505050610f6b81836111ba565b600081518084526020808501808196508360051b810191508286016000805b86811015611006578385038a5282516040815181885261131882890182610de6565b92890151888403898b01528051808552908a01938693508a0191505b808310156113545783518252928901926001929092019190890190611334565b509b88019b96505050918501916001016112f6565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156113d757898603605f19018452845180518888526113ba89890182610de6565b918401519784019790975295509381019392810192600101611396565b50808801519550888503818a015250505050610f6b81836112d7565b60008282518085526020808601955060058183821b8501018287016000805b868110156114a157601f1980898603018c5283516040815181885261143982890182610de6565b928a0151888403898c01528051808552908b019392508a83019150808a1b83018b01875b828110156114895786858303018452611477828751610de6565b958d0195938d0193915060010161145d565b509f8b019f9850505094880194505050600101611412565b50919998505050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561152d57898603605f190184528451805188885261150189890182610de6565b91840151888303898601529190506115198183610de6565b9750505093810193928101926001016114dd565b50808801519550888503818a015250505050610f6b81836113f3565b60008282518085526020808601955060058183821b8501018287016000805b868110156114a157601f1980898603018c5283516040815181885261158f82890182610de6565b928a0151888403898c01528051808552908b019392508a83019150808a1b83018b01875b828110156115df57868583030184526115cd828751610de6565b958d0195938d019391506001016115b3565b509f8b019f9850505094880194505050600101611568565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561167457898603605f190184528451805188885261164889890182610de6565b91840151888303898601529190506116608183610de6565b975050509381019392810192600101611624565b50808801519550888503818a015250505050610f6b8183611549565b602081526000825160e060208401526116ad610100840182610ed8565b90506020840151601f19808584030160408601526116cb8383611014565b925060408601519150808584030160608601526116e88383611130565b92506060860151915080858403016080860152611705838361124b565b925060808601519150808584030160a08601526117228383611369565b925060a08601519150808584030160c086015261173f83836114b0565b925060c08601519150808584030160e086015250610f6b82826115f7565b60006001600160401b0383111561177657611776610b5c565b611789601f8401601f1916602001610bbc565b905082815283838301111561179d57600080fd5b828260208301376000602084830101529392505050565b600080600080600060a086880312156117cc57600080fd5b85356117d781610afc565b94506020860135935060408601356117ee81610afc565b925060608601356001600160401b038082111561180a57600080fd5b818801915088601f83011261181e57600080fd5b61182d8983356020850161175d565b9350608088013591508082111561184357600080fd5b508601601f8101881361185557600080fd5b6118648882356020840161175d565b9150509295509295909350565b60008060006060848603121561188657600080fd5b833561189181610afc565b92506020840135915060408401356001600160401b038111156118b357600080fd5b6118bf86828701610cc3565b9150509250925092565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015610f4f57898603605f190184528451805188885261191a89890182610de6565b918401516001600160a01b031697840197909752955093810193928101926001016118f6565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156113d757898603605f190184528451805188885261199189890182610de6565b91840151978401979097529550938101939281019260010161196d565b600081518084526020808501808196508360051b810191508286016000805b86811015611006578385038a528251604081518188526119ef82890182610de6565b92890151888403898b01528051808552908a01938693508a0191505b80831015611a2b5783518252928901926001929092019190890190611a0b565b509b88019b96505050918501916001016119cd565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611aae57898603605f1901845284518051888852611a9189890182610de6565b918401519784019790975295509381019392810192600101611a6d565b50808801519550888503818a015250505050610f6b81836119ae565b600082825180855260208086019550808260051b8401018186016000805b85811015610eca57601f19878503018a52825160408151818752611b0e82880182610de6565b92880151878403888a0152805180855290890193869350890191505b80831015611b4c57835115158252928801926001929092019190880190611b2a565b509b87019b9550505091840191600101611ae8565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611bd157898603605f1901845284518051888852611bb289890182610de6565b9184015115159784019790975295509381019392810192600101611b8e565b50808801519550888503818a015250505050610f6b8183611aca565b600082825180855260208086019550808260051b8401018186016000805b85811015610eca57601f19878503018a52825160408151818752611c3182880182610de6565b92880151878403888a0152805180855290890193869350890191505b80831015611c6d5783518252928801926001929092019190880190611c4d565b509b87019b9550505091840191600101611c0b565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611cf057898603605f1901845284518051888852611cd389890182610de6565b918401519784019790975295509381019392810192600101611caf565b50808801519550888503818a015250505050610f6b8183611bed565b60008282518085526020808601955060058183821b8501018287016000805b868110156114a157601f1980898603018c52835160408151818852611d5282890182610de6565b928a0151888403898c01528051808552908b019392508a83019150808a1b83018b01875b82811015611da25786858303018452611d90828751610de6565b958d0195938d01939150600101611d76565b509f8b019f9850505094880194505050600101611d2b565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611e3757898603605f1901845284518051888852611e0b89890182610de6565b9184015188830389860152919050611e238183610de6565b975050509381019392810192600101611de7565b50808801519550888503818a015250505050610f6b8183611d0c565b60008282518085526020808601955060058183821b8501018287016000805b868110156114a157601f1980898603018c52835160408151818852611e9982890182610de6565b928a0151888403898c01528051808552908b019392508a83019150808a1b83018b01875b82811015611ee95786858303018452611ed7828751610de6565b958d0195938d01939150600101611ebd565b509f8b019f9850505094880194505050600101611e72565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611f7e57898603605f1901845284518051888852611f5289890182610de6565b9184015188830389860152919050611f6a8183610de6565b975050509381019392810192600101611f2e565b50808801519550888503818a015250505050610f6b8183611e53565b6000815160e08452611faf60e08501826118c9565b905060208301518482036020860152611fc88282611940565b91505060408301518482036040860152611fe28282611a40565b91505060608301518482036060860152611ffc8282611b61565b915050608083015184820360808601526120168282611c82565b91505060a083015184820360a08601526120308282611dba565b91505060c083015184820360c0860152610f6b8282611f01565b60808152600d60808201526c14da1a599d115e1958dd5d1959609a1b60a082015283602082015282604082015260c060608201526000610f6b60c0830184611f9a565b60808152600e60808201526d14da1a599d10d85b98d95b1b195960921b60a082015283602082015282604082015260c060608201526000610f6b60c0830184611f9a565b60808152600c60808201526b14da1a599d10dc99585d195960a21b60a082015283602082015282604082015260c060608201526000610f6b60c0830184611f9a565b634e487b7160e01b600052603260045260246000fdfea264697066735822122084eff480a0f516db4cc83a0d2ed050d3abc079948771d0b167d32c69159581b564736f6c63430008140033";

type ShiftEventUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShiftEventUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShiftEventUtils__factory extends ContractFactory {
  constructor(...args: ShiftEventUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ShiftEventUtils> {
    return super.deploy(overrides || {}) as Promise<ShiftEventUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ShiftEventUtils {
    return super.attach(address) as ShiftEventUtils;
  }
  override connect(signer: Signer): ShiftEventUtils__factory {
    return super.connect(signer) as ShiftEventUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShiftEventUtilsInterface {
    return new utils.Interface(_abi) as ShiftEventUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShiftEventUtils {
    return new Contract(address, _abi, signerOrProvider) as ShiftEventUtils;
  }
}
