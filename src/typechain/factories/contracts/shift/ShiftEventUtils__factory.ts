/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ShiftEventUtils,
  ShiftEventUtilsInterface,
} from "../../../contracts/shift/ShiftEventUtils";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct Shift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Shift.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Shift.Props",
        name: "shift",
        type: "tuple",
      },
    ],
    name: "createEventData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61212861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80636e5172691461005b57806384b29b571461007d5780638f4118bd146100a657806393c2bd13146100c6575b600080fd5b81801561006757600080fd5b5061007b610076366004610add565b6100e6565b005b61009061008b366004610d73565b61022d565b60405161009d9190611659565b60405180910390f35b8180156100b257600080fd5b5061007b6100c136600461177d565b610523565b8180156100d257600080fd5b5061007b6100e136600461183a565b610696565b6100ee6109d4565b60808101516100fe906001610758565b6040805180820190915260038152626b657960e81b6020820152608082015161012a91600090876107bd565b8051610137906001610758565b6040805180820190915260078152661858d8dbdd5b9d60ca1b602082015281516101649160009086610810565b6020810151610174906001610758565b6101bc60006040518060400160405280601481526020017372656365697665644d61726b6574546f6b656e7360601b8152508484602001516107bd909392919063ffffffff16565b846001600160a01b03166363d16363856101d58661086d565b846040518463ffffffff1660e01b81526004016101f493929190612013565b600060405180830381600087803b15801561020e57600080fd5b505af1158015610222573d6000803e3d6000fd5b505050505050505050565b6102356109d4565b61023d6109d4565b805161024a906006610758565b6102826000604051806040016040528060078152602001661858d8dbdd5b9d60ca1b81525061027886515190565b8451929190610810565b6102b46001604051806040016040528060088152602001673932b1b2b4bb32b960c11b81525061027886516020015190565b6102ee60026040518060400160405280601081526020016f18d85b1b189858dad0dbdb9d1c9858dd60821b81525061027886516040015190565b61032260036040518060400160405280600a815260200169199c9bdb53585c9ad95d60b21b81525061027886516080015190565b6103546004604051806040016040528060088152602001671d1bd3585c9ad95d60c21b815250610278865160a0015190565b61038b60056040518060400160405280600d81526020016c3ab4a332b2a932b1b2b4bb32b960991b81525061027886516060015190565b602081015161039b906005610758565b6103e36000604051806040016040528060118152602001701b585c9ad95d151bdad95b905b5bdd5b9d607a1b8152506103d686602001515190565b60208501519291906107bd565b61041f60016040518060400160405280600f81526020016e6d696e4d61726b6574546f6b656e7360881b8152506103d686602090810151015190565b61045960026040518060400160405280600d81526020016c75706461746564417454696d6560981b8152506103d686602001516040015190565b61049260036040518060400160405280600c81526020016b657865637574696f6e46656560a01b8152506103d686602001516060015190565b6104cf60046040518060400160405280601081526020016f18d85b1b189858dad1d85cd31a5b5a5d60821b8152506103d686602001516080015190565b60808101516104df906001610879565b61051d60006040518060400160405280600881526020016719185d18531a5cdd60c21b815250610510866040015190565b60808501519291906108e3565b92915050565b61052b6109d4565b608081015161053b906001610758565b6040805180820190915260038152626b657960e81b6020820152608082015161056791600090886107bd565b8051610574906001610758565b6040805180820190915260078152661858d8dbdd5b9d60ca1b602082015281516105a19160009087610810565b60c08101516105b1906001610935565b6040805180820190915260068152653932b0b9b7b760d11b602082015260c08201516105e09160009086610997565b60a08101516105f0906001610935565b60408051808201909152600b81526a726561736f6e427974657360a81b602082015260a08201516106249160009085610997565b856001600160a01b03166363d163638661063d8761086d565b846040518463ffffffff1660e01b815260040161065c93929190612056565b600060405180830381600087803b15801561067657600080fd5b505af115801561068a573d6000803e3d6000fd5b50505050505050505050565b60006106a18261022d565b60808101519091506106b4906001610758565b6040805180820190915260038152626b657960e81b602082015260808201516106e091600090866107bd565b836001600160a01b03166363d16363846107016106fc86515190565b61086d565b846040518463ffffffff1660e01b81526004016107209392919061209a565b600060405180830381600087803b15801561073a57600080fd5b505af115801561074e573d6000803e3d6000fd5b5050505050505050565b806001600160401b0381111561077057610770610b25565b6040519080825280602002602001820160405280156107b657816020015b60408051808201909152606081526000602082015281526020019060019003908161078e5790505b5090915250565b81846000015184815181106107d4576107d46120dc565b60200260200101516000018190525080846000015184815181106107fa576107fa6120dc565b6020026020010151602001818152505050505050565b8184600001518481518110610827576108276120dc565b602002602001015160000181905250808460000151848151811061084d5761084d6120dc565b6020908102919091018101516001600160a01b0390921691015250505050565b6001600160a01b031690565b806001600160401b0381111561089157610891610b25565b6040519080825280602002602001820160405280156108d657816020015b60408051808201909152606080825260208201528152602001906001900390816108af5790505b5082602001819052505050565b81846020015184815181106108fa576108fa6120dc565b6020026020010151600001819052508084602001518481518110610920576109206120dc565b60200260200101516020018190525050505050565b806001600160401b0381111561094d5761094d610b25565b6040519080825280602002602001820160405280156107b657816020015b604080518082019091526060808252602082015281526020019060019003908161096b57505090915250565b81846000015184815181106109ae576109ae6120dc565b6020026020010151600001819052508084600001518481518110610920576109206120dc565b604080516101208101909152606060e0820181815261010083019190915281908152602001610a16604051806040016040528060608152602001606081525090565b8152602001610a38604051806040016040528060608152602001606081525090565b8152602001610a5a604051806040016040528060608152602001606081525090565b8152602001610a7c604051806040016040528060608152602001606081525090565b8152602001610a9e604051806040016040528060608152602001606081525090565b8152602001610ac0604051806040016040528060608152602001606081525090565b905290565b6001600160a01b0381168114610ada57600080fd5b50565b60008060008060808587031215610af357600080fd5b8435610afe81610ac5565b9350602085013592506040850135610b1581610ac5565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610b5d57610b5d610b25565b60405290565b604051606081016001600160401b0381118282101715610b5d57610b5d610b25565b604051601f8201601f191681016001600160401b0381118282101715610bad57610bad610b25565b604052919050565b600060c08284031215610bc757600080fd5b610bcf610b3b565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b600082601f830112610c1e57600080fd5b813560206001600160401b03821115610c3957610c39610b25565b8160051b610c48828201610b85565b9283528481018201928281019087851115610c6257600080fd5b83870192505b84831015610c8157823582529183019190830190610c68565b979650505050505050565b60008183036101a0811215610ca057600080fd5b610ca8610b63565b915060c0811215610cb857600080fd5b50610cc1610b3b565b8235610ccc81610ac5565b81526020830135610cdc81610ac5565b60208201526040830135610cef81610ac5565b60408201526060830135610d0281610ac5565b60608201526080830135610d1581610ac5565b608082015260a0830135610d2881610ac5565b60a08201528152610d3c8360c08401610bb5565b60208201526101808201356001600160401b03811115610d5b57600080fd5b610d6784828501610c0d565b60408301525092915050565b600060208284031215610d8557600080fd5b81356001600160401b03811115610d9b57600080fd5b610da784828501610c8c565b949350505050565b6000815180845260005b81811015610dd557602081850181015186830182015201610db9565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208086019550808260051b8401018186016000805b85811015610e9357601f19878503018a52825160408151818752610e3982880182610daf565b92880151878403888a0152805180855290890193869350890191505b80831015610e7e5783516001600160a01b03168252928801926001929092019190880190610e55565b509b87019b9550505091840191600101610e13565b509198975050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015610f1857898603605f1901845284518051888852610ef289890182610daf565b918401516001600160a01b03169784019790975295509381019392810192600101610ece565b50808801519550888503818a015250505050610f348183610df5565b95945050505050565b600081518084526020808501808196508360051b810191508286016000805b86811015610fcf578385038a52825160408151818852610f7e82890182610daf565b92890151888403898b01528051808552908a01938693508a0191505b80831015610fba5783518252928901926001929092019190890190610f9a565b509b88019b9650505091850191600101610f5c565b509298975050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561104b57898603605f190184528451805188885261102e89890182610daf565b91840151978401979097529550938101939281019260010161100a565b50808801519550888503818a015250505050610f348183610f3d565b600081518084526020808501808196508360051b810191508286016000805b86811015610fcf578385038a528251604081518188526110a882890182610daf565b92890151888403898b01528051808552908a01938693508a0191505b808310156110e457835182529289019260019290920191908901906110c4565b509b88019b9650505091850191600101611086565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561116757898603605f190184528451805188885261114a89890182610daf565b918401519784019790975295509381019392810192600101611126565b50808801519550888503818a015250505050610f348183611067565b6000815180845260208085019450848260051b86018286016000805b86811015610e93578484038a528251604081518187526111c182880182610daf565b92890151878403888b01528051808552908a01938693508a0191505b808310156111ff578351151582529289019260019290920191908901906111dd565b509b88019b955050509185019160010161119f565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561128457898603605f190184528451805188885261126589890182610daf565b9184015115159784019790975295509381019392810192600101611241565b50808801519550888503818a015250505050610f348183611183565b600081518084526020808501808196508360051b810191508286016000805b86811015610fcf578385038a528251604081518188526112e182890182610daf565b92890151888403898b01528051808552908a01938693508a0191505b8083101561131d57835182529289019260019290920191908901906112fd565b509b88019b96505050918501916001016112bf565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156113a057898603605f190184528451805188885261138389890182610daf565b91840151978401979097529550938101939281019260010161135f565b50808801519550888503818a015250505050610f3481836112a0565b60008282518085526020808601955060058183821b8501018287016000805b8681101561146a57601f1980898603018c5283516040815181885261140282890182610daf565b928a0151888403898c01528051808552908b019392508a83019150808a1b83018b01875b828110156114525786858303018452611440828751610daf565b958d0195938d01939150600101611426565b509f8b019f98505050948801945050506001016113db565b50919998505050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156114f657898603605f19018452845180518888526114ca89890182610daf565b91840151888303898601529190506114e28183610daf565b9750505093810193928101926001016114a6565b50808801519550888503818a015250505050610f3481836113bc565b60008282518085526020808601955060058183821b8501018287016000805b8681101561146a57601f1980898603018c5283516040815181885261155882890182610daf565b928a0151888403898c01528051808552908b019392508a83019150808a1b83018b01875b828110156115a85786858303018452611596828751610daf565b958d0195938d0193915060010161157c565b509f8b019f9850505094880194505050600101611531565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561163d57898603605f190184528451805188885261161189890182610daf565b91840151888303898601529190506116298183610daf565b9750505093810193928101926001016115ed565b50808801519550888503818a015250505050610f348183611512565b602081526000825160e06020840152611676610100840182610ea1565b90506020840151601f19808584030160408601526116948383610fdd565b925060408601519150808584030160608601526116b183836110f9565b925060608601519150808584030160808601526116ce8383611214565b925060808601519150808584030160a08601526116eb8383611332565b925060a08601519150808584030160c08601526117088383611479565b925060c08601519150808584030160e086015250610f3482826115c0565b60006001600160401b0383111561173f5761173f610b25565b611752601f8401601f1916602001610b85565b905082815283838301111561176657600080fd5b828260208301376000602084830101529392505050565b600080600080600060a0868803121561179557600080fd5b85356117a081610ac5565b94506020860135935060408601356117b781610ac5565b925060608601356001600160401b03808211156117d357600080fd5b818801915088601f8301126117e757600080fd5b6117f689833560208501611726565b9350608088013591508082111561180c57600080fd5b508601601f8101881361181e57600080fd5b61182d88823560208401611726565b9150509295509295909350565b60008060006060848603121561184f57600080fd5b833561185a81610ac5565b92506020840135915060408401356001600160401b0381111561187c57600080fd5b61188886828701610c8c565b9150509250925092565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015610f1857898603605f19018452845180518888526118e389890182610daf565b918401516001600160a01b031697840197909752955093810193928101926001016118bf565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156113a057898603605f190184528451805188885261195a89890182610daf565b918401519784019790975295509381019392810192600101611936565b600081518084526020808501808196508360051b810191508286016000805b86811015610fcf578385038a528251604081518188526119b882890182610daf565b92890151888403898b01528051808552908a01938693508a0191505b808310156119f457835182529289019260019290920191908901906119d4565b509b88019b9650505091850191600101611996565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611a7757898603605f1901845284518051888852611a5a89890182610daf565b918401519784019790975295509381019392810192600101611a36565b50808801519550888503818a015250505050610f348183611977565b600082825180855260208086019550808260051b8401018186016000805b85811015610e9357601f19878503018a52825160408151818752611ad782880182610daf565b92880151878403888a0152805180855290890193869350890191505b80831015611b1557835115158252928801926001929092019190880190611af3565b509b87019b9550505091840191600101611ab1565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611b9a57898603605f1901845284518051888852611b7b89890182610daf565b9184015115159784019790975295509381019392810192600101611b57565b50808801519550888503818a015250505050610f348183611a93565b600082825180855260208086019550808260051b8401018186016000805b85811015610e9357601f19878503018a52825160408151818752611bfa82880182610daf565b92880151878403888a0152805180855290890193869350890191505b80831015611c365783518252928801926001929092019190880190611c16565b509b87019b9550505091840191600101611bd4565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611cb957898603605f1901845284518051888852611c9c89890182610daf565b918401519784019790975295509381019392810192600101611c78565b50808801519550888503818a015250505050610f348183611bb6565b60008282518085526020808601955060058183821b8501018287016000805b8681101561146a57601f1980898603018c52835160408151818852611d1b82890182610daf565b928a0151888403898c01528051808552908b019392508a83019150808a1b83018b01875b82811015611d6b5786858303018452611d59828751610daf565b958d0195938d01939150600101611d3f565b509f8b019f9850505094880194505050600101611cf4565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611e0057898603605f1901845284518051888852611dd489890182610daf565b9184015188830389860152919050611dec8183610daf565b975050509381019392810192600101611db0565b50808801519550888503818a015250505050610f348183611cd5565b60008282518085526020808601955060058183821b8501018287016000805b8681101561146a57601f1980898603018c52835160408151818852611e6282890182610daf565b928a0151888403898c01528051808552908b019392508a83019150808a1b83018b01875b82811015611eb25786858303018452611ea0828751610daf565b958d0195938d01939150600101611e86565b509f8b019f9850505094880194505050600101611e3b565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611f4757898603605f1901845284518051888852611f1b89890182610daf565b9184015188830389860152919050611f338183610daf565b975050509381019392810192600101611ef7565b50808801519550888503818a015250505050610f348183611e1c565b6000815160e08452611f7860e0850182611892565b905060208301518482036020860152611f918282611909565b91505060408301518482036040860152611fab8282611a09565b91505060608301518482036060860152611fc58282611b2a565b91505060808301518482036080860152611fdf8282611c4b565b91505060a083015184820360a0860152611ff98282611d83565b91505060c083015184820360c0860152610f348282611eca565b60808152600d60808201526c14da1a599d115e1958dd5d1959609a1b60a082015283602082015282604082015260c060608201526000610f3460c0830184611f63565b60808152600e60808201526d14da1a599d10d85b98d95b1b195960921b60a082015283602082015282604082015260c060608201526000610f3460c0830184611f63565b60808152600c60808201526b14da1a599d10dc99585d195960a21b60a082015283602082015282604082015260c060608201526000610f3460c0830184611f63565b634e487b7160e01b600052603260045260246000fdfea264697066735822122030578fa05bbbacf200fd0c11def39c888d30ba59ca0d2ce2e463ce54d601ec8464736f6c63430008140033";

type ShiftEventUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShiftEventUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShiftEventUtils__factory extends ContractFactory {
  constructor(...args: ShiftEventUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ShiftEventUtils> {
    return super.deploy(overrides || {}) as Promise<ShiftEventUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ShiftEventUtils {
    return super.attach(address) as ShiftEventUtils;
  }
  override connect(signer: Signer): ShiftEventUtils__factory {
    return super.connect(signer) as ShiftEventUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShiftEventUtilsInterface {
    return new utils.Interface(_abi) as ShiftEventUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShiftEventUtils {
    return new Contract(address, _abi, signerOrProvider) as ShiftEventUtils;
  }
}
