// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GlvShiftStoreUtilsTest,
  GlvShiftStoreUtilsTestInterface,
} from "../../../contracts/test/GlvShiftStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyGlvShift",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "glv",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct GlvShift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct GlvShift.Numbers",
            name: "numbers",
            type: "tuple",
          },
        ],
        internalType: "struct GlvShift.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "removeGlvShift",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "glv",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct GlvShift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct GlvShift.Numbers",
            name: "numbers",
            type: "tuple",
          },
        ],
        internalType: "struct GlvShift.Props",
        name: "glvShift",
        type: "tuple",
      },
    ],
    name: "setGlvShift",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061044d8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806359c3a9f814610046578063be7d2a2b1461005b578063bebca79614610079575b600080fd5b6100596100543660046101f1565b61008c565b005b610063610102565b604051610070919061025d565b60405180910390f35b6100596100873660046102ef565b610117565b6040516335545ec560e21b81526001600160a01b03831660048201526024810182905273__$07591b4a48e7f184f964d42e66c465aad6$__9063d5517b149060440160006040518083038186803b1580156100e657600080fd5b505af41580156100fa573d6000803e3d6000fd5b505050505050565b61010a610187565b610112610187565b919050565b60405163b56fb88960e01b815273__$07591b4a48e7f184f964d42e66c465aad6$__9063b56fb88990610152908690869086906004016103d3565b60006040518083038186803b15801561016a57600080fd5b505af415801561017e573d6000803e3d6000fd5b50505050505050565b6040805160a081018252600091810182815260608201839052608082019290925290819081526020016101d460405180606001604052806000815260200160008152602001600081525090565b905290565b6001600160a01b03811681146101ee57600080fd5b50565b6000806040838503121561020457600080fd5b823561020f816101d9565b946020939093013593505050565b80516001600160a01b03908116835260208083015182169084015260409182015116910152565b8051825260208082015190830152604090810151910152565b600060c08201905061027082845161021d565b60208301516102826060840182610244565b5092915050565b604080519081016001600160401b03811182821017156102b957634e487b7160e01b600052604160045260246000fd5b60405290565b604051606081016001600160401b03811182821017156102b957634e487b7160e01b600052604160045260246000fd5b600080600083850361010081121561030657600080fd5b8435610311816101d9565b935060208501359250603f19810160c081121561032d57600080fd5b610335610289565b606082121561034357600080fd5b61034b6102bf565b9150604087013561035b816101d9565b8252606087013561036b816101d9565b6020830152608087013561037e816101d9565b60408301528181526060609f198401121561039857600080fd5b6103a06102bf565b60a0880135815260c088013560208083019190915260e09098013560408201529681019690965250929591945090915050565b6001600160a01b03841681526020810183905281516101008201906103fc90604084019061021d565b602083015161040e60a0840182610244565b5094935050505056fea26469706673582212208daf2c249939b0b3e49cdbe2fbc7f898df563e5bc0b849400f805af34d2ba8a764736f6c634300081d0033";

type GlvShiftStoreUtilsTestConstructorParams =
  | [
      linkLibraryAddresses: GlvShiftStoreUtilsTestLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlvShiftStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GlvShiftStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: GlvShiftStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GlvShiftStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: GlvShiftStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$07591b4a48e7f184f964d42e66c465aad6\$__", "g"),
      linkLibraryAddresses[
        "contracts/glv/glvShift/GlvShiftStoreUtils.sol:GlvShiftStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GlvShiftStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<GlvShiftStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GlvShiftStoreUtilsTest {
    return super.attach(address) as GlvShiftStoreUtilsTest;
  }
  override connect(signer: Signer): GlvShiftStoreUtilsTest__factory {
    return super.connect(signer) as GlvShiftStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlvShiftStoreUtilsTestInterface {
    return new utils.Interface(_abi) as GlvShiftStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlvShiftStoreUtilsTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GlvShiftStoreUtilsTest;
  }
}

export interface GlvShiftStoreUtilsTestLibraryAddresses {
  ["contracts/glv/glvShift/GlvShiftStoreUtils.sol:GlvShiftStoreUtils"]: string;
}
