// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DepositStoreUtilsTest,
  DepositStoreUtilsTestInterface,
} from "../../../contracts/test/DepositStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyDeposit",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialLongToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialShortToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Deposit.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "initialLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Deposit.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Deposit.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Deposit.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialLongToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialShortToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Deposit.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "initialLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Deposit.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Deposit.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Deposit.Props",
        name: "deposit",
        type: "tuple",
      },
    ],
    name: "setDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506109dc8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063c4c4281314610046578063db4f82a91461005b578063f3f9957614610079575b600080fd5b610059610054366004610493565b61008c565b005b6100636100fc565b6040516100709190610712565b60405180910390f35b610059610087366004610830565b610111565b60405163151a2c8b60e11b815273__$b63e253a228f0e32f671cc49c7fc32477c$__90632a345916906100c790869086908690600401610872565b60006040518083038186803b1580156100df57600080fd5b505af41580156100f3573d6000803e3d6000fd5b50505050505050565b610104610160565b61010c610160565b919050565b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$b63e253a228f0e32f671cc49c7fc32477c$__906374b6fe13906064016100c7565b604080516101a0810190915260006080820181815260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083019190915260606101608301819052610180830152819081526020016101fa6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516020808201835260008252830152606091015290565b6001600160a01b038116811461022b57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156102665761026661022e565b60405290565b60405161012081016001600160401b03811182821017156102665761026661022e565b604051601f8201601f191681016001600160401b03811182821017156102b7576102b761022e565b604052919050565b803561010c81610216565b60006001600160401b038211156102e3576102e361022e565b5060051b60200190565b600082601f8301126102fe57600080fd5b813561031161030c826102ca565b61028f565b8082825260208201915060208360051b86010192508583111561033357600080fd5b602085015b8381101561035957803561034b81610216565b835260209283019201610338565b5095945050505050565b600060e0828403121561037557600080fd5b60405160e081016001600160401b03811182821017156103975761039761022e565b604090815283358252602080850135908301528381013590820152606080840135908201526080808401359082015260a0808401359082015260c0928301359281019290925250919050565b6000602082840312156103f557600080fd5b604051602081016001600160401b03811182821017156104175761041761022e565b6040529050808235801515811461042d57600080fd5b905292915050565b600082601f83011261044657600080fd5b813561045461030c826102ca565b8082825260208201915060208360051b86010192508583111561047657600080fd5b602085015b8381101561035957803583526020928301920161047b565b6000806000606084860312156104a857600080fd5b83356104b381610216565b92506020840135915060408401356001600160401b038111156104d557600080fd5b840161014081870312156104e857600080fd5b6104f0610244565b81356001600160401b0381111561050657600080fd5b8201610120818903121561051957600080fd5b61052161026c565b61052a826102bf565b8152610538602083016102bf565b6020820152610549604083016102bf565b604082015261055a606083016102bf565b606082015261056b608083016102bf565b608082015261057c60a083016102bf565b60a082015261058d60c083016102bf565b60c082015260e08201356001600160401b038111156105ab57600080fd5b6105b78a8285016102ed565b60e0830152506101008201356001600160401b038111156105d757600080fd5b6105e38a8285016102ed565b610100830152508252506105fa8760208401610363565b602082015261060d8761010084016103e3565b60408201526101208201356001600160401b0381111561062c57600080fd5b61063888828501610435565b60608301525080925050509250925092565b6001600160a01b03169052565b600081518084526020840193506020830160005b828110156106925781516001600160a01b031686526020958601959091019060010161066b565b5093949350505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b600081518084526020840193506020830160005b828110156106925781518652602095860195909101906001016106f4565b602081526000825161014060208401526107316101608401825161064a565b602081015161074461018085018261064a565b5060408101516107586101a085018261064a565b50606081015161076c6101c085018261064a565b5060808101516107806101e085018261064a565b5060a081015161079461020085018261064a565b5060c08101516107a861022085018261064a565b5060e08101516101206102408501526107c5610280850182610657565b9050610100820151915061015f19848203016102608501526107e78183610657565b91505060208401516107fc604085018261069c565b5060408401515115156101208401526060840151601f198483030161014085015261082782826106e0565b95945050505050565b60008060006060848603121561084557600080fd5b833561085081610216565b925060208401359150604084013561086781610216565b809150509250925092565b60018060a01b0384168152826020820152606060408201526000825161014060608401526108a56101a08401825161064a565b60208101516108b86101c085018261064a565b5060408101516108cc6101e085018261064a565b5060608101516108e061020085018261064a565b5060808101516108f461022085018261064a565b5060a081015161090861024085018261064a565b5060c081015161091c61026085018261064a565b5060e08101516101206102808501526109396102c0850182610657565b9050610100820151915061019f19848203016102a085015261095b8183610657565b9150506020840151610970608085018261069c565b5060408401515115156101608401526060840151605f198483030161018085015261099b82826106e0565b97965050505050505056fea2646970667358221220e9eaf9f34c1110e707662d66a2379051545b5a27dbe9e207ce8383205198a9f464736f6c634300081d0033";

type DepositStoreUtilsTestConstructorParams =
  | [
      linkLibraryAddresses: DepositStoreUtilsTestLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DepositStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: DepositStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DepositStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DepositStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$b63e253a228f0e32f671cc49c7fc32477c\$__", "g"),
      linkLibraryAddresses[
        "contracts/deposit/DepositStoreUtils.sol:DepositStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<DepositStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DepositStoreUtilsTest {
    return super.attach(address) as DepositStoreUtilsTest;
  }
  override connect(signer: Signer): DepositStoreUtilsTest__factory {
    return super.connect(signer) as DepositStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositStoreUtilsTestInterface {
    return new utils.Interface(_abi) as DepositStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositStoreUtilsTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DepositStoreUtilsTest;
  }
}

export interface DepositStoreUtilsTestLibraryAddresses {
  ["contracts/deposit/DepositStoreUtils.sol:DepositStoreUtils"]: string;
}
