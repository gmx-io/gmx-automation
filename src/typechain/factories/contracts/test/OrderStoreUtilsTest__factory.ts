// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OrderStoreUtilsTest,
  OrderStoreUtilsTestInterface,
} from "../../../contracts/test/OrderStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props",
        name: "order",
        type: "tuple",
      },
    ],
    name: "setOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610abe806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631b161e74146100465780632a1a04221461005b578063e23e70381461006e575b600080fd5b61005961005436600461054c565b61008c565b005b6100596100693660046106c5565b6100fc565b61007661014b565b6040516100839190610877565b60405180910390f35b604051630c154e0d60e31b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__906360aa7068906100c790869086908690600401610976565b60006040518083038186803b1580156100df57600080fd5b505af41580156100f3573d6000803e3d6000fd5b50505050505050565b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__906374b6fe13906064016100c7565b610153610160565b61015b610160565b919050565b60408051610180810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301919091526060610160830152815260208101610216604080516101808101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516080810182526000808252602082810182905292820181905260608201529101908152602001606081525090565b6001600160a01b038116811461025f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b038111828210171561029b5761029b610262565b60405290565b604051608081016001600160401b038111828210171561029b5761029b610262565b60405161010081016001600160401b038111828210171561029b5761029b610262565b604051601f8201601f191681016001600160401b038111828210171561030e5761030e610262565b604052919050565b803561015b8161024a565b60006001600160401b0382111561033a5761033a610262565b5060051b60200190565b600082601f83011261035557600080fd5b8135602061036a61036583610321565b6102e6565b82815260059290921b8401810191818101908684111561038957600080fd5b8286015b848110156103ad5780356103a08161024a565b835291830191830161038d565b509695505050505050565b80356009811061015b57600080fd5b80356003811061015b57600080fd5b600061018082840312156103e957600080fd5b6103f1610278565b90506103fc826103b8565b815261040a602083016103c7565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525061016080830135818301525092915050565b8035801515811461015b57600080fd5b6000608082840312156104a357600080fd5b6104ab6102a1565b90506104b682610481565b81526104c460208301610481565b60208201526104d560408301610481565b60408201526104e660608301610481565b606082015292915050565b600082601f83011261050257600080fd5b8135602061051261036583610321565b82815260059290921b8401810191818101908684111561053157600080fd5b8286015b848110156103ad5780358352918301918301610535565b60008060006060848603121561056157600080fd5b833561056c8161024a565b92506020840135915060408401356001600160401b038082111561058f57600080fd5b9085019061024082880312156105a457600080fd5b6105ac6102a1565b8235828111156105bb57600080fd5b8301610100818a0312156105ce57600080fd5b6105d66102c3565b6105df82610316565b81526105ed60208301610316565b60208201526105fe60408301610316565b604082015261060f60608301610316565b606082015261062060808301610316565b608082015261063160a08301610316565b60a082015261064260c08301610316565b60c082015260e08201358481111561065957600080fd5b6106658b828501610344565b60e08301525082525061067b88602085016103d6565b602082015261068e886101a08501610491565b6040820152610220830135828111156106a657600080fd5b6106b2898286016104f1565b6060830152508093505050509250925092565b6000806000606084860312156106da57600080fd5b83356106e58161024a565b92506020840135915060408401356106fc8161024a565b809150509250925092565b6001600160a01b03169052565b600081518084526020808501945080840160005b8381101561074d5781516001600160a01b031687529582019590820190600101610728565b509495945050505050565b634e487b7160e01b600052602160045260246000fd5b6009811061077e5761077e610758565b9052565b6003811061077e5761077e610758565b61079d82825161076e565b60208101516107af6020840182610782565b5060408181015190830152606080820151908301526080808201519083015260a0808201519083015260c0808201519083015260e0808201519083015261010080820151908301526101208082015190830152610140808201519083015261016090810151910152565b8051151582526020810151151560208301526040810151151560408301526060810151151560608301525050565b600081518084526020808501945080840160005b8381101561074d5781518752958201959082019060010161085b565b602081526000825161024080602085015260018060a01b0380835116610260860152806020840151166102808601525060408201516108ba6102a0860182610707565b5060608201516108ce6102c0860182610707565b5060808201516108e26102e0860182610707565b5060a08201516108f6610300860182610707565b5060c082015161090a610320860182610707565b5060e08201519150610100610340850152610929610360850183610714565b9150602085015161093d6040860182610792565b5060408501516109516101c0860182610819565b506060850151848303601f19018286015261096c8382610847565b9695505050505050565b600060018060a01b0380861683528460208401526060604084015283516102406060850152818151166102a0850152816020820151166102c0850152604081015191506109c76102e0850183610707565b606081015191506109dc610300850183610707565b608081015191506109f1610320850183610707565b60a08101519150610a06610340850183610707565b60c08101519150610a1b610360850183610707565b60e001516101006103808501529050610a386103a0840182610714565b90506020840151610a4c6080850182610792565b506040840151610a60610200850182610819565b506060840151838203605f1901610280850152610a7d8282610847565b97965050505050505056fea26469706673582212204dc871bb4c5eaec6408efc564b02d8bb1643e0c392b2793adcf8e19a92ffc78e64736f6c63430008140033";

type OrderStoreUtilsTestConstructorParams =
  | [linkLibraryAddresses: OrderStoreUtilsTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class OrderStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: OrderStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        OrderStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: OrderStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrderStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<OrderStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrderStoreUtilsTest {
    return super.attach(address) as OrderStoreUtilsTest;
  }
  override connect(signer: Signer): OrderStoreUtilsTest__factory {
    return super.connect(signer) as OrderStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderStoreUtilsTestInterface {
    return new utils.Interface(_abi) as OrderStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderStoreUtilsTest {
    return new Contract(address, _abi, signerOrProvider) as OrderStoreUtilsTest;
  }
}

export interface OrderStoreUtilsTestLibraryAddresses {
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
