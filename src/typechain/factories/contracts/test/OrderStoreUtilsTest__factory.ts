// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OrderStoreUtilsTest,
  OrderStoreUtilsTestInterface,
} from "../../../contracts/test/OrderStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props",
        name: "order",
        type: "tuple",
      },
    ],
    name: "setOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610add8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631b161e74146100465780632a1a04221461005b578063e23e70381461006e575b600080fd5b61005961005436600461054f565b61008c565b005b6100596100693660046106d9565b6100fc565b61007661014b565b6040516100839190610895565b60405180910390f35b604051630c154e0d60e31b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__906360aa7068906100c790869086908690600401610994565b60006040518083038186803b1580156100df57600080fd5b505af41580156100f3573d6000803e3d6000fd5b50505050505050565b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__906374b6fe13906064016100c7565b610153610160565b61015b610160565b919050565b60408051610180810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301919091526060610160830152815260208101610216604080516101808101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516080810182526000808252602082810182905292820181905260608201529101908152602001606081525090565b6001600160a01b038116811461025f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b038111828210171561029b5761029b610262565b60405290565b604051608081016001600160401b038111828210171561029b5761029b610262565b60405161010081016001600160401b038111828210171561029b5761029b610262565b604051601f8201601f191681016001600160401b038111828210171561030e5761030e610262565b604052919050565b803561015b8161024a565b60006001600160401b0382111561033a5761033a610262565b5060051b60200190565b600082601f83011261035557600080fd5b813561036861036382610321565b6102e6565b8082825260208201915060208360051b86010192508583111561038a57600080fd5b602085015b838110156103b05780356103a28161024a565b83526020928301920161038f565b5095945050505050565b80356009811061015b57600080fd5b80356003811061015b57600080fd5b600061018082840312156103eb57600080fd5b6103f3610278565b90506103fe826103ba565b815261040c602083016103c9565b602082015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c0808301359082015260e080830135908201526101008083013590820152610120808301359082015261014080830135908201526101609182013591810191909152919050565b8035801515811461015b57600080fd5b6000608082840312156104a357600080fd5b6104ab6102a1565b90506104b682610481565b81526104c460208301610481565b60208201526104d560408301610481565b60408201526104e660608301610481565b606082015292915050565b600082601f83011261050257600080fd5b813561051061036382610321565b8082825260208201915060208360051b86010192508583111561053257600080fd5b602085015b838110156103b0578035835260209283019201610537565b60008060006060848603121561056457600080fd5b833561056f8161024a565b92506020840135915060408401356001600160401b0381111561059157600080fd5b840161024081870312156105a457600080fd5b6105ac6102a1565b81356001600160401b038111156105c257600080fd5b820161010081890312156105d557600080fd5b6105dd6102c3565b6105e682610316565b81526105f460208301610316565b602082015261060560408301610316565b604082015261061660608301610316565b606082015261062760808301610316565b608082015261063860a08301610316565b60a082015261064960c08301610316565b60c082015260e08201356001600160401b0381111561066757600080fd5b6106738a828501610344565b60e08301525082525061068987602084016103d8565b602082015261069c876101a08401610491565b60408201526102208201356001600160401b038111156106bb57600080fd5b6106c7888285016104f1565b60608301525080925050509250925092565b6000806000606084860312156106ee57600080fd5b83356106f98161024a565b92506020840135915060408401356107108161024a565b809150509250925092565b6001600160a01b03169052565b600081518084526020840193506020830160005b828110156107635781516001600160a01b031686526020958601959091019060010161073c565b5093949350505050565b634e487b7160e01b600052602160045260246000fd5b600981106107935761079361076d565b9052565b600381106107935761079361076d565b6107b2828251610783565b60208101516107c46020840182610797565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008101516101008301526101208101516101208301526101408101516101408301526101608101516101608301525050565b8051151582526020810151151560208301526040810151151560408301526060810151151560608301525050565b600081518084526020840193506020830160005b82811015610763578151865260209586019590910190600101610877565b602080825282516102408383015280516001600160a01b03908116610260850152918101519091166102808301526040810151600091906108da6102a085018261071b565b5060608101516108ee6102c085018261071b565b5060808101516109026102e085018261071b565b5060a081015161091661030085018261071b565b5060c081015161092a61032085018261071b565b5060e00151610100610340840152610946610360840182610728565b9050602084015161095a60408501826107a7565b50604084015161096e6101c0850182610835565b506060840151838203601f190161024085015261098b8282610863565b95945050505050565b6001600160a01b038481168252602080830185905260606040808501829052855161024092860192909252815184166102a0860152918101519092166102c0840152810151600091906109eb6102e085018261071b565b5060608101516109ff61030085018261071b565b506080810151610a1361032085018261071b565b5060a0810151610a2761034085018261071b565b5060c0810151610a3b61036085018261071b565b5060e00151610100610380840152610a576103a0840182610728565b90506020840151610a6b60808501826107a7565b506040840151610a7f610200850182610835565b506060840151838203605f1901610280850152610a9c8282610863565b97965050505050505056fea264697066735822122036c17e971ca64b2a1415eea6c2515c1d6fd8acaebe3793175c435f65c57e3fe064736f6c634300081d0033";

type OrderStoreUtilsTestConstructorParams =
  | [linkLibraryAddresses: OrderStoreUtilsTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class OrderStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: OrderStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        OrderStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: OrderStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrderStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<OrderStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrderStoreUtilsTest {
    return super.attach(address) as OrderStoreUtilsTest;
  }
  override connect(signer: Signer): OrderStoreUtilsTest__factory {
    return super.connect(signer) as OrderStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderStoreUtilsTestInterface {
    return new utils.Interface(_abi) as OrderStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderStoreUtilsTest {
    return new Contract(address, _abi, signerOrProvider) as OrderStoreUtilsTest;
  }
}

export interface OrderStoreUtilsTestLibraryAddresses {
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
