/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OrderStoreUtilsTest,
  OrderStoreUtilsTestInterface,
} from "../../../contracts/test/OrderStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Order.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Order.Props",
        name: "order",
        type: "tuple",
      },
    ],
    name: "setOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109a2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632a1a04221461004657806376a1d3211461005b578063e23e70381461006e575b600080fd5b610059610054366004610256565b61008c565b005b61005961006936600461050b565b61010c565b610076610147565b604051610083919061079a565b60405180910390f35b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__906374b6fe13906064015b60006040518083038186803b1580156100ef57600080fd5b505af4158015610103573d6000803e3d6000fd5b50505050505050565b604051630c154e0d60e31b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__906360aa7068906100d790869086908690600401610878565b61014f61015c565b61015761015c565b919050565b604080516101608101909152600060608083018281526080840183905260a0840183905260c0840183905260e0840183905261010084018390526101208401929092526101408301528152602081016102096040805161016081019091528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b6001600160a01b038116811461024857600080fd5b50565b803561015781610233565b60008060006060848603121561026b57600080fd5b833561027681610233565b925060208401359150604084013561028d81610233565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156102d1576102d1610298565b60405290565b604051606081016001600160401b03811182821017156102d1576102d1610298565b60405161010081016001600160401b03811182821017156102d1576102d1610298565b600082601f83011261032d57600080fd5b813560206001600160401b038083111561034957610349610298565b8260051b604051601f19603f8301168101818110848211171561036e5761036e610298565b60405293845285810183019383810192508785111561038c57600080fd5b83870191505b848210156103b45781356103a581610233565b83529183019190830190610392565b979650505050505050565b80356009811061015757600080fd5b80356003811061015757600080fd5b600061016082840312156103f057600080fd5b6103f86102ae565b9050610403826103bf565b8152610411602083016103ce565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b8035801515811461015757600080fd5b60006080828403121561049e57600080fd5b604051608081016001600160401b03811182821017156104c0576104c0610298565b6040529050806104cf8361047c565b81526104dd6020840161047c565b60208201526104ee6040840161047c565b60408201526104ff6060840161047c565b60608201525092915050565b60008060006060848603121561052057600080fd5b833561052b81610233565b92506020840135915060408401356001600160401b038082111561054e57600080fd5b90850190610200828803121561056357600080fd5b61056b6102d7565b82358281111561057a57600080fd5b8301610100818a03121561058d57600080fd5b6105956102f9565b61059e8261024b565b81526105ac6020830161024b565b60208201526105bd6040830161024b565b60408201526105ce6060830161024b565b60608201526105df6080830161024b565b60808201526105f060a0830161024b565b60a082015261060160c0830161024b565b60c082015260e08201358481111561061857600080fd5b6106248b82850161031c565b60e08301525082525061063a88602085016103dd565b602082015261064d88610180850161048c565b60408201528093505050509250925092565b6001600160a01b03169052565b600081518084526020808501945080840160005b838110156106a55781516001600160a01b031687529582019590820190600101610680565b509495945050505050565b634e487b7160e01b600052602160045260246000fd5b600981106106d6576106d66106b0565b9052565b600381106106d6576106d66106b0565b6106f58282516106c6565b602081015161070760208401826106da565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152505050565b8051151582526020810151151560208301526040810151151560408301526060810151151560608301525050565b6020815260008251610200602084015260018060a01b0380825116610220850152806020830151166102408501525060408101516107dc61026085018261065f565b5060608101516107f061028085018261065f565b5060808101516108046102a085018261065f565b5060a08101516108186102c085018261065f565b5060c081015161082c6102e085018261065f565b5060e0015161010061030084015261084861032084018261066c565b9050602084015161085c60408501826106ea565b5060408401516108706101a085018261076c565b509392505050565b600060018060a01b03808616835284602084015260606040840152835161020060608501528181511661026085015281602082015116610280850152604081015191506108c96102a085018361065f565b606081015191506108de6102c085018361065f565b608081015191506108f36102e085018361065f565b60a0810151915061090861030085018361065f565b60c0810151915061091d61032085018361065f565b60e00151610100610340850152905061093a61036084018261066c565b9050602084015161094e60808501826106ea565b5060408401516109626101e085018261076c565b509594505050505056fea26469706673582212205bd77bca357c422dd138bb9d1cc29c27fc8f2c05139551b5c3c27a7df9a920e464736f6c63430008120033";

type OrderStoreUtilsTestConstructorParams =
  | [linkLibraryAddresses: OrderStoreUtilsTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class OrderStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: OrderStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        OrderStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: OrderStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrderStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<OrderStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrderStoreUtilsTest {
    return super.attach(address) as OrderStoreUtilsTest;
  }
  override connect(signer: Signer): OrderStoreUtilsTest__factory {
    return super.connect(signer) as OrderStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderStoreUtilsTestInterface {
    return new utils.Interface(_abi) as OrderStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderStoreUtilsTest {
    return new Contract(address, _abi, signerOrProvider) as OrderStoreUtilsTest;
  }
}

export interface OrderStoreUtilsTestLibraryAddresses {
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
