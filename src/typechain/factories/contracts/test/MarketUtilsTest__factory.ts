// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MarketUtilsTest,
  MarketUtilsTestInterface,
} from "../../../contracts/test/MarketUtilsTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getPoolUsdWithoutPnl",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
    ],
    name: "getReservedUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reservedUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolUsd",
        type: "uint256",
      },
    ],
    name: "getUsageFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610b918061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630cdd4aab14610046578063bfd26c061461006b578063cac210451461007e575b600080fd5b6100596100543660046108ba565b610091565b60405190815260200160405180910390f35b6100596100793660046109ee565b6100aa565b61005961008c366004610a5a565b6100b9565b60006100a086868686866100d0565b9695505050505050565b60006100a0868686868661010b565b60006100c785858585610184565b95945050505050565b6000806100e2878760000151876101c0565b905060006100f08483610244565b905060006100fe8683610266565b9998505050505050505050565b6000808361011d578560600151610123565b85604001515b90506000610132888884610274565b905060008415610160578561014f57866040015160200151610159565b8660200151602001515b905061017a565b8561017057604087015151610177565b6020870151515b90505b6100fe8183610aca565b60008082156101b557600061019a878786610312565b8551602001519091506101ad9082610aca565b9150506100c7565b6100a0868685610370565b6000836001600160a01b031663bd02d0f56101db85856103b7565b6040518263ffffffff1660e01b81526004016101f991815260200190565b602060405180830381865afa158015610216573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023a9190610ae1565b90505b9392505050565b600061025d838368327cb2734119d3b7a9601e1b61044d565b90505b92915050565b600061025d8383600061045a565b600080610289846040015185606001516104a9565b905080856001600160a01b031663bd02d0f56102a98760000151876104d8565b6040518263ffffffff1660e01b81526004016102c791815260200190565b602060405180830381865afa1580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103089190610ae1565b6100c79190610b10565b600080610327846040015185606001516104a9565b9050600061034086866000015187604001518786610546565b9050600061035987876000015188606001518887610546565b90506103658183610b32565b979650505050505050565b600080610385846040015185606001516104a9565b9050600061039e868660000151876040015187866105cc565b90506000610359878760000151886060015188876105cc565b60006040516020016103f9906020808252601c908201527b27a822a72fa4a72a22a922a9aa2fa922a9a2a92b22afa320a1aa27a960211b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b0385169082015282151560608201526080015b60405160208183030381529060405280519060200120905092915050565b600061023a8484846105e9565b60008360000361046c5750600061023d565b81156104925761048b8468327cb2734119d3b7a9601e1b8560016106d7565b905061023d565b61023a8468327cb2734119d3b7a9601e1b856105e9565b6000816001600160a01b0316836001600160a01b0316146104cb5760016104ce565b60025b60ff169392505050565b6000604051602001610509906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800161042f565b600081866001600160a01b031663bd02d0f5610563888888610728565b6040518263ffffffff1660e01b815260040161058191815260200190565b602060405180830381865afa15801561059e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c29190610ae1565b6100a09190610b10565b600081866001600160a01b031663bd02d0f56105638888886107c4565b60008080600019858709858702925082811083820303915050806000036106235783828161061957610619610afa565b049250505061023d565b80841161066e5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b604482015260640160405180910390fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806106e58686866105e9565b905060018360028111156106fb576106fb610b45565b14801561071857506000848061071357610713610afa565b868809115b156100c7576100a0600182610b32565b6000604051602001610765906020808252601790820152764f50454e5f494e5445524553545f494e5f544f4b454e5360481b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915284166060820152821515608082015260a0016040516020818303038152906040528051906020012090509392505050565b6000604051602001610765906020808252600d908201526c13d4115397d2539511549154d5609a1b604082015260600190565b6001600160a01b038116811461080c57600080fd5b50565b60006080828403121561082157600080fd5b604051608081016001600160401b038111828210171561085157634e487b7160e01b600052604160045260246000fd5b6040529050808235610862816107f7565b81526020830135610872816107f7565b60208201526040830135610885816107f7565b60408201526060830135610898816107f7565b6060919091015292915050565b803580151581146108b557600080fd5b919050565b600080600080600061010086880312156108d357600080fd5b85356108de816107f7565b94506108ed876020880161080f565b93506108fb60a087016108a5565b9497939650939460c0810135945060e0013592915050565b60006040828403121561092557600080fd5b604080519081016001600160401b038111828210171561095557634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b600060c0828403121561098157600080fd5b604051606081016001600160401b03811182821017156109b157634e487b7160e01b600052604160045260246000fd5b6040529050806109c18484610913565b81526109d08460408501610913565b60208201526109e28460808501610913565b60408201525092915050565b60008060008060006101a08688031215610a0757600080fd5b8535610a12816107f7565b9450610a21876020880161080f565b9350610a308760a0880161096f565b9250610a3f61016087016108a5565b9150610a4e61018087016108a5565b90509295509295909350565b6000806000806101808587031215610a7157600080fd5b8435610a7c816107f7565b9350610a8b866020870161080f565b9250610a9a8660a0870161096f565b9150610aa961016086016108a5565b905092959194509250565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761026057610260610ab4565b600060208284031215610af357600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082610b2d57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561026057610260610ab4565b634e487b7160e01b600052602160045260246000fdfea26469706673582212208d5f9ddb5f1562ff055063c5f96ec2d43731bb4adcb95c69f02a3dcb09a8e2f864736f6c634300081d0033";

type MarketUtilsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketUtilsTest__factory extends ContractFactory {
  constructor(...args: MarketUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketUtilsTest> {
    return super.deploy(overrides || {}) as Promise<MarketUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarketUtilsTest {
    return super.attach(address) as MarketUtilsTest;
  }
  override connect(signer: Signer): MarketUtilsTest__factory {
    return super.connect(signer) as MarketUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketUtilsTestInterface {
    return new utils.Interface(_abi) as MarketUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketUtilsTest {
    return new Contract(address, _abi, signerOrProvider) as MarketUtilsTest;
  }
}
