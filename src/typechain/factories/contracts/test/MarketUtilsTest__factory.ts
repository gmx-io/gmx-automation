/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MarketUtilsTest,
  MarketUtilsTestInterface,
} from "../../../contracts/test/MarketUtilsTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getPoolUsdWithoutPnl",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
    ],
    name: "getReservedUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "reservedUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "poolUsd",
        type: "uint256",
      },
    ],
    name: "getUsageFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d2f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630cdd4aab14610046578063bfd26c061461006b578063cac210451461007e575b600080fd5b610059610054366004610a31565b610091565b60405190815260200160405180910390f35b610059610079366004610b67565b6100ac565b61005961008c366004610bd9565b6100bb565b60006100a086868686866100c9565b90505b95945050505050565b60006100a0868686868661022a565b60006100a3858585856102b0565b6000806100db878760000151876102ec565b905060006100e98483610370565b905060006100f78683610392565b9050886001600160a01b0316637ae1cfca6040516020016101579060208082526025908201527f49474e4f52455f4f50454e5f494e5445524553545f464f525f55534147455f4660408201526420a1aa27a960d91b606082015260800190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161018b91815260200190565b602060405180830381865afa1580156101a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cc9190610c35565b156101db5792506100a3915050565b60006101ec8a8a600001518a6103a0565b905060006101fb8b8b8b6103bb565b905060006102098284610392565b9050808411610218578061021a565b835b9c9b505050505050505050505050565b6000808361023c578560600151610242565b85604001515b90506000610251888884610419565b90506000841561027f578561026e57866040015160200151610278565b8660200151602001515b9050610299565b8561028f57604087015151610296565b6020870151515b90505b6102a38183610c68565b9998505050505050505050565b60008082156102e15760006102c68787866104b7565b8551602001519091506102d99082610c68565b9150506100a3565b6100a08686856103bb565b6000836001600160a01b031663bd02d0f561030785856104fe565b6040518263ffffffff1660e01b815260040161032591815260200190565b602060405180830381865afa158015610342573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190610c7f565b90505b9392505050565b6000610389838368327cb2734119d3b7a9601e1b610594565b90505b92915050565b6000610389838360006105a1565b6000836001600160a01b031663bd02d0f561030785856105f0565b6000806103d084604001518560600151610627565b905060006103e986866000015187604001518786610656565b9050600061040287876000015188606001518887610656565b905061040e8183610c98565b979650505050505050565b60008061042e84604001518560600151610627565b905080856001600160a01b031663bd02d0f561044e8760000151876106dc565b6040518263ffffffff1660e01b815260040161046c91815260200190565b602060405180830381865afa158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad9190610c7f565b6100a39190610cc1565b6000806104cc84604001518560600151610627565b905060006104e58686600001518760400151878661074a565b905060006104028787600001518860600151888761074a565b6000604051602001610540906020808252601c908201527b27a822a72fa4a72a22a922a9aa2fa922a9a2a92b22afa320a1aa27a960211b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b0385169082015282151560608201526080015b60405160208183030381529060405280519060200120905092915050565b6000610366848484610767565b6000836000036105b357506000610369565b81156105d9576105d28468327cb2734119d3b7a9601e1b856001610855565b9050610369565b6103668468327cb2734119d3b7a9601e1b85610767565b60006040516020016105409060208082526011908201527013505617d3d4115397d2539511549154d5607a1b604082015260600190565b6000816001600160a01b0316836001600160a01b03161461064957600161064c565b60025b60ff169392505050565b600081866001600160a01b031663bd02d0f56106738888886108a6565b6040518263ffffffff1660e01b815260040161069191815260200190565b602060405180830381865afa1580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d29190610c7f565b6100a09190610cc1565b600060405160200161070d906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038086169183019190915283166060820152608001610576565b600081866001600160a01b031663bd02d0f5610673888888610938565b60008080600019858709858702925082811083820303915050806000036107a15783828161079757610797610cab565b0492505050610369565b8084116107ec5760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b604482015260640160405180910390fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600080610863868686610767565b9050600183600281111561087957610879610ce3565b14801561089657506000848061089157610891610cab565b868809115b156100a3576100a0600182610c98565b60006040516020016108d9906020808252600d908201526c13d4115397d2539511549154d5609a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915284166060820152821515608082015260a0016040516020818303038152906040528051906020012090509392505050565b60006040516020016108d9906020808252601790820152764f50454e5f494e5445524553545f494e5f544f4b454e5360481b604082015260600190565b6001600160a01b038116811461098a57600080fd5b50565b60006080828403121561099f57600080fd5b604051608081016001600160401b03811182821017156109cf57634e487b7160e01b600052604160045260246000fd5b60405290508082356109e081610975565b815260208301356109f081610975565b60208201526040830135610a0381610975565b60408201526060830135610a1681610975565b6060919091015292915050565b801515811461098a57600080fd5b60008060008060006101008688031215610a4a57600080fd5b8535610a5581610975565b9450610a64876020880161098d565b935060a0860135610a7481610a23565b9497939650939460c0810135945060e0013592915050565b600060408284031215610a9e57600080fd5b604080519081016001600160401b0381118282101715610ace57634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b600060c08284031215610afa57600080fd5b604051606081016001600160401b0381118282101715610b2a57634e487b7160e01b600052604160045260246000fd5b604052905080610b3a8484610a8c565b8152610b498460408501610a8c565b6020820152610b5b8460808501610a8c565b60408201525092915050565b60008060008060006101a08688031215610b8057600080fd5b8535610b8b81610975565b9450610b9a876020880161098d565b9350610ba98760a08801610ae8565b9250610160860135610bba81610a23565b9150610180860135610bcb81610a23565b809150509295509295909350565b6000806000806101808587031215610bf057600080fd5b8435610bfb81610975565b9350610c0a866020870161098d565b9250610c198660a08701610ae8565b9150610160850135610c2a81610a23565b939692955090935050565b600060208284031215610c4757600080fd5b815161036981610a23565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761038c5761038c610c52565b600060208284031215610c9157600080fd5b5051919050565b8082018082111561038c5761038c610c52565b634e487b7160e01b600052601260045260246000fd5b600082610cde57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea26469706673582212207bbcb64b272600d3b3d40219cb296ac202ae8168e6c79b2c4ebd75860cd4700264736f6c63430008120033";

type MarketUtilsTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketUtilsTest__factory extends ContractFactory {
  constructor(...args: MarketUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketUtilsTest> {
    return super.deploy(overrides || {}) as Promise<MarketUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarketUtilsTest {
    return super.attach(address) as MarketUtilsTest;
  }
  override connect(signer: Signer): MarketUtilsTest__factory {
    return super.connect(signer) as MarketUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketUtilsTestInterface {
    return new utils.Interface(_abi) as MarketUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketUtilsTest {
    return new Contract(address, _abi, signerOrProvider) as MarketUtilsTest;
  }
}
