// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ShiftStoreUtilsTest,
  ShiftStoreUtilsTestInterface,
} from "../../../contracts/test/ShiftStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyShift",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct Shift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Shift.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Shift.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeShift",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct Shift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Shift.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Shift.Props",
        name: "shift",
        type: "tuple",
      },
    ],
    name: "setShift",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506106a38061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063bd246c9814610046578063c0dca6a41461005b578063ede7a6bd1461006e575b600080fd5b61005961005436600461036a565b61008c565b005b61005961006936600461049b565b6100fc565b61007661014b565b6040516100839190610562565b60405180910390f35b60405163def6852b60e01b815273__$17bbc74b36df540d4a9b171eb59c5012db$__9063def6852b906100c7908690869086906004016105db565b60006040518083038186803b1580156100df57600080fd5b505af41580156100f3573d6000803e3d6000fd5b50505050505050565b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$17bbc74b36df540d4a9b171eb59c5012db$__906374b6fe13906064016100c7565b610153610160565b61015b610160565b919050565b6040805161012081019091526000606082018181526080830182905260a0830182905260c0830182905260e08301829052610100830191909152819081526020016101da6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001606081525090565b6001600160a01b03811681146101fc57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610237576102376101ff565b60405290565b604051606081016001600160401b0381118282101715610237576102376101ff565b604051601f8201601f191681016001600160401b0381118282101715610287576102876101ff565b604052919050565b600060c082840312156102a157600080fd5b6102a9610215565b823581526020808401359082015260408084013590820152606080840135908201526080808401359082015260a0928301359281019290925250919050565b600082601f8301126102f957600080fd5b81356001600160401b03811115610312576103126101ff565b8060051b6103226020820161025f565b9182526020818501810192908101908684111561033e57600080fd5b6020860192505b83831015610360578235825260209283019290910190610345565b9695505050505050565b60008060006060848603121561037f57600080fd5b833561038a816101e7565b92506020840135915060408401356001600160401b038111156103ac57600080fd5b84018086036101a08112156103c057600080fd5b6103c861023d565b60c08212156103d657600080fd5b6103de610215565b915082356103eb816101e7565b825260208301356103fb816101e7565b6020830152604083013561040e816101e7565b60408301526060830135610421816101e7565b60608301526080830135610434816101e7565b608083015260a0830135610447816101e7565b60a083015281815261045c8860c0850161028f565b602082015261018083013591506001600160401b0382111561047d57600080fd5b610489888385016102e8565b60408201528093505050509250925092565b6000806000606084860312156104b057600080fd5b83356104bb816101e7565b92506020840135915060408401356104d2816101e7565b809150509250925092565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260608083015182169084015260808083015182169084015260a09182015116910152565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b6020815260006101c0820161057b6020840185516104dd565b602084015161058d60e0850182610528565b5060408401516101a084810152805191829052602001906000906101e08501905b808310156105d157835182526020820191506020840193506001830192506105ae565b5095945050505050565b60018060a01b038416815282602082015260606040820152600061020082016106086060840185516104dd565b602084015161061b610120850182610528565b5060408401516101a06101e0850152805191829052602001906000906102208501905b80831015610661578351825260208201915060208401935060018301925061063e565b5097965050505050505056fea2646970667358221220cf6ee0de86bf598affcf177449dc0825a9a91bd7a83744518b8ba2545d20de3f64736f6c634300081d0033";

type ShiftStoreUtilsTestConstructorParams =
  | [linkLibraryAddresses: ShiftStoreUtilsTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShiftStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ShiftStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: ShiftStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ShiftStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ShiftStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$17bbc74b36df540d4a9b171eb59c5012db\$__", "g"),
      linkLibraryAddresses[
        "contracts/shift/ShiftStoreUtils.sol:ShiftStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ShiftStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<ShiftStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ShiftStoreUtilsTest {
    return super.attach(address) as ShiftStoreUtilsTest;
  }
  override connect(signer: Signer): ShiftStoreUtilsTest__factory {
    return super.connect(signer) as ShiftStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShiftStoreUtilsTestInterface {
    return new utils.Interface(_abi) as ShiftStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShiftStoreUtilsTest {
    return new Contract(address, _abi, signerOrProvider) as ShiftStoreUtilsTest;
  }
}

export interface ShiftStoreUtilsTestLibraryAddresses {
  ["contracts/shift/ShiftStoreUtils.sol:ShiftStoreUtils"]: string;
}
