// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ShiftStoreUtilsTest,
  ShiftStoreUtilsTestInterface,
} from "../../../contracts/test/ShiftStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyShift",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct Shift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Shift.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Shift.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeShift",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct Shift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Shift.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Shift.Props",
        name: "shift",
        type: "tuple",
      },
    ],
    name: "setShift",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610680806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063bd246c9814610046578063c0dca6a41461005b578063ede7a6bd1461006e575b600080fd5b610059610054366004610351565b61008c565b005b61005961006936600461047f565b6100fc565b61007661014b565b6040516100839190610546565b60405180910390f35b60405163def6852b60e01b815273__$17bbc74b36df540d4a9b171eb59c5012db$__9063def6852b906100c7908690869086906004016105bb565b60006040518083038186803b1580156100df57600080fd5b505af41580156100f3573d6000803e3d6000fd5b50505050505050565b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$17bbc74b36df540d4a9b171eb59c5012db$__906374b6fe13906064016100c7565b610153610160565b61015b610160565b919050565b6040805161012081019091526000606082018181526080830182905260a0830182905260c0830182905260e08301829052610100830191909152819081526020016101da6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001606081525090565b6001600160a01b03811681146101fc57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610237576102376101ff565b60405290565b604051606081016001600160401b0381118282101715610237576102376101ff565b600060c0828403121561027157600080fd5b610279610215565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015292915050565b600082601f8301126102c857600080fd5b813560206001600160401b03808311156102e4576102e46101ff565b8260051b604051601f19603f83011681018181108482111715610309576103096101ff565b60405293845285810183019383810192508785111561032757600080fd5b83870191505b848210156103465781358352918301919083019061032d565b979650505050505050565b60008060006060848603121561036657600080fd5b8335610371816101e7565b92506020840135915060408401356001600160401b038082111561039457600080fd5b908501908187036101a08112156103aa57600080fd5b6103b261023d565b60c08212156103c057600080fd5b6103c8610215565b915083356103d5816101e7565b825260208401356103e5816101e7565b602083015260408401356103f8816101e7565b6040830152606084013561040b816101e7565b6060830152608084013561041e816101e7565b608083015260a0840135610431816101e7565b60a08301528181526104468960c0860161025f565b602082015261018084013591508282111561046057600080fd5b61046c898386016102b7565b6040820152809450505050509250925092565b60008060006060848603121561049457600080fd5b833561049f816101e7565b92506020840135915060408401356104b6816101e7565b809150509250925092565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260608083015182169084015260808083015182169084015260a09182015116910152565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b600060208083526101c0830161055f82850186516104c1565b8185015161057060e086018261050c565b5060408501516101a0858101528051918290528201906000906101e08601905b808310156105b05783518252928401926001929092019190840190610590565b509695505050505050565b60018060a01b03841681526000602084818401526060604084015261020083016105e96060850186516104c1565b818501516105fb61012086018261050c565b5060408501516101a06101e08601528051918290528201906000906102208601905b8083101561063d578351825292840192600192909201919084019061061d565b509897505050505050505056fea2646970667358221220db101d651cc06c1ba5ac52afd2f0b6360dbb3f464fafc4bb2b89882f485b683364736f6c63430008140033";

type ShiftStoreUtilsTestConstructorParams =
  | [linkLibraryAddresses: ShiftStoreUtilsTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShiftStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ShiftStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: ShiftStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ShiftStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ShiftStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$17bbc74b36df540d4a9b171eb59c5012db\$__", "g"),
      linkLibraryAddresses[
        "contracts/shift/ShiftStoreUtils.sol:ShiftStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ShiftStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<ShiftStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ShiftStoreUtilsTest {
    return super.attach(address) as ShiftStoreUtilsTest;
  }
  override connect(signer: Signer): ShiftStoreUtilsTest__factory {
    return super.connect(signer) as ShiftStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShiftStoreUtilsTestInterface {
    return new utils.Interface(_abi) as ShiftStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShiftStoreUtilsTest {
    return new Contract(address, _abi, signerOrProvider) as ShiftStoreUtilsTest;
  }
}

export interface ShiftStoreUtilsTestLibraryAddresses {
  ["contracts/shift/ShiftStoreUtils.sol:ShiftStoreUtils"]: string;
}
