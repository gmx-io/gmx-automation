// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WithdrawalStoreUtilsTest,
  WithdrawalStoreUtilsTestInterface,
} from "../../../contracts/test/WithdrawalStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "setWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506108f7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063ab4f9d7f14610046578063ab5e8df61461005b578063fb909db31461006e575b600080fd5b610059610054366004610225565b61008c565b005b61005961006936600461049d565b61010c565b610076610147565b60405161008391906106dc565b60405180910390f35b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__906374b6fe13906064015b60006040518083038186803b1580156100ef57600080fd5b505af4158015610103573d6000803e3d6000fd5b50505050505050565b604051631a9d46f160e21b815273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__90636a751bc4906100d7908690869086906004016107c5565b61014f61015c565b61015761015c565b919050565b60408051610160810190915260006080820181815260a0830182905260c0830182905260e0830182905261010083019190915260606101208301819052610140830152819081526020016101e66040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516020808201835260008252830152606091015290565b6001600160a01b038116811461021757600080fd5b50565b803561015781610202565b60008060006060848603121561023a57600080fd5b833561024581610202565b925060208401359150604084013561025c81610202565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b038111828210171561029f5761029f610267565b60405290565b604051608081016001600160401b038111828210171561029f5761029f610267565b604051601f8201601f191681016001600160401b03811182821017156102ef576102ef610267565b604052919050565b60006001600160401b0382111561031057610310610267565b5060051b60200190565b600082601f83011261032b57600080fd5b8135602061034061033b836102f7565b6102c7565b82815260059290921b8401810191818101908684111561035f57600080fd5b8286015b8481101561038357803561037681610202565b8352918301918301610363565b509695505050505050565b600060e082840312156103a057600080fd5b6103a861027d565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015292915050565b60006020828403121561040257600080fd5b604051602081016001600160401b038111828210171561042457610424610267565b6040529050808235801515811461043a57600080fd5b905292915050565b600082601f83011261045357600080fd5b8135602061046361033b836102f7565b82815260059290921b8401810191818101908684111561048257600080fd5b8286015b848110156103835780358352918301918301610486565b6000806000606084860312156104b257600080fd5b83356104bd81610202565b92506020840135915060408401356001600160401b03808211156104e057600080fd5b9085019061014082880312156104f557600080fd5b6104fd6102a5565b82358281111561050c57600080fd5b830160e0818a03121561051e57600080fd5b61052661027d565b61052f8261021a565b815261053d6020830161021a565b602082015261054e6040830161021a565b604082015261055f6060830161021a565b60608201526105706080830161021a565b608082015260a08201358481111561058757600080fd5b6105938b82850161031a565b60a08301525060c0820135848111156105ab57600080fd5b6105b78b82850161031a565b60c0830152508252506105cd886020850161038e565b60208201526105e08861010085016103f0565b6040820152610120830135828111156105f857600080fd5b61060489828601610442565b6060830152508093505050509250925092565b6001600160a01b03169052565b600081518084526020808501945080840160005b8381101561065d5781516001600160a01b031687529582019590820190600101610638565b509495945050505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b600081518084526020808501945080840160005b8381101561065d578151875295820195908201906001016106c0565b602081526000825161014080602085015260018060a01b038083511661016086015280602084015116610180860152806040840151166101a086015250606082015161072c6101c0860182610617565b5060808201516107406101e0860182610617565b5060a082015160e061020086015261075c610240860182610624565b905060c0830151925061015f198582030161022086015261077d8184610624565b92505060208501516107926040860182610668565b5060408501515115156101208501526060850151601f1985840301828601526107bb83826106ac565b9695505050505050565b600060018060a01b0380861683528460208401526060604084015283516101406060850152818151166101a0850152816020820151166101c0850152816040820151166101e085015260608101519150610823610200850183610617565b60808101519150610838610220850183610617565b60a0810151915060e0610240850152610855610280850183610624565b915060c0810151905061019f19848303016102608501526108768282610624565b915050602084015161088b6080850182610668565b5060408401515115156101608401526060840151605f19848303016101808501526108b682826106ac565b97965050505050505056fea26469706673582212205c0a420d89f3ad6bb08d5c266c99aa48fd29e71b9786b714c726366f512566c064736f6c63430008140033";

type WithdrawalStoreUtilsTestConstructorParams =
  | [
      linkLibraryAddresses: WithdrawalStoreUtilsTestLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WithdrawalStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: WithdrawalStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WithdrawalStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WithdrawalStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$3dc24d71d6ebafc0c4ce8ac2f69cd1548a\$__", "g"),
      linkLibraryAddresses[
        "contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawalStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<WithdrawalStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawalStoreUtilsTest {
    return super.attach(address) as WithdrawalStoreUtilsTest;
  }
  override connect(signer: Signer): WithdrawalStoreUtilsTest__factory {
    return super.connect(signer) as WithdrawalStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalStoreUtilsTestInterface {
    return new utils.Interface(_abi) as WithdrawalStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawalStoreUtilsTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WithdrawalStoreUtilsTest;
  }
}

export interface WithdrawalStoreUtilsTestLibraryAddresses {
  ["contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"]: string;
}
