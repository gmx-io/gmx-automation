// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WithdrawalStoreUtilsTest,
  WithdrawalStoreUtilsTestInterface,
} from "../../../contracts/test/WithdrawalStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "setWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061091b8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063ab4f9d7f14610046578063ab5e8df61461005b578063fb909db31461006e575b600080fd5b610059610054366004610225565b61008c565b005b6100596100693660046104a3565b61010c565b610076610147565b60405161008391906106fd565b60405180910390f35b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__906374b6fe13906064015b60006040518083038186803b1580156100ef57600080fd5b505af4158015610103573d6000803e3d6000fd5b50505050505050565b604051631a9d46f160e21b815273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__90636a751bc4906100d7908690869086906004016107e9565b61014f61015c565b61015761015c565b919050565b60408051610160810190915260006080820181815260a0830182905260c0830182905260e0830182905261010083019190915260606101208301819052610140830152819081526020016101e66040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516020808201835260008252830152606091015290565b6001600160a01b038116811461021757600080fd5b50565b803561015781610202565b60008060006060848603121561023a57600080fd5b833561024581610202565b925060208401359150604084013561025c81610202565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b038111828210171561029f5761029f610267565b60405290565b604051608081016001600160401b038111828210171561029f5761029f610267565b604051601f8201601f191681016001600160401b03811182821017156102ef576102ef610267565b604052919050565b60006001600160401b0382111561031057610310610267565b5060051b60200190565b600082601f83011261032b57600080fd5b813561033e610339826102f7565b6102c7565b8082825260208201915060208360051b86010192508583111561036057600080fd5b602085015b8381101561038657803561037881610202565b835260209283019201610365565b5095945050505050565b600060e082840312156103a257600080fd5b6103aa61027d565b823581526020808401359082015260408084013590820152606080840135908201526080808401359082015260a0808401359082015260c0928301359281019290925250919050565b60006020828403121561040557600080fd5b604051602081016001600160401b038111828210171561042757610427610267565b6040529050808235801515811461043d57600080fd5b905292915050565b600082601f83011261045657600080fd5b8135610464610339826102f7565b8082825260208201915060208360051b86010192508583111561048657600080fd5b602085015b8381101561038657803583526020928301920161048b565b6000806000606084860312156104b857600080fd5b83356104c381610202565b92506020840135915060408401356001600160401b038111156104e557600080fd5b840161014081870312156104f857600080fd5b6105006102a5565b81356001600160401b0381111561051657600080fd5b820160e0818903121561052857600080fd5b61053061027d565b6105398261021a565b81526105476020830161021a565b60208201526105586040830161021a565b60408201526105696060830161021a565b606082015261057a6080830161021a565b608082015260a08201356001600160401b0381111561059857600080fd5b6105a48a82850161031a565b60a08301525060c08201356001600160401b038111156105c357600080fd5b6105cf8a82850161031a565b60c0830152508252506105e58760208401610390565b60208201526105f88761010084016103f3565b60408201526101208201356001600160401b0381111561061757600080fd5b61062388828501610445565b60608301525080925050509250925092565b6001600160a01b03169052565b600081518084526020840193506020830160005b8281101561067d5781516001600160a01b0316865260209586019590910190600101610656565b5093949350505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b600081518084526020840193506020830160005b8281101561067d5781518652602095860195909101906001016106df565b602080825282516101408383015280516001600160a01b0390811661016085015291810151821661018084015260408101519091166101a083015260608101516000919061074f6101c0850182610635565b5060808101516107636101e0850182610635565b5060a081015160e061020085015261077f610240850182610642565b905060c0820151915061015f19848203016102208501526107a08183610642565b91505060208401516107b56040850182610687565b5060408401515115156101208401526060840151601f19848303016101408501526107e082826106cb565b95945050505050565b6001600160a01b038481168252602080830185905260606040808501829052855161014083870152805185166101a08701529283015184166101c08601528201519092166101e08401529081015160009190610849610200850182610635565b50608081015161085d610220850182610635565b5060a081015160e0610240850152610879610280850182610642565b905060c0820151915061019f198482030161026085015261089a8183610642565b91505060208401516108af6080850182610687565b5060408401515115156101608401526060840151605f19848303016101808501526108da82826106cb565b97965050505050505056fea26469706673582212202e2475259be680e3975af685d2ef882056f4d8a86010683a77df07f84445a35264736f6c634300081d0033";

type WithdrawalStoreUtilsTestConstructorParams =
  | [
      linkLibraryAddresses: WithdrawalStoreUtilsTestLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WithdrawalStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: WithdrawalStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WithdrawalStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WithdrawalStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$3dc24d71d6ebafc0c4ce8ac2f69cd1548a\$__", "g"),
      linkLibraryAddresses[
        "contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawalStoreUtilsTest> {
    return super.deploy(overrides || {}) as Promise<WithdrawalStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawalStoreUtilsTest {
    return super.attach(address) as WithdrawalStoreUtilsTest;
  }
  override connect(signer: Signer): WithdrawalStoreUtilsTest__factory {
    return super.connect(signer) as WithdrawalStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalStoreUtilsTestInterface {
    return new utils.Interface(_abi) as WithdrawalStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawalStoreUtilsTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WithdrawalStoreUtilsTest;
  }
}

export interface WithdrawalStoreUtilsTestLibraryAddresses {
  ["contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"]: string;
}
