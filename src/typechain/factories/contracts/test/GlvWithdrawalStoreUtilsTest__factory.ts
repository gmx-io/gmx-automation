// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GlvWithdrawalStoreUtilsTest,
  GlvWithdrawalStoreUtilsTestInterface,
} from "../../../contracts/test/GlvWithdrawalStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyGlvWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "glv",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct GlvWithdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "glvTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct GlvWithdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct GlvWithdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct GlvWithdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeGlvWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "glv",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct GlvWithdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "glvTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct GlvWithdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct GlvWithdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct GlvWithdrawal.Props",
        name: "glvWithdrawal",
        type: "tuple",
      },
    ],
    name: "setGlvWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061099b8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632d0f163414610046578063bea853aa1461005b578063e65a4c8c1461006e575b600080fd5b61005961005436600461048b565b61008c565b005b61005961006936600461062f565b6100fc565b61007661014b565b6040516100839190610739565b60405180910390f35b604051633181dced60e21b815273__$275108e79aa89bc0be7b6a95f0c90e4c42$__9063c60773b4906100c790869086908690600401610845565b60006040518083038186803b1580156100df57600080fd5b505af41580156100f3573d6000803e3d6000fd5b50505050505050565b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$275108e79aa89bc0be7b6a95f0c90e4c42$__906374b6fe13906064016100c7565b610153610160565b61015b610160565b919050565b60408051610180810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830182905261012083019190915260606101408301819052610160830152819081526020016101f26040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516020808201835260008252830152606091015290565b6001600160a01b038116811461022357600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561025e5761025e610226565b60405290565b60405161010081016001600160401b038111828210171561025e5761025e610226565b604051601f8201601f191681016001600160401b03811182821017156102af576102af610226565b604052919050565b803561015b8161020e565b60006001600160401b038211156102db576102db610226565b5060051b60200190565b600082601f8301126102f657600080fd5b8135610309610304826102c2565b610287565b8082825260208201915060208360051b86010192508583111561032b57600080fd5b602085015b838110156103515780356103438161020e565b835260209283019201610330565b5095945050505050565b600060e0828403121561036d57600080fd5b60405160e081016001600160401b038111828210171561038f5761038f610226565b604090815283358252602080850135908301528381013590820152606080840135908201526080808401359082015260a0808401359082015260c0928301359281019290925250919050565b6000602082840312156103ed57600080fd5b604051602081016001600160401b038111828210171561040f5761040f610226565b6040529050808235801515811461042557600080fd5b905292915050565b600082601f83011261043e57600080fd5b813561044c610304826102c2565b8082825260208201915060208360051b86010192508583111561046e57600080fd5b602085015b83811015610351578035835260209283019201610473565b6000806000606084860312156104a057600080fd5b83356104ab8161020e565b92506020840135915060408401356001600160401b038111156104cd57600080fd5b840161014081870312156104e057600080fd5b6104e861023c565b81356001600160401b038111156104fe57600080fd5b8201610100818903121561051157600080fd5b610519610264565b610522826102b7565b8152610530602083016102b7565b6020820152610541604083016102b7565b6040820152610552606083016102b7565b6060820152610563608083016102b7565b608082015261057460a083016102b7565b60a082015260c08201356001600160401b0381111561059257600080fd5b61059e8a8285016102e5565b60c08301525060e08201356001600160401b038111156105bd57600080fd5b6105c98a8285016102e5565b60e0830152508252506105df876020840161035b565b60208201526105f28761010084016103db565b60408201526101208201356001600160401b0381111561061157600080fd5b61061d8882850161042d565b60608301525080925050509250925092565b60008060006060848603121561064457600080fd5b833561064f8161020e565b92506020840135915060408401356106668161020e565b809150509250925092565b6001600160a01b03169052565b600081518084526020840193506020830160005b828110156106b95781516001600160a01b0316865260209586019590910190600101610692565b5093949350505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b600081518084526020840193506020830160005b828110156106b957815186526020958601959091019060010161071b565b602080825282516101408383015280516001600160a01b0316610160840152908101516000919061076e610180850182610671565b5060408101516107826101a0850182610671565b5060608101516107966101c0850182610671565b5060808101516107aa6101e0850182610671565b5060a08101516107be610200850182610671565b5060c08101516101006102208501526107db61026085018261067e565b905060e0820151915061015f19848203016102408501526107fc818361067e565b915050602084015161081160408501826106c3565b5060408401515115156101208401526060840151601f198483030161014085015261083c8282610707565b95945050505050565b60018060a01b03841681528260208201526060604082015260008251610140606084015260018060a01b038151166101a0840152602081015161088c6101c0850182610671565b5060408101516108a06101e0850182610671565b5060608101516108b4610200850182610671565b5060808101516108c8610220850182610671565b5060a08101516108dc610240850182610671565b5060c08101516101006102608501526108f96102a085018261067e565b905060e0820151915061019f198482030161028085015261091a818361067e565b915050602084015161092f60808501826106c3565b5060408401515115156101608401526060840151605f198483030161018085015261095a8282610707565b97965050505050505056fea26469706673582212200956d6708d2853cd5bb97ea3eaa0ad07e3eac95c24bd30492b97785ac656c12964736f6c634300081d0033";

type GlvWithdrawalStoreUtilsTestConstructorParams =
  | [
      linkLibraryAddresses: GlvWithdrawalStoreUtilsTestLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlvWithdrawalStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GlvWithdrawalStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: GlvWithdrawalStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GlvWithdrawalStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: GlvWithdrawalStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$275108e79aa89bc0be7b6a95f0c90e4c42\$__", "g"),
      linkLibraryAddresses[
        "contracts/glv/glvWithdrawal/GlvWithdrawalStoreUtils.sol:GlvWithdrawalStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GlvWithdrawalStoreUtilsTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<GlvWithdrawalStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GlvWithdrawalStoreUtilsTest {
    return super.attach(address) as GlvWithdrawalStoreUtilsTest;
  }
  override connect(signer: Signer): GlvWithdrawalStoreUtilsTest__factory {
    return super.connect(signer) as GlvWithdrawalStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlvWithdrawalStoreUtilsTestInterface {
    return new utils.Interface(_abi) as GlvWithdrawalStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlvWithdrawalStoreUtilsTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GlvWithdrawalStoreUtilsTest;
  }
}

export interface GlvWithdrawalStoreUtilsTestLibraryAddresses {
  ["contracts/glv/glvWithdrawal/GlvWithdrawalStoreUtils.sol:GlvWithdrawalStoreUtils"]: string;
}
