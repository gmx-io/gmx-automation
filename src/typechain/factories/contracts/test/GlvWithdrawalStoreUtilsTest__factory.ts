// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GlvWithdrawalStoreUtilsTest,
  GlvWithdrawalStoreUtilsTestInterface,
} from "../../../contracts/test/GlvWithdrawalStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyGlvWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "glv",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct GlvWithdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "glvTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct GlvWithdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct GlvWithdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct GlvWithdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeGlvWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "glv",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct GlvWithdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "glvTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct GlvWithdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct GlvWithdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct GlvWithdrawal.Props",
        name: "glvWithdrawal",
        type: "tuple",
      },
    ],
    name: "setGlvWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061097e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632d0f163414610046578063bea853aa1461005b578063e65a4c8c1461006e575b600080fd5b610059610054366004610489565b61008c565b005b610059610069366004610615565b6100fc565b61007661014b565b604051610083919061071c565b60405180910390f35b604051633181dced60e21b815273__$275108e79aa89bc0be7b6a95f0c90e4c42$__9063c60773b4906100c790869086908690600401610826565b60006040518083038186803b1580156100df57600080fd5b505af41580156100f3573d6000803e3d6000fd5b50505050505050565b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$275108e79aa89bc0be7b6a95f0c90e4c42$__906374b6fe13906064016100c7565b610153610160565b61015b610160565b919050565b60408051610180810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830182905261012083019190915260606101408301819052610160830152819081526020016101f26040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516020808201835260008252830152606091015290565b6001600160a01b038116811461022357600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561025e5761025e610226565b60405290565b60405161010081016001600160401b038111828210171561025e5761025e610226565b604051601f8201601f191681016001600160401b03811182821017156102af576102af610226565b604052919050565b803561015b8161020e565b60006001600160401b038211156102db576102db610226565b5060051b60200190565b600082601f8301126102f657600080fd5b8135602061030b610306836102c2565b610287565b82815260059290921b8401810191818101908684111561032a57600080fd5b8286015b8481101561034e5780356103418161020e565b835291830191830161032e565b509695505050505050565b600060e0828403121561036b57600080fd5b60405160e081016001600160401b038111828210171561038d5761038d610226565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201525092915050565b6000602082840312156103ee57600080fd5b604051602081016001600160401b038111828210171561041057610410610226565b6040529050808235801515811461042657600080fd5b905292915050565b600082601f83011261043f57600080fd5b8135602061044f610306836102c2565b82815260059290921b8401810191818101908684111561046e57600080fd5b8286015b8481101561034e5780358352918301918301610472565b60008060006060848603121561049e57600080fd5b83356104a98161020e565b92506020840135915060408401356001600160401b03808211156104cc57600080fd5b9085019061014082880312156104e157600080fd5b6104e961023c565b8235828111156104f857600080fd5b8301610100818a0381131561050c57600080fd5b610514610264565b61051d836102b7565b815261052b602084016102b7565b602082015261053c604084016102b7565b604082015261054d606084016102b7565b606082015261055e608084016102b7565b608082015261056f60a084016102b7565b60a082015260c08301358581111561058657600080fd5b6105928c8286016102e5565b60c08301525060e0830135858111156105aa57600080fd5b6105b68c8286016102e5565b60e08301525083526105cb8a60208701610359565b60208401526105dc8a8287016103dc565b60408401525050610120830135828111156105f657600080fd5b6106028982860161042e565b6060830152508093505050509250925092565b60008060006060848603121561062a57600080fd5b83356106358161020e565b925060208401359150604084013561064c8161020e565b809150509250925092565b6001600160a01b03169052565b600081518084526020808501945080840160005b8381101561069d5781516001600160a01b031687529582019590820190600101610678565b509495945050505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b600081518084526020808501945080840160005b8381101561069d57815187529582019590820190600101610700565b602081526000825161014080602085015260018060a01b038251166101608501526020820151610750610180860182610657565b5060408201516107646101a0860182610657565b5060608201516107786101c0860182610657565b50608082015161078c6101e0860182610657565b5060a08201516107a0610200860182610657565b5060c08201516101006102208601526107bd610260860182610664565b905060e0830151925061015f19858203016102408601526107de8184610664565b92505060208501516107f360408601826106a8565b5060408501515115156101208501526060850151601f19858403018286015261081c83826106ec565b9695505050505050565b600060018060a01b0380861683528460208401526060604084015283516101406060850152818151166101a08501526020810151915061086a6101c0850183610657565b6040810151915061087f6101e0850183610657565b60608101519150610894610200850183610657565b608081015191506108a9610220850183610657565b60a081015191506108be610240850183610657565b60c081015191506101006102608501526108dc6102a0850183610664565b915060e0810151905061019f19848303016102808501526108fd8282610664565b915050602084015161091260808501826106a8565b5060408401515115156101608401526060840151605f198483030161018085015261093d82826106ec565b97965050505050505056fea2646970667358221220e65942b0bf0fa11e5a9e7e7f3252dc7f52808acf8635f47f536834a26a002e6664736f6c63430008140033";

type GlvWithdrawalStoreUtilsTestConstructorParams =
  | [
      linkLibraryAddresses: GlvWithdrawalStoreUtilsTestLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlvWithdrawalStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GlvWithdrawalStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: GlvWithdrawalStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GlvWithdrawalStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: GlvWithdrawalStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$275108e79aa89bc0be7b6a95f0c90e4c42\$__", "g"),
      linkLibraryAddresses[
        "contracts/glv/glvWithdrawal/GlvWithdrawalStoreUtils.sol:GlvWithdrawalStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GlvWithdrawalStoreUtilsTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<GlvWithdrawalStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GlvWithdrawalStoreUtilsTest {
    return super.attach(address) as GlvWithdrawalStoreUtilsTest;
  }
  override connect(signer: Signer): GlvWithdrawalStoreUtilsTest__factory {
    return super.connect(signer) as GlvWithdrawalStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlvWithdrawalStoreUtilsTestInterface {
    return new utils.Interface(_abi) as GlvWithdrawalStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlvWithdrawalStoreUtilsTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GlvWithdrawalStoreUtilsTest;
  }
}

export interface GlvWithdrawalStoreUtilsTestLibraryAddresses {
  ["contracts/glv/glvWithdrawal/GlvWithdrawalStoreUtils.sol:GlvWithdrawalStoreUtils"]: string;
}
