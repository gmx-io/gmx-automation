/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GlvWithdrawalStoreUtilsTest,
  GlvWithdrawalStoreUtilsTestInterface,
} from "../../../contracts/test/GlvWithdrawalStoreUtilsTest";

const _abi = [
  {
    inputs: [],
    name: "getEmptyGlvWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "glv",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct GlvWithdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "glvTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct GlvWithdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct GlvWithdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct GlvWithdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeGlvWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "glv",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct GlvWithdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "glvTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct GlvWithdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct GlvWithdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct GlvWithdrawal.Props",
        name: "glvWithdrawal",
        type: "tuple",
      },
    ],
    name: "setGlvWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061084f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063bea853aa14610046578063d48c38751461005b578063e65a4c8c1461006e575b600080fd5b610059610054366004610220565b61008c565b005b610059610069366004610431565b61010c565b610076610147565b6040516100839190610626565b60405180910390f35b6040516374b6fe1360e01b81526001600160a01b038085166004830152602482018490528216604482015273__$275108e79aa89bc0be7b6a95f0c90e4c42$__906374b6fe13906064015b60006040518083038186803b1580156100ef57600080fd5b505af4158015610103573d6000803e3d6000fd5b50505050505050565b604051633181dced60e21b815273__$275108e79aa89bc0be7b6a95f0c90e4c42$__9063c60773b4906100d790869086908690600401610713565b61014f61015c565b61015761015c565b919050565b604080516101608101909152600060608083018281526080840183905260a0840183905260c0840183905260e084018390526101008401929092526101208301819052610140830152819081526020016101e56040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160208181019092526000815291015290565b6001600160a01b038116811461021257600080fd5b50565b8035610157816101fd565b60008060006060848603121561023557600080fd5b8335610240816101fd565b9250602084013591506040840135610257816101fd565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561029a5761029a610262565b60405290565b60405161010081016001600160401b038111828210171561029a5761029a610262565b600082601f8301126102d457600080fd5b813560206001600160401b03808311156102f0576102f0610262565b8260051b604051601f19603f8301168101818110848211171561031557610315610262565b60405293845285810183019383810192508785111561033357600080fd5b83870191505b8482101561035b57813561034c816101fd565b83529183019190830190610339565b979650505050505050565b600060c0828403121561037857600080fd5b60405160c081016001600160401b038111828210171561039a5761039a610262565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201525092915050565b6000602082840312156103f157600080fd5b604051602081016001600160401b038111828210171561041357610413610262565b6040529050808235801515811461042957600080fd5b905292915050565b60008060006060848603121561044657600080fd5b8335610451816101fd565b92506020840135915060408401356001600160401b038082111561047457600080fd5b818601915061010080838903121561048b57600080fd5b610493610278565b8335838111156104a257600080fd5b8401808a038313156104b357600080fd5b6104bb6102a0565b92506104c681610215565b83526104d460208201610215565b60208401526104e560408201610215565b60408401526104f660608201610215565b606084015261050760808201610215565b608084015261051860a08201610215565b60a084015260c08101358481111561052f57600080fd5b61053b8b8284016102c3565b60c08501525060e08101358481111561055357600080fd5b61055f8b8284016102c3565b60e085015250508181526105768960208601610366565b60208201526105888960e086016103df565b6040820152809450505050509250925092565b6001600160a01b03169052565b600081518084526020808501945080840160005b838110156105e15781516001600160a01b0316875295820195908201906001016105bc565b509495945050505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b602081526000825161010080602085015260018060a01b03825116610120850152602082015161065a61014086018261059b565b50604082015161066e61016086018261059b565b50606082015161068261018086018261059b565b5060808201516106966101a086018261059b565b5060a08201516106aa6101c086018261059b565b5060c0820151816101e08601526106c56102208601826105a8565b905060e0830151925061011f19858203016102008601526106e681846105a8565b92505060208501516106fb60408601826105ec565b50604085015180511515858301525090949350505050565b600060018060a01b038086168352846020840152606060408401528351610100806060860152828251166101608601526020820151925061075861018086018461059b565b6040820151925061076d6101a086018461059b565b606082015192506107826101c086018461059b565b608082015192506107976101e086018461059b565b60a082015192506107ac61020086018461059b565b60c0820151925080610220860152506107c96102608501836105a8565b915060e0810151905061015f19848303016102408501526107ea82826105a8565b91505060208401516107ff60808501826105ec565b50604084015180511515610140850152509594505050505056fea26469706673582212200b0378761174cae9c4311169a3e17c1b79dc055d99b5f7a998f4a24cca67f35464736f6c63430008120033";

type GlvWithdrawalStoreUtilsTestConstructorParams =
  | [
      linkLibraryAddresses: GlvWithdrawalStoreUtilsTestLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlvWithdrawalStoreUtilsTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class GlvWithdrawalStoreUtilsTest__factory extends ContractFactory {
  constructor(...args: GlvWithdrawalStoreUtilsTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        GlvWithdrawalStoreUtilsTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: GlvWithdrawalStoreUtilsTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$275108e79aa89bc0be7b6a95f0c90e4c42\\$__", "g"),
      linkLibraryAddresses[
        "contracts/glv/glvWithdrawal/GlvWithdrawalStoreUtils.sol:GlvWithdrawalStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GlvWithdrawalStoreUtilsTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<GlvWithdrawalStoreUtilsTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GlvWithdrawalStoreUtilsTest {
    return super.attach(address) as GlvWithdrawalStoreUtilsTest;
  }
  override connect(signer: Signer): GlvWithdrawalStoreUtilsTest__factory {
    return super.connect(signer) as GlvWithdrawalStoreUtilsTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlvWithdrawalStoreUtilsTestInterface {
    return new utils.Interface(_abi) as GlvWithdrawalStoreUtilsTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlvWithdrawalStoreUtilsTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GlvWithdrawalStoreUtilsTest;
  }
}

export interface GlvWithdrawalStoreUtilsTestLibraryAddresses {
  ["contracts/glv/glvWithdrawal/GlvWithdrawalStoreUtils.sol:GlvWithdrawalStoreUtils"]: string;
}
