// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DecreasePositionSwapUtils,
  DecreasePositionSwapUtilsInterface,
} from "../../../contracts/position/DecreasePositionSwapUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedTokenOut",
        type: "address",
      },
    ],
    name: "InvalidOutputToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reasonBytes",
        type: "bytes",
      },
    ],
    name: "SwapReverted",
    type: "event",
  },
] as const;

const _bytecode =
  "";

type DecreasePositionSwapUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DecreasePositionSwapUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DecreasePositionSwapUtils__factory extends ContractFactory {
  constructor(...args: DecreasePositionSwapUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DecreasePositionSwapUtils> {
    return super.deploy(overrides || {}) as Promise<DecreasePositionSwapUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DecreasePositionSwapUtils {
    return super.attach(address) as DecreasePositionSwapUtils;
  }
  override connect(signer: Signer): DecreasePositionSwapUtils__factory {
    return super.connect(signer) as DecreasePositionSwapUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DecreasePositionSwapUtilsInterface {
    return new utils.Interface(_abi) as DecreasePositionSwapUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DecreasePositionSwapUtils {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DecreasePositionSwapUtils;
  }
}
