/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PositionUtils,
  PositionUtilsInterface,
} from "../../../contracts/position/PositionUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptySizeDeltaInTokens",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "InvalidCollateralTokenForMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sizeInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sizeInTokens",
        type: "uint256",
      },
    ],
    name: "InvalidPositionSizeValues",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "int256",
        name: "remainingCollateralUsd",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "minCollateralUsd",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "minCollateralUsdForLeverage",
        type: "int256",
      },
    ],
    name: "LiquidatablePosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPositionSizeUsd",
        type: "uint256",
      },
    ],
    name: "MinPositionSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "executionPrice",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "priceImpactUsd",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
    ],
    name: "NegativeExecutionPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "acceptablePrice",
        type: "uint256",
      },
    ],
    name: "OrderNotFulfillableAtAcceptablePrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "priceImpactUsd",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
    ],
    name: "PriceImpactLargerThanOrderSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "UnableToGetCachedTokenPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionBorrowingFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumulativeBorrowingFactor",
        type: "uint256",
      },
    ],
    name: "UnexpectedBorrowingFactor",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "usdDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "longOpenInterest",
        type: "uint256",
      },
    ],
    name: "UsdDeltaExceedsLongOpenInterest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "usdDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "shortOpenInterest",
        type: "uint256",
      },
    ],
    name: "UsdDeltaExceedsShortOpenInterest",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "contract DataStore",
                name: "dataStore",
                type: "DataStore",
              },
              {
                internalType: "contract EventEmitter",
                name: "eventEmitter",
                type: "EventEmitter",
              },
              {
                internalType: "contract OrderVault",
                name: "orderVault",
                type: "OrderVault",
              },
              {
                internalType: "contract Oracle",
                name: "oracle",
                type: "Oracle",
              },
              {
                internalType: "contract SwapHandler",
                name: "swapHandler",
                type: "SwapHandler",
              },
              {
                internalType: "contract IReferralStorage",
                name: "referralStorage",
                type: "IReferralStorage",
              },
            ],
            internalType: "struct BaseOrderUtils.ExecuteOrderParamsContracts",
            name: "contracts",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType: "struct Order.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum Order.OrderType",
                    name: "orderType",
                    type: "Order.OrderType",
                  },
                  {
                    internalType: "enum Order.DecreasePositionSwapType",
                    name: "decreasePositionSwapType",
                    type: "Order.DecreasePositionSwapType",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "updatedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Order.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "shouldUnwrapNativeToken",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isFrozen",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "autoCancel",
                    type: "bool",
                  },
                ],
                internalType: "struct Order.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Order.Props",
            name: "order",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "orderKey",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "collateralToken",
                    type: "address",
                  },
                ],
                internalType: "struct Position.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeInUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeInTokens",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Position.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                ],
                internalType: "struct Position.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Position.Props",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "positionKey",
            type: "bytes32",
          },
          {
            internalType: "enum Order.SecondaryOrderType",
            name: "secondaryOrderType",
            type: "Order.SecondaryOrderType",
          },
        ],
        internalType: "struct PositionUtils.UpdatePositionParams",
        name: "params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
    ],
    name: "getExecutionPriceForDecrease",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "contract DataStore",
                name: "dataStore",
                type: "DataStore",
              },
              {
                internalType: "contract EventEmitter",
                name: "eventEmitter",
                type: "EventEmitter",
              },
              {
                internalType: "contract OrderVault",
                name: "orderVault",
                type: "OrderVault",
              },
              {
                internalType: "contract Oracle",
                name: "oracle",
                type: "Oracle",
              },
              {
                internalType: "contract SwapHandler",
                name: "swapHandler",
                type: "SwapHandler",
              },
              {
                internalType: "contract IReferralStorage",
                name: "referralStorage",
                type: "IReferralStorage",
              },
            ],
            internalType: "struct BaseOrderUtils.ExecuteOrderParamsContracts",
            name: "contracts",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType: "struct Order.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum Order.OrderType",
                    name: "orderType",
                    type: "Order.OrderType",
                  },
                  {
                    internalType: "enum Order.DecreasePositionSwapType",
                    name: "decreasePositionSwapType",
                    type: "Order.DecreasePositionSwapType",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "updatedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Order.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "shouldUnwrapNativeToken",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isFrozen",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "autoCancel",
                    type: "bool",
                  },
                ],
                internalType: "struct Order.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Order.Props",
            name: "order",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "orderKey",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "collateralToken",
                    type: "address",
                  },
                ],
                internalType: "struct Position.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeInUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeInTokens",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Position.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                ],
                internalType: "struct Position.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Position.Props",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "positionKey",
            type: "bytes32",
          },
          {
            internalType: "enum Order.SecondaryOrderType",
            name: "secondaryOrderType",
            type: "Order.SecondaryOrderType",
          },
        ],
        internalType: "struct PositionUtils.UpdatePositionParams",
        name: "params",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
    ],
    name: "getExecutionPriceForIncrease",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Position.Props",
        name: "position",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
    ],
    name: "getPositionPnlUsd",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "IReferralStorage",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Position.Props",
        name: "position",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "shouldValidateMinCollateralUsd",
        type: "bool",
      },
    ],
    name: "isPositionLiquidatable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "remainingCollateralUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minCollateralUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minCollateralUsdForLeverage",
            type: "int256",
          },
        ],
        internalType: "struct PositionUtils.IsPositionLiquidatableInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "IReferralStorage",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Position.Props",
        name: "position",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "shouldValidateMinPositionSize",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "shouldValidateMinCollateralUsd",
        type: "bool",
      },
    ],
    name: "validatePosition",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "positionSizeInUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionCollateralAmount",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "realizedPnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "openInterestDelta",
            type: "int256",
          },
        ],
        internalType:
          "struct PositionUtils.WillPositionCollateralBeSufficientValues",
        name: "values",
        type: "tuple",
      },
    ],
    name: "willPositionCollateralBeSufficient",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6157e46200003b600b82828239805160001a60731461002e57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c8063358daa891461007c5780637396d38c146100b457806381db61b8146100d6578063d7e3321114610104578063dac6485714610117578063e22de79314610141578063f8b5633414610154575b600080fd5b61008f61008a366004614fd7565b610176565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b8180156100c057600080fd5b506100d46100cf3660046150ff565b6103df565b005b6100e96100e4366004614fd7565b610532565b604080519384526020840192909252908201526060016100ab565b6100d461011236600461515a565b6106c1565b61012a6101253660046151f2565b61087c565b6040805192151583526020830191909152016100ab565b6100e961014f3660046152ad565b610948565b610167610162366004615311565b610ca8565b6040516100ab939291906153da565b60008060008061018f8660400151602001516040015190565b6000036101c25760008060006101b56101ae8a60800151604001515190565b89906110c4565b93509350935093506103d6565b600061022c60405180608001604052808960000151600001516001600160a01b031681526020018960200151815260200161020e6102098b60400151602001516040015190565b6110e1565b81526020016102238a60400151604001515190565b1515905261114f565b87515160208901515160408a0151929350610259928990859061025490602001516040015190565b6111f7565b90506000808213156102835761027287602001516110e1565b61027c9083615446565b9050610294565b610291828860000151611277565b90505b60006102a68960800151604001515190565b156102d45787602001516102c38a60400151602001516040015190565b6102cd9190615474565b90506102f4565b6102f16102ea8a60400151602001516040015190565b89516112eb565b90505b60006103068a60800151604001515190565b156103265782610315836110e1565b61031f9190615488565b905061033d565b82610330836110e1565b61033a91906154b0565b90505b600081121561037e578361035a8b60400151602001516040015190565b6040516378320e4960e11b81526004016103759291906154d7565b60405180910390fd5b60006103bb6103968c60400151602001516040015190565b61039f8461130e565b60408e01516020015160a0015160808f01516040015151611360565b905084846103c88461130e565b919a50985096509450505050505b92959194509250565b60405163034aadf760e61b815273__$e53db83827f4e07ebc418caf7145b8c2d5$__9063d2ab7dc09061041c90879087908790879060040161555b565b60006040518083038186803b15801561043457600080fd5b505af4158015610448573d6000803e3d6000fd5b5050604051631450a87960e01b815273__$e53db83827f4e07ebc418caf7145b8c2d5$__9250631450a879915061048c90879087908790879060019060040161558e565b60006040518083038186803b1580156104a457600080fd5b505af41580156104b8573d6000803e3d6000fd5b5050604051631450a87960e01b815273__$e53db83827f4e07ebc418caf7145b8c2d5$__9250631450a87991506104fc90879087908790879060009060040161558e565b60006040518083038186803b15801561051457600080fd5b505af4158015610528573d6000803e3d6000fd5b5050505050505050565b60008060008061054b8660400151602001516040015190565b90508060000361057f5760008061057361056b8960800151604001515190565b8890156110c4565b935093509350506106ba565b6105a360405180606001604052806000815260200160008152602001600081525090565b604080516080810182528851516001600160a01b031681526020808a0151908201526105dd9181016105d4856110e1565b61020e906155d4565b8082528751516020890151516105f5928990866111f7565b8082526000131561065f5786515160208801515160009161061691836113e3565b90506000610627610209858461140f565b610630906155d4565b9050808360000151121561065c5782516106539061064e90836154b0565b61130e565b60208401528083525b50505b6106a1866106738960800151602001515190565b60808a01516020908101510151845160408c01516020015160a0015187919060808e01516040015151611428565b6040820181905281516020909201519195509093509150505b9250925092565b60208501515115806106d857506020808601510151155b1561070357602085810151805191015160405163bff65b3f60e01b81526103759291906004016154d7565b6107118785600001516115d4565b6107268461072187516040015190565b611662565b8115610824576000876001600160a01b031663bd02d0f56040516020016107769060208082526015908201527413525397d413d4d2551253d397d4d2569157d554d1605a1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016107aa91815260200190565b602060405180830381865afa1580156107c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107eb91906155f0565b9050806107fa87602001515190565b101561082257602086015151816040516342f7d98d60e11b81526004016103759291906154d7565b505b60008060006108378a8a8a8a8a89610ca8565b92509250925082156108705781816000015182602001518360400151604051631782422160e31b81526004016103759493929190615609565b50505050505050505050565b600080600061088c868989611692565b9050600061089d82600001516110e1565b6108aa86602001516110e1565b6108b49190615638565b90506000856040015112156108d55760408501516108d29082615488565b90505b60008112156108eb5760009350915061093d9050565b60006108fd8b8b88606001518a61172c565b9050600061090f8c8c60000151611765565b90508181111561091d578091505b600061093061020989600001518561140f565b8412159650929450505050505b965096945050505050565b60008060006109ba60405180610180016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006109d56109cb88604001515190565b89519060006117de565b90506109f4816109ea89602090810151015190565b6102099190615668565b8252604087015151610a20578151610a1161020989602001515190565b610a1b91906154b0565b610a3b565b610a2f61020988602001515190565b8251610a3b91906154b0565b602083018190526040830181905260001215610bba57604087015151610a65578860600151610a6b565b88604001515b6001600160a01b031660608301819052610a88908b908b90611817565b6080830152604087015151610aa257604088015151610aa9565b6020880151515b60a083018190526080830151610abf9190615668565b60c08301528751610ae1908b908b90610ada8b604001515190565b60016118b5565b60e08301528851604088015151610b57918c918560e001518660c00151604051602001610b3c906020808252601a90820152794d41585f504e4c5f464143544f525f464f525f5452414445525360301b604082015260600190565b60405160208183030381529060405280519060200120611941565b610100830181905260e083015114801590610b7757506000826101000151135b8015610b87575060008260e00151135b15610bba57610bb4610b9c836020015161130e565b836101000151610baf8560e0015161130e565b611991565b60208301525b85610bc788602001515190565b03610be05760208088015101515b610120830152610c3a565b60408701515115610c1357610bd586610bfe89602090810151015190565b610c089190615668565b6020890151516112eb565b6020878101518051910151610c29908890615668565b610c339190615474565b6101208301525b610c5c8260200151836101200151610c578a602090810151015190565b6119d1565b61014083015260408201516101208301516020808a01510151610c809291906119d1565b610160830181905261014083015161012090930151929b909a50919850909650505050505050565b60006060610cb4614707565b610cbc614728565b610cc4614707565b610cd78b89898c61014f8e602001515190565b50508252610cf1610cea8a516040015190565b8989611692565b6040830181905251610d088a602001516040015190565b610d129190615668565b6060830152610d266102098a602001515190565b610d2f906155d4565b826080018181525050610d7160405180608001604052808d6001600160a01b031681526020018a8152602001846080015181526020016102238c604001515190565b60a08301819052600080821360c085015213610d9357600060a0830152610de1565b6000610da38c8a600001516119de565b90506000610dbf610209610db98d602001515190565b8461140f565b610dc8906155d4565b9050808460a001511215610dde5760a084018190525b50505b60006040518061014001604052808d6001600160a01b031681526020018c6001600160a01b031681526020018b8152602001846040015181526020018460c00151151581526020018a604001516001600160a01b031681526020018a606001516001600160a01b03168152602001610e5b8c602001515190565b81526000602082018190526040909101819052909150610e7a826119f8565b90506000846040015160000151826101e00151610e979190615668565b9050610ea2816110e1565b60a086015186516060880151610eb7906110e1565b610ec19190615488565b610ecb9190615488565b610ed591906154b0565b84528a51610ee4908f90611765565b6020860152610f05610209610efb8e602001515190565b876020015161140f565b6040850152881561101457610fcd8e6001600160a01b031663bd02d0f5604051602001610f589060208082526012908201527113525397d0d3d31310551154905317d554d160721b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610f8c91815260200190565b602060405180830381865afa158015610fa9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020991906155f0565b602085018190528451121561101457505060408051808201909152600e81526d1b5a5b8818dbdb1b185d195c985b60921b60208201526001965094509092506110b8915050565b835160001261104a57505060408051808201909152600381526203c20360ec1b60208201526001965094509092506110b8915050565b60408401518451121561109c57505060408051808201909152601b81527a6d696e20636f6c6c61746572616c20666f72206c6576657261676560281b60208201526001965094509092506110b8915050565b5050604080516020810190915260008082529650945090925050505b96509650969350505050565b6000816110d25782516110d8565b82602001515b90505b92915050565b60006001600160ff1b0382111561114b5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610375565b5090565b60008061115b83611c67565b90506000611176846000015185602001516000015184611caa565b905060008112611187579392505050565b6000806111a08660000151876020015160200151611dbb565b91509150816111b3575090949350505050565b60006111bf8783611ed1565b905060006111da886000015189602001516000015184611caa565b90508481126111e957846111eb565b805b98975050505050505050565b60008083121561120857508161126e565b60006112148787611f4b565b9050600061122b8660000151836102099190615668565b905080851315611239578094505b6000611247898960016113e3565b90506000611258610209878461140f565b905080871315611266578096505b869450505050505b95945050505050565b6000808312156112b95761128a826110e1565b611293836110e1565b61129d90856154b0565b6112a8906001615488565b6112b29190615446565b90506110db565b6112c2826110e1565b60016112cd846110e1565b6112d79086615488565b6112e191906154b0565b6110d89190615446565b60008160016112fa828661567f565b6113049190615692565b6110d89190615474565b60008082121561114b5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152606401610375565b60008360000361138357604051633df4253160e01b815260040160405180910390fd5b600061138f8587615474565b905082801561139e5750838111155b806113b25750821580156113b25750838110155b156113be5790506113db565b808460405163e09ad0e960e01b81526004016103759291906154d7565b949350505050565b60008060006113f28686611f65565b91509150836114015780611403565b815b925050505b9392505050565b60006110d8838368327cb2734119d3b7a9601e1b612079565b600061144e60405180606001604052806000815260200160008152602001600081525090565b6114598984156110c4565b808252602082015285158015906114705750600087115b1561156f578261148857611483856155d4565b61148a565b845b6040820181905260001380156114af5750856114ad826040015161064e906155d4565b115b156114d5578060400151866040516378320e4960e11b81526004016103759291906154d7565b60006114e0876110e1565b6114ef8a84604001518b611991565b6114f99190615446565b905060008161150b84600001516110e1565b6115159190615488565b9050600081121561155e578251604080850151905163cc32db9960e01b8152600481018490526024810192909252604482018c905260648201526084810189905260a401610375565b6115678161130e565b602084015250505b828015611580575083816020015110155b80611598575082158015611598575083816020015111155b156115a8576020015190506115c9565b80602001518460405163e09ad0e960e01b81526004016103759291906154d7565b979650505050505050565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$";

type PositionUtilsConstructorParams =
  | [linkLibraryAddresses: PositionUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PositionUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class PositionUtils__factory extends ContractFactory {
  constructor(...args: PositionUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        PositionUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: PositionUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e53db83827f4e07ebc418caf7145b8c2d5\\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff439aa65a80c9eec648f15db20b189505\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PositionUtils> {
    return super.deploy(overrides || {}) as Promise<PositionUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PositionUtils {
    return super.attach(address) as PositionUtils;
  }
  override connect(signer: Signer): PositionUtils__factory {
    return super.connect(signer) as PositionUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionUtilsInterface {
    return new utils.Interface(_abi) as PositionUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PositionUtils {
    return new Contract(address, _abi, signerOrProvider) as PositionUtils;
  }
}

export interface PositionUtilsLibraryAddresses {
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
}
