// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ReaderUtils,
  ReaderUtilsInterface,
} from "../../../contracts/reader/ReaderUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToGetBorrowingFactorEmptyPoolUsd",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountOrders",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderKey",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType: "struct Order.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum Order.OrderType",
                    name: "orderType",
                    type: "Order.OrderType",
                  },
                  {
                    internalType: "enum Order.DecreasePositionSwapType",
                    name: "decreasePositionSwapType",
                    type: "Order.DecreasePositionSwapType",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "updatedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "srcChainId",
                    type: "uint256",
                  },
                ],
                internalType: "struct Order.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "shouldUnwrapNativeToken",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isFrozen",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "autoCancel",
                    type: "bool",
                  },
                ],
                internalType: "struct Order.Flags",
                name: "flags",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "_dataList",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Order.Props",
            name: "order",
            type: "tuple",
          },
        ],
        internalType: "struct ReaderUtils.OrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
    ],
    name: "getAdlState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
    ],
    name: "getBaseFundingValues",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "longToken",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortToken",
                    type: "uint256",
                  },
                ],
                internalType: "struct MarketUtils.CollateralType",
                name: "long",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "longToken",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortToken",
                    type: "uint256",
                  },
                ],
                internalType: "struct MarketUtils.CollateralType",
                name: "short",
                type: "tuple",
              },
            ],
            internalType: "struct MarketUtils.PositionType",
            name: "fundingFeeAmountPerSize",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "longToken",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortToken",
                    type: "uint256",
                  },
                ],
                internalType: "struct MarketUtils.CollateralType",
                name: "long",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "longToken",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortToken",
                    type: "uint256",
                  },
                ],
                internalType: "struct MarketUtils.CollateralType",
                name: "short",
                type: "tuple",
              },
            ],
            internalType: "struct MarketUtils.PositionType",
            name: "claimableFundingAmountPerSize",
            type: "tuple",
          },
        ],
        internalType: "struct ReaderUtils.BaseFundingValues",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
    ],
    name: "getMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForLongs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForShorts",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSize",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSize",
                type: "tuple",
              },
            ],
            internalType: "struct ReaderUtils.BaseFundingValues",
            name: "baseFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "longsPayShorts",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fundingFactorPerSecond",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "nextSavedFundingFactorPerSecond",
                type: "int256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSizeDelta",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSizeDelta",
                type: "tuple",
              },
            ],
            internalType:
              "struct MarketUtils.GetNextFundingAmountPerSizeResult",
            name: "nextFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "virtualPoolAmountForLongToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "virtualPoolAmountForShortToken",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "virtualInventoryForPositions",
                type: "int256",
              },
            ],
            internalType: "struct ReaderUtils.VirtualInventory",
            name: "virtualInventory",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isDisabled",
            type: "bool",
          },
        ],
        internalType: "struct ReaderUtils.MarketInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "marketPricesList",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarketInfoList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForLongs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForShorts",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSize",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSize",
                type: "tuple",
              },
            ],
            internalType: "struct ReaderUtils.BaseFundingValues",
            name: "baseFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "longsPayShorts",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fundingFactorPerSecond",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "nextSavedFundingFactorPerSecond",
                type: "int256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSizeDelta",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSizeDelta",
                type: "tuple",
              },
            ],
            internalType:
              "struct MarketUtils.GetNextFundingAmountPerSizeResult",
            name: "nextFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "virtualPoolAmountForLongToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "virtualPoolAmountForShortToken",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "virtualInventoryForPositions",
                type: "int256",
              },
            ],
            internalType: "struct ReaderUtils.VirtualInventory",
            name: "virtualInventory",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isDisabled",
            type: "bool",
          },
        ],
        internalType: "struct ReaderUtils.MarketInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarkets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "Order.OrderType",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "Order.DecreasePositionSwapType",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x613d6161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c806310366e351461007c5780631d81085c146100a5578063619c4ddb146100d8578063818ee976146100f85780639b43e9fc14610118578063b69bee4614610138578063c65da80014610158575b600080fd5b61008f61008a366004612e1a565b610178565b60405161009c9190612ef8565b60405180910390f35b6100b86100b3366004612fb6565b610272565b60408051948552921515602085015291830152606082015260800161009c565b6100eb6100e6366004613012565b61037d565b60405161009c919061314c565b61010b61010636600461317e565b610580565b60405161009c919061323f565b61012b61012636600461328e565b61067a565b60405161009c91906132c3565b61014b610146366004613305565b6107c7565b60405161009c9190613591565b61016b610166366004613605565b61091d565b60405161009c9190613631565b610180612b06565b610188612b06565b61019d848460000151856040015160016109a3565b81515152825160608401516101b591869160016109a3565b81515160200152825160408401516101d091869160006109a3565b81516020015152825160608401516101eb91869160006109a3565b81516020908101510152825160408401516102099186916001610a27565b60208201515152825160608401516102249186916001610a27565b602080830151510152825160408401516102419186916000610a27565b6020808301510151528251606084015161025e9186916000610a27565b602080830151810151015290505b92915050565b6000806000806000610285898989610a43565b9050600073__$e53db83827f4e07ebc418caf7145b8c2d5$__635d95a47e8b8b6040518363ffffffff1660e01b81526004016102c2929190613644565b608060405180830381865af41580156102df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103039190613669565b905060008060006103668d858c8e60405160200161034b9060208082526016908201527513505617d4139317d19050d513d497d193d497d0511360521b604082015260600190565b60405160208183030381529060405280519060200120610abd565b969f919e509c50949a509398505050505050505050565b610385612b2b565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff5906103c19088908790600401613644565b608060405180830381865af41580156103de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104029190613669565b905060006104138683876001610b11565b905060006104248784886000610b11565b905060006104328885610178565b9050600073__$056c740eb4988709d6549ac3afae887637$__630dc7f3eb8a878b6040518463ffffffff1660e01b8152600401610471939291906136d0565b61016060405180830381865af415801561048f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b3919061379b565b905060006104c18a87610d31565b905060008a6001600160a01b0316637ae1cfca6104e18960000151610d85565b6040518263ffffffff1660e01b81526004016104ff91815260200190565b602060405180830381865afa15801561051c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105409190613821565b6040805160e0810182529889526020890197909752958701949094526060860192909252608085015260a084015250151560c082015290505b9392505050565b6060600061058f868585610e08565b9050600081516001600160401b038111156105ac576105ac612d44565b6040519080825280602002602001820160405280156105e557816020015b6105d2612b2b565b8152602001906001900390816105ca5790505b50905060005b825181101561066d5760008782815181106106085761060861383e565b6020026020010151905060008483815181106106265761062661383e565b6020026020010151905061063b8a838361037d565b84848151811061064d5761064d61383e565b6020026020010181905250505080806106659061386a565b9150506105eb565b509150505b949350505050565b60606000610689858585610e08565b9050600081516001600160401b038111156106a6576106a6612d44565b6040519080825280602002602001820160405280156106df57816020015b6106cc612b80565b8152602001906001900390816106c45790505b50905060005b82518110156107bd5760008382815181106107025761070261383e565b60200260200101519050600073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58a846040518363ffffffff1660e01b8152600401610747929190613644565b608060405180830381865af4158015610764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107889190613669565b90508084848151811061079d5761079d61383e565b6020026020010181905250505080806107b59061386a565b9150506106e5565b5095945050505050565b606060006107d786868686610ecd565b9050600081516001600160401b038111156107f4576107f4612d44565b60405190808252806020026020018201604052801561082d57816020015b61081a612ba7565b8152602001906001900390816108125790505b50905060005b825181101561066d5760008382815181106108505761085061383e565b60200260200101519050604051806040016040528082815260200173__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__63fdfc26f38c856040518363ffffffff1660e01b81526004016108a4929190613883565b600060405180830381865af41580156108c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108e99190810190613a97565b8152508383815181106108fe576108fe61383e565b60200260200101819052505080806109159061386a565b915050610833565b610925612bbd565b60405163fdfc26f360e01b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f39061095e9086908690600401613883565b600060405180830381865af415801561097b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105799190810190613a97565b6000846001600160a01b031663bd02d0f56109bf868686610f59565b6040518263ffffffff1660e01b81526004016109dd91815260200190565b602060405180830381865afa1580156109fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1e9190613bf2565b95945050505050565b6000846001600160a01b031663bd02d0f56109bf868686610ffa565b6000836001600160a01b031663bd02d0f5610a5e8585611047565b6040518263ffffffff1660e01b8152600401610a7c91815260200190565b602060405180830381865afa158015610a99573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106729190613bf2565b600080600080610ad18989898960016110ce565b90506000610ae58a878b600001518a61111e565b905060008083138015610aff575081610afd8461113a565b115b9b929a50909850909650505050505050565b600080610b2086868686611195565b905080600003610b34576000915050610672565b6000866001600160a01b0316637ae1cfca604051602001610b929060208082526023908201527f534b49505f424f52524f57494e475f4645455f464f525f534d414c4c45525f5360408201526249444560e81b606082015260800190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610bc691815260200190565b602060405180830381865afa158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c079190613821565b90508015610c6f576000610c1d888860016111db565b90506000610c2d898960006111db565b9050858015610c3b57508082105b15610c4d576000945050505050610672565b85158015610c5a57508181105b15610c6c576000945050505050610672565b50505b6000610c7f888888886000611239565b905080600003610ca257604051630d5f5aef60e31b815260040160405180910390fd5b6000610cb3898960000151886112bf565b90508015610cd457610cc98989888786866112da565b945050505050610672565b6000610ce58a8a6000015189611489565b90506000610cf386836114a4565b90506000610d018286611503565b90506000610d148d8d600001518c611511565b9050610d20828261152c565b9d9c50505050505050505050505050565b610d39612ca7565b600080610d4a858560000151611545565b92509250506000610d5f8686602001516116dd565b604080516060810182529586526020860194909452928401929092525090949350505050565b6000604051602001610dbd906020808252601290820152711254d7d3505492d15517d11254d05093115160721b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038416908201526060015b604051602081830303815290604052805190602001209050919050565b6060836001600160a01b031663e7e4148e604051602001610e48906020808252600b908201526a13505492d15517d31254d560aa1b604082015260600190565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b16825260048201526024810186905260448101859052606401600060405180830381865afa158015610ea5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106729190810190613c0b565b6060846001600160a01b031663f069052a610ee7866117f3565b6040516001600160e01b031960e084901b16815260048101919091526024810186905260448101859052606401600060405180830381865afa158015610f31573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a1e9190810190613c3f565b6000604051602001610f9a906020808252601b908201527a46554e44494e475f4645455f414d4f554e545f5045525f53495a4560281b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915284166060820152821515608082015260a0015b6040516020818303038152906040528051906020012090509392505050565b6000604051602001610f9a9060208082526021908201527f434c41494d41424c455f46554e44494e475f414d4f554e545f5045525f53495a6040820152604560f81b606082015260800190565b600060405160200161107a906020808252600d908201526c1310551154d517d0511317d055609a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b0385169082015282151560608201526080015b60405160208183030381529060405280519060200120905092915050565b6000806110df878787878715611239565b9050806000036110f3576000915050610a1e565b600061110688888860000151888861182b565b905061111281836118bc565b98975050505050505050565b6000846001600160a01b031663bd02d0f56109bf8686866118fb565b6000808212156111915760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f73697469766560448201526064015b60405180910390fd5b5090565b60008082156111c65760006111ab87878661196f565b8551602001519091506111be9082613c73565b915050610a1e565b6111d18686856111db565b9695505050505050565b6000806111f0846040015185606001516119b6565b90506000611209868660000151876040015187866119e5565b90506000611222878760000151886060015188876119e5565b905061122e8183613c8a565b979650505050505050565b6000808361124b578560600151611251565b85604001515b90506000611260888884611a6b565b90506000841561128e578561127d57866040015160200151611287565b8660200151602001515b90506112a8565b8561129e576040870151516112a5565b6020870151515b90505b6112b28183613c73565b9998505050505050505050565b6000836001600160a01b031663bd02d0f5610a5e8585611b09565b6000806112ea8888888888611b43565b90506000886001600160a01b031663bd02d0f561130b8a600001518a611b71565b6040518263ffffffff1660e01b815260040161132991815260200190565b602060405180830381865afa158015611346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136a9190613bf2565b90506000611378838361152c565b9050848311801561139457508468327cb2734119d3b7a9601e1b115b156112b25760006113a58685613c9d565b905060008b6001600160a01b031663bd02d0f56113c68d600001518d611bac565b6040518263ffffffff1660e01b81526004016113e491815260200190565b602060405180830381865afa158015611401573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114259190613bf2565b905060008482111561143e5761143b8583613c9d565b90505b60006114568968327cb2734119d3b7a9601e1b613c9d565b9050806114638584613c73565b61146d9190613cc6565b6114779086613c8a565b9e9d5050505050505050505050505050565b6000836001600160a01b031663bd02d0f5610a5e8585611bfc565b600068327cb2734119d3b7a9601e1b8310156114c25750600061026c565b68327cb2734119d3b7a9601e1b82036114dc57508161026c565b60006114f86114ea85611c3b565b6114f385611c3b565b611c4c565b905061067281611c8e565b600061057983836000611c9f565b6000836001600160a01b031663bd02d0f5610a5e8585611cee565b6000610579838368327cb2734119d3b7a9601e1b611d24565b600080600080856001600160a01b031663a6ed563e61156387611d31565b6040518263ffffffff1660e01b815260040161158191815260200190565b602060405180830381865afa15801561159e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c29190613bf2565b9050806115da576000806000935093509350506116d6565b6001866001600160a01b031663bd02d0f56115f6846001611d68565b6040518263ffffffff1660e01b815260040161161491815260200190565b602060405180830381865afa158015611631573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116559190613bf2565b876001600160a01b031663bd02d0f561166f856000611d68565b6040518263ffffffff1660e01b815260040161168d91815260200190565b602060405180830381865afa1580156116aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ce9190613bf2565b935093509350505b9250925092565b6000806000846001600160a01b031663a6ed563e6116fa86611dda565b6040518263ffffffff1660e01b815260040161171891815260200190565b602060405180830381865afa158015611735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117599190613bf2565b90508061176d5760008092509250506117ec565b6001856001600160a01b031663dc97d96261178784611e10565b6040518263ffffffff1660e01b81526004016117a591815260200190565b602060405180830381865afa1580156117c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e69190613bf2565b92509250505b9250929050565b6000604051602001610dbd906020808252601290820152711050d0d3d5539517d3d491115497d31254d560721b604082015260600190565b60008061184161183c8888876111db565b611e7c565b9050600061185088888761196f565b905081158061185d575080155b1561186d57600092505050610a1e565b600061187a878787611ee6565b9050600061188b61183c8385613c73565b90506000876118a35761189e8286613ce8565b6118ad565b6118ad8583613ce8565b9b9a5050505050505050505050565b6000806118d16118cb85611f1d565b84611503565b9050600084136118f2576118e481611e7c565b6118ed90613d0f565b610672565b61067281611e7c565b600060405160200161192f906020808252600e908201526d26a0ac2fa827262fa320a1aa27a960911b604082015260600190565b60408051601f1981840301815282825280516020918201209083015281018590526001600160a01b0384166060820152821515608082015260a001610fdb565b600080611984846040015185606001516119b6565b9050600061199d86866000015187604001518786611f30565b9050600061122287876000015188606001518887611f30565b6000816001600160a01b0316836001600160a01b0316146119d85760016119db565b60025b60ff169392505050565b600081866001600160a01b031663bd02d0f5611a02888888611f4d565b6040518263ffffffff1660e01b8152600401611a2091815260200190565b602060405180830381865afa158015611a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a619190613bf2565b6111d19190613cc6565b600080611a80846040015185606001516119b6565b905080856001600160a01b031663bd02d0f5611aa0876000015187611f80565b6040518263ffffffff1660e01b8152600401611abe91815260200190565b602060405180830381865afa158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aff9190613bf2565b610a1e9190613cc6565b600060405160200161107a9060208082526014908201527327a82a24a6a0a62faaa9a0a3a2afa320a1aa27a960611b604082015260600190565b600080611b5587876000015187611fee565b90506000611b63848361152c565b905060006112b28683611503565b600060405160200161107a906020808252601590820152742120a9a2afa127a92927aba4a723afa320a1aa27a960591b604082015260600190565b600060405160200161107a9060208082526024908201527f41424f56455f4f5054494d414c5f55534147455f424f52524f57494e475f464160408201526321aa27a960e11b606082015260800190565b600060405160200161107a906020808252601990820152782127a92927aba4a723afa2ac2827a722a72a2fa320a1aa27a960391b604082015260600190565b600061026c64e8d4a5100083613cc6565b600082600003611c74578115611c63576000611c6d565b670de0b6b3a76400005b905061026c565b610579611c89611c8385612009565b846120bf565b6120cb565b600061026c64e8d4a5100083613c73565b600083600003611cb157506000610579565b8115611cd757611cd08468327cb2734119d3b7a9601e1b856001612111565b9050610579565b6106728468327cb2734119d3b7a9601e1b85612162565b600060405160200161107a9060208082526010908201526f2127a92927aba4a723afa320a1aa27a960811b604082015260600190565b6000610672848484612162565b6000604051602001610dbd906020808252601190820152701592549515505317d3505492d15517d251607a1b604082015260600190565b6000604051602001611da9906020808252601b908201527a5649525455414c5f494e56454e544f52595f464f525f535741505360281b604082015260600190565b60408051601f19818403018152828252805160209182012090830152810184905282151560608201526080016110b0565b6000604051602001610dbd9060208082526010908201526f1592549515505317d513d2d15397d25160821b604082015260600190565b6000604051602001611e53906020808252601f908201527f5649525455414c5f494e56454e544f52595f464f525f504f534954494f4e5300604082015260600190565b60408051601f198184030181528282528051602091820120908301528101839052606001610deb565b60006001600160ff1b038211156111915760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401611188565b60008215611f055781611efa578351611cd0565b506020830151610579565b81611f14578360200151610672565b50509051919050565b600080821215611191578160000361026c565b600081866001600160a01b031663bd02d0f5611a0288888861224c565b6000604051602001610f9a906020808252600d908201526c13d4115397d2539511549154d5609a1b604082015260600190565b6000604051602001611fb1906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b0380861691830191909152831660608201526080016110b0565b6000836001600160a01b031663bd02d0f5610a5e8585612289565b6000670de0b6b3a764000082101561203757604051633621413760e21b815260048101839052602401611188565b600061204c670de0b6b3a764000084046122cb565b670de0b6b3a764000081029250905082811c670de0b6b3a763ffff198101612075575050919050565b6706f05b59d3b200005b80156120b757670de0b6b3a7640000828002049150671bc16d674ec8000082106120af579283019260019190911c905b60011c61207f565b505050919050565b600061057983836123ae565b6000680a688906bd8b00000082106120f957604051634a4f26f160e01b815260048101839052602401611188565b670de0b6b3a7640000604083901b0461057981612474565b60008061211f868686612162565b905060018360028111156121355761213561338f565b14801561215257506000848061214d5761214d613cb0565b868809115b15610a1e576111d1600182613c8a565b600080806000198587098587029250828110838203039150508060000361219c5783828161219257612192613cb0565b0492505050610579565b8084116121e35760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401611188565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000604051602001610f9a906020808252601790820152764f50454e5f494e5445524553545f494e5f544f4b454e5360481b604082015260600190565b600060405160200161107a906020808252601c908201527b27a822a72fa4a72a22a922a9aa2fa922a9a2a92b22afa320a1aa27a960211b604082015260600190565b6000600160801b82106122eb57608091821c916122e89082613c8a565b90505b600160401b821061230957604091821c916123069082613c8a565b90505b600160201b821061232757602091821c916123249082613c8a565b90505b62010000821061234457601091821c916123419082613c8a565b90505b610100821061236057600891821c9161235d9082613c8a565b90505b6010821061237b57600491821c916123789082613c8a565b90505b6004821061239657600291821c916123939082613c8a565b90505b600282106123a95761026c600182613c8a565b919050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106123f25760405163698d9a0160e11b815260048101829052602401611188565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050826000036124305780670de0b6b3a764000085040194505050505061026c565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156124945768016a09e667f3bcc9090260401c5b6001603e1b8216156124af576801306fe0a31b7152df0260401c5b6001603d1b8216156124ca576801172b83c7d517adce0260401c5b6001603c1b8216156124e55768010b5586cf9890f62a0260401c5b6001603b1b821615612500576801059b0d31585743ae0260401c5b6001603a1b82161561251b57680102c9a3e778060ee70260401c5b600160391b8216156125365768010163da9fb33356d80260401c5b600160381b82161561255157680100b1afa5abcbed610260401c5b600160371b82161561256c5768010058c86da1c09ea20260401c5b600160361b821615612587576801002c605e2e8cec500260401c5b600160351b8216156125a257680100162f3904051fa10260401c5b600160341b8216156125bd576801000b175effdc76ba0260401c5b600160331b8216156125d857680100058ba01fb9f96d0260401c5b600160321b8216156125f35768010002c5cc37da94920260401c5b600160311b82161561260e576801000162e525ee05470260401c5b600160301b8216156126295768010000b17255775c040260401c5b6001602f1b821615612644576801000058b91b5bc9ae0260401c5b6001602e1b82161561265f57680100002c5c89d5ec6d0260401c5b6001602d1b82161561267a5768010000162e43f4f8310260401c5b6001602c1b82161561269557680100000b1721bcfc9a0260401c5b6001602b1b8216156126b05768010000058b90cf1e6e0260401c5b6001602a1b8216156126cb576801000002c5c863b73f0260401c5b600160291b8216156126e657680100000162e430e5a20260401c5b600160281b821615612701576801000000b1721835510260401c5b600160271b82161561271c57680100000058b90c0b490260401c5b600160261b8216156127375768010000002c5c8601cc0260401c5b600160251b821615612752576801000000162e42fff00260401c5b600160241b82161561276d5768010000000b17217fbb0260401c5b600160231b821615612788576801000000058b90bfce0260401c5b600160221b8216156127a357680100000002c5c85fe30260401c5b600160211b8216156127be5768010000000162e42ff10260401c5b600160201b8216156127d957680100000000b17217f80260401c5b63800000008216156127f45768010000000058b90bfc0260401c5b634000000082161561280f576801000000002c5c85fe0260401c5b632000000082161561282a57680100000000162e42ff0260401c5b6310000000821615612845576801000000000b17217f0260401c5b630800000082161561286057680100000000058b90c00260401c5b630400000082161561287b5768010000000002c5c8600260401c5b6302000000821615612896576801000000000162e4300260401c5b63010000008216156128b15768010000000000b172180260401c5b628000008216156128cb576801000000000058b90c0260401c5b624000008216156128e557680100000000002c5c860260401c5b622000008216156128ff5768010000000000162e430260401c5b6210000082161561291957680100000000000b17210260401c5b620800008216156129335768010000000000058b910260401c5b6204000082161561294d576801000000000002c5c80260401c5b6202000082161561296757680100000000000162e40260401c5b620100008216156129805761b172600160401b010260401c5b618000821615612998576158b9600160401b010260401c5b6140008216156129b057612c5d600160401b010260401c5b6120008216156129c85761162e600160401b010260401c5b6110008216156129e057610b17600160401b010260401c5b6108008216156129f85761058c600160401b010260401c5b610400821615612a10576102c6600160401b010260401c5b610200821615612a2857610163600160401b010260401c5b610100821615612a3f5760b1600160401b010260401c5b6080821615612a55576059600160401b010260401c5b6040821615612a6b57602c600160401b010260401c5b6020821615612a81576016600160401b010260401c5b6010821615612a9757600b600160401b010260401c5b6008821615612aad576006600160401b010260401c5b6004821615612ac3576003600160401b010260401c5b6002821615612ad9576001600160401b010260401c5b6001821615612aef576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6040518060400160405280612b19612cc8565b8152602001612b26612cc8565b905290565b6040518060e00160405280612b3e612b80565b81526020016000815260200160008152602001612b59612b06565b8152602001612b66612ce8565b8152602001612b73612ca7565b8152600060209091015290565b60408051608081018252600080825260208201819052918101829052606081019190915290565b604080518082019091526000815260208101612b265b60408051610180810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301919091526060610160830152815260208101612c73604080516101808101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516080810182526000808252602082810182905292820181905260608201529101908152602001606081525090565b60405180606001604052806000815260200160008152602001600081525090565b6040518060400160405280612cdb612d12565b8152602001612b26612d12565b6040518060a001604052806000151581526020016000815260200160008152602001612b19612cc8565b604051806040016040528060008152602001600081525090565b6001600160a01b0381168114612d4157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715612d7c57612d7c612d44565b60405290565b604080519081016001600160401b0381118282101715612d7c57612d7c612d44565b60405161018081016001600160401b0381118282101715612d7c57612d7c612d44565b60405161010081016001600160401b0381118282101715612d7c57612d7c612d44565b604051601f8201601f191681016001600160401b0381118282101715612e1257612e12612d44565b604052919050565b60008082840360a0811215612e2e57600080fd5b8335612e3981612d2c565b92506080601f1982011215612e4d57600080fd5b50612e56612d5a565b6020840135612e6481612d2c565b81526040840135612e7481612d2c565b60208201526060840135612e8781612d2c565b60408201526080840135612e9a81612d2c565b6060820152919491935090915050565b80518252602090810151910152565b612ec4828251612eaa565b6020810151612ed66040840182612eaa565b505050565b612ee6828251612eb9565b6020810151612ed66080840182612eb9565b610100810161026c8284612edb565b8015158114612d4157600080fd5b600060408284031215612f2757600080fd5b612f2f612d82565b9050813581526020820135602082015292915050565b600060c08284031215612f5757600080fd5b604051606081016001600160401b0381118282101715612f7957612f79612d44565b604052905080612f898484612f15565b8152612f988460408501612f15565b6020820152612faa8460808501612f15565b60408201525092915050565b6000806000806101208587031215612fcd57600080fd5b8435612fd881612d2c565b93506020850135612fe881612d2c565b92506040850135612ff881612f07565b91506130078660608701612f45565b905092959194509250565b6000806000610100848603121561302857600080fd5b833561303381612d2c565b92506130428560208601612f45565b915060e084013561305281612d2c565b809150509250925092565b6001600160a01b03169052565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b6130a882825161306a565b60208101516080830152604081015160a083015260608101516130ce60c0840182612edb565b506080810151805115156101c084015260208101516101e084015260408101516102008401526060810151613107610220850182612eb9565b506080015161311a6102a0840182612eb9565b5060a0810151805161032084015260208101516103408401526040015161036083015260c00151151561038090910152565b6103a0810161026c828461309d565b60006001600160401b0382111561317457613174612d44565b5060051b60200190565b6000806000806080858703121561319457600080fd5b843561319f81612d2c565b93506020858101356001600160401b038111156131bb57600080fd5b8601601f810188136131cc57600080fd5b80356131df6131da8261315b565b612dea565b81815260c0918202830184019184820191908b8411156131fe57600080fd5b938501935b83851015613224576132158c86612f45565b83529384019391850191613203565b50979a97995050505060408601359560600135949350505050565b6020808252825182820181905260009190848201906040850190845b818110156132825761326e83855161309d565b928401926103a0929092019160010161325b565b50909695505050505050565b6000806000606084860312156132a357600080fd5b83356132ae81612d2c565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b81811015613282576132f283855161306a565b92840192608092909201916001016132df565b6000806000806080858703121561331b57600080fd5b843561332681612d2c565b9350602085013561333681612d2c565b93969395505050506040820135916060013590565b600081518084526020808501945080840160005b838110156133845781516001600160a01b03168752958201959082019060010161335f565b509495945050505050565b634e487b7160e01b600052602160045260246000fd5b600981106133b5576133b561338f565b9052565b600381106133b5576133b561338f565b6133d48282516133a5565b60208101516133e660208401826133b9565b5060408181015190830152606080820151908301526080808201519083015260a0808201519083015260c0808201519083015260e0808201519083015261010080820151908301526101208082015190830152610140808201519083015261016090810151910152565b600081518084526020808501945080840160005b8381101561338457815187529582019590820190600101613464565b805161024080845281516001600160a01b039081169185019190915260208201511661026084015260408101516000916134be61028086018361305d565b606081015191506134d36102a086018361305d565b608081015191506134e86102c086018361305d565b60a081015191506134fd6102e086018361305d565b60c0810151915061351261030086018361305d565b60e00151610100610320860152905061352f61034085018261334b565b9050602083015161354360208601826133c9565b50604083810151805115156101a0870152602081015115156101c08701529081015115156101e08601526060908101511515610200860152830151848203610220860152610a1e8282613450565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156135f757888303603f190185528151805184528701518784018790526135e487850182613480565b95880195935050908601906001016135b8565b509098975050505050505050565b6000806040838503121561361857600080fd5b823561362381612d2c565b946020939093013593505050565b6020815260006105796020830184613480565b6001600160a01b0392831681529116602082015260400190565b80516123a981612d2c565b60006080828403121561367b57600080fd5b613683612d5a565b825161368e81612d2c565b8152602083015161369e81612d2c565b602082015260408301516136b181612d2c565b604082015260608301516136c481612d2c565b60608201529392505050565b6001600160a01b038416815261016081016136ee602083018561306a565b6136fc60a083018451612eaa565b602083015161370e60e0840182612eaa565b506040830151613722610120840182612eaa565b50949350505050565b60006040828403121561373d57600080fd5b613745612d82565b9050815181526020820151602082015292915050565b60006080828403121561376d57600080fd5b613775612d82565b9050613781838361372b565b8152613790836040840161372b565b602082015292915050565b600061016082840312156137ae57600080fd5b60405160a081016001600160401b03811182821017156137d0576137d0612d44565b60405282516137de81612f07565b808252506020830151602082015260408301516040820152613803846060850161375b565b60608201526138158460e0850161375b565b60808201529392505050565b60006020828403121561383357600080fd5b815161057981612f07565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161387c5761387c613854565b5060010190565b6001600160a01b03929092168252602082015260400190565b600082601f8301126138ad57600080fd5b815160206138bd6131da8361315b565b82815260059290921b840181019181810190868411156138dc57600080fd5b8286015b848110156139005780516138f381612d2c565b83529183019183016138e0565b509695505050505050565b8051600981106123a957600080fd5b8051600381106123a957600080fd5b6000610180828403121561393c57600080fd5b613944612da4565b905061394f8261390b565b815261395d6020830161391a565b602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525061014080830151818301525061016080830151818301525092915050565b6000608082840312156139e657600080fd5b6139ee612d5a565b905081516139fb81612f07565b81526020820151613a0b81612f07565b60208201526040820151613a1e81612f07565b60408201526060820151613a3181612f07565b606082015292915050565b600082601f830112613a4d57600080fd5b81516020613a5d6131da8361315b565b82815260059290921b84018101918181019086841115613a7c57600080fd5b8286015b848110156139005780518352918301918301613a80565b600060208284031215613aa957600080fd5b81516001600160401b0380821115613ac057600080fd5b908301906102408286031215613ad557600080fd5b613add612d5a565b825182811115613aec57600080fd5b83016101008188031215613aff57600080fd5b613b07612dc7565b613b108261365e565b8152613b1e6020830161365e565b6020820152613b2f6040830161365e565b6040820152613b406060830161365e565b6060820152613b516080830161365e565b6080820152613b6260a0830161365e565b60a0820152613b7360c0830161365e565b60c082015260e082015184811115613b8a57600080fd5b613b968982850161389c565b60e083015250825250613bac8660208501613929565b6020820152613bbf866101a085016139d4565b604082015261022083015182811115613bd757600080fd5b613be387828601613a3c565b60608301525095945050505050565b600060208284031215613c0457600080fd5b5051919050565b600060208284031215613c1d57600080fd5b81516001600160401b03811115613c3357600080fd5b6106728482850161389c565b600060208284031215613c5157600080fd5b81516001600160401b03811115613c6757600080fd5b61067284828501613a3c565b808202811582820484141761026c5761026c613854565b8082018082111561026c5761026c613854565b8181038181111561026c5761026c613854565b634e487b7160e01b600052601260045260246000fd5b600082613ce357634e487b7160e01b600052601260045260246000fd5b500490565b8181036000831280158383131683831282161715613d0857613d08613854565b5092915050565b6000600160ff1b8201613d2457613d24613854565b506000039056fea26469706673582212204cbfa73fcb46c2f4a524046e556283bd6010a5ef252b299741e47b4403843a6d64736f6c63430008140033";

type ReaderUtilsConstructorParams =
  | [linkLibraryAddresses: ReaderUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReaderUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ReaderUtils__factory extends ContractFactory {
  constructor(...args: ReaderUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ReaderUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ReaderUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$ff439aa65a80c9eec648f15db20b189505\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$056c740eb4988709d6549ac3afae887637\$__", "g"),
      linkLibraryAddresses[
        "contracts/reader/ReaderPositionUtils.sol:ReaderPositionUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReaderUtils> {
    return super.deploy(overrides || {}) as Promise<ReaderUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReaderUtils {
    return super.attach(address) as ReaderUtils;
  }
  override connect(signer: Signer): ReaderUtils__factory {
    return super.connect(signer) as ReaderUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReaderUtilsInterface {
    return new utils.Interface(_abi) as ReaderUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReaderUtils {
    return new Contract(address, _abi, signerOrProvider) as ReaderUtils;
  }
}

export interface ReaderUtilsLibraryAddresses {
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
  ["contracts/reader/ReaderPositionUtils.sol:ReaderPositionUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
