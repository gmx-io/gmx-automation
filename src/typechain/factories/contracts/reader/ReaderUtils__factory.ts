// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ReaderUtils,
  ReaderUtilsInterface,
} from "../../../contracts/reader/ReaderUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "UnableToGetBorrowingFactorEmptyPoolUsd",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountOrders",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderKey",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType: "struct Order.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum Order.OrderType",
                    name: "orderType",
                    type: "Order.OrderType",
                  },
                  {
                    internalType: "enum Order.DecreasePositionSwapType",
                    name: "decreasePositionSwapType",
                    type: "Order.DecreasePositionSwapType",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "updatedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "srcChainId",
                    type: "uint256",
                  },
                ],
                internalType: "struct Order.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "shouldUnwrapNativeToken",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isFrozen",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "autoCancel",
                    type: "bool",
                  },
                ],
                internalType: "struct Order.Flags",
                name: "flags",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "_dataList",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Order.Props",
            name: "order",
            type: "tuple",
          },
        ],
        internalType: "struct ReaderUtils.OrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
    ],
    name: "getAdlState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
    ],
    name: "getBaseFundingValues",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "longToken",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortToken",
                    type: "uint256",
                  },
                ],
                internalType: "struct MarketUtils.CollateralType",
                name: "long",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "longToken",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortToken",
                    type: "uint256",
                  },
                ],
                internalType: "struct MarketUtils.CollateralType",
                name: "short",
                type: "tuple",
              },
            ],
            internalType: "struct MarketUtils.PositionType",
            name: "fundingFeeAmountPerSize",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "longToken",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortToken",
                    type: "uint256",
                  },
                ],
                internalType: "struct MarketUtils.CollateralType",
                name: "long",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "longToken",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortToken",
                    type: "uint256",
                  },
                ],
                internalType: "struct MarketUtils.CollateralType",
                name: "short",
                type: "tuple",
              },
            ],
            internalType: "struct MarketUtils.PositionType",
            name: "claimableFundingAmountPerSize",
            type: "tuple",
          },
        ],
        internalType: "struct ReaderUtils.BaseFundingValues",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
    ],
    name: "getMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForLongs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForShorts",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSize",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSize",
                type: "tuple",
              },
            ],
            internalType: "struct ReaderUtils.BaseFundingValues",
            name: "baseFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "longsPayShorts",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fundingFactorPerSecond",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "nextSavedFundingFactorPerSecond",
                type: "int256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSizeDelta",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSizeDelta",
                type: "tuple",
              },
            ],
            internalType:
              "struct MarketUtils.GetNextFundingAmountPerSizeResult",
            name: "nextFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "virtualPoolAmountForLongToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "virtualPoolAmountForShortToken",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "virtualInventoryForPositions",
                type: "int256",
              },
            ],
            internalType: "struct ReaderUtils.VirtualInventory",
            name: "virtualInventory",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isDisabled",
            type: "bool",
          },
        ],
        internalType: "struct ReaderUtils.MarketInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "marketPricesList",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarketInfoList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForLongs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForShorts",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSize",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSize",
                type: "tuple",
              },
            ],
            internalType: "struct ReaderUtils.BaseFundingValues",
            name: "baseFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "longsPayShorts",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fundingFactorPerSecond",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "nextSavedFundingFactorPerSecond",
                type: "int256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSizeDelta",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSizeDelta",
                type: "tuple",
              },
            ],
            internalType:
              "struct MarketUtils.GetNextFundingAmountPerSizeResult",
            name: "nextFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "virtualPoolAmountForLongToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "virtualPoolAmountForShortToken",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "virtualInventoryForPositions",
                type: "int256",
              },
            ],
            internalType: "struct ReaderUtils.VirtualInventory",
            name: "virtualInventory",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isDisabled",
            type: "bool",
          },
        ],
        internalType: "struct ReaderUtils.MarketInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarkets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "Order.OrderType",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "Order.DecreasePositionSwapType",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x613d4a610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c806310366e351461007c5780631d81085c146100a5578063619c4ddb146100d8578063818ee976146100f85780639b43e9fc14610118578063b69bee4614610138578063c65da80014610158575b600080fd5b61008f61008a366004612df9565b610178565b60405161009c9190612ed7565b60405180910390f35b6100b86100b3366004612f96565b610272565b60408051948552921515602085015291830152606082015260800161009c565b6100eb6100e6366004612ff2565b61037d565b60405161009c919061312c565b61010b61010636600461315e565b610580565b60405161009c9190613225565b61012b610126366004613274565b61066f565b60405161009c91906132a9565b61014b6101463660046132ec565b6107b1565b60405161009c919061357e565b61016b6101663660046135fa565b6108fc565b60405161009c9190613626565b610180612ae5565b610188612ae5565b61019d84846000015185604001516001610982565b81515152825160608401516101b59186916001610982565b81515160200152825160408401516101d09186916000610982565b81516020015152825160608401516101eb9186916000610982565b81516020908101510152825160408401516102099186916001610a06565b60208201515152825160608401516102249186916001610a06565b602080830151510152825160408401516102419186916000610a06565b6020808301510151528251606084015161025e9186916000610a06565b602080830151810151015290505b92915050565b6000806000806000610285898989610a22565b9050600073__$e53db83827f4e07ebc418caf7145b8c2d5$__635d95a47e8b8b6040518363ffffffff1660e01b81526004016102c2929190613639565b608060405180830381865af41580156102df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610303919061365e565b905060008060006103668d858c8e60405160200161034b9060208082526016908201527513505617d4139317d19050d513d497d193d497d0511360521b604082015260600190565b60405160208183030381529060405280519060200120610a9c565b969f919e509c50949a509398505050505050505050565b610385612b0a565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff5906103c19088908790600401613639565b608060405180830381865af41580156103de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610402919061365e565b905060006104138683876001610af0565b905060006104248784886000610af0565b905060006104328885610178565b9050600073__$056c740eb4988709d6549ac3afae887637$__630dc7f3eb8a878b6040518463ffffffff1660e01b8152600401610471939291906136c7565b61016060405180830381865af415801561048f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b39190613793565b905060006104c18a87610d10565b905060008a6001600160a01b0316637ae1cfca6104e18960000151610d64565b6040518263ffffffff1660e01b81526004016104ff91815260200190565b602060405180830381865afa15801561051c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105409190613819565b6040805160e0810182529889526020890197909752958701949094526060860192909252608085015260a084015250151560c082015290505b9392505050565b6060600061058f868585610de7565b9050600081516001600160401b038111156105ac576105ac612d23565b6040519080825280602002602001820160405280156105e557816020015b6105d2612b0a565b8152602001906001900390816105ca5790505b50905060005b825181101561066257600087828151811061060857610608613836565b60200260200101519050600084838151811061062657610626613836565b6020026020010151905061063b8a838361037d565b84848151811061064d5761064d613836565b602090810291909101015250506001016105eb565b509150505b949350505050565b6060600061067e858585610de7565b9050600081516001600160401b0381111561069b5761069b612d23565b6040519080825280602002602001820160405280156106d457816020015b6106c1612b5f565b8152602001906001900390816106b95790505b50905060005b82518110156107a75760008382815181106106f7576106f7613836565b60200260200101519050600073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58a846040518363ffffffff1660e01b815260040161073c929190613639565b608060405180830381865af4158015610759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077d919061365e565b90508084848151811061079257610792613836565b602090810291909101015250506001016106da565b5095945050505050565b606060006107c186868686610eac565b9050600081516001600160401b038111156107de576107de612d23565b60405190808252806020026020018201604052801561081757816020015b610804612b86565b8152602001906001900390816107fc5790505b50905060005b825181101561066257600083828151811061083a5761083a613836565b60200260200101519050604051806040016040528082815260200173__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__63fdfc26f38c856040518363ffffffff1660e01b815260040161088e92919061384c565b600060405180830381865af41580156108ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108d39190810190613a59565b8152508383815181106108e8576108e8613836565b60209081029190910101525060010161081d565b610904612b9c565b60405163fdfc26f360e01b815273__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f39061093d908690869060040161384c565b600060405180830381865af415801561095a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105799190810190613a59565b6000846001600160a01b031663bd02d0f561099e868686610f38565b6040518263ffffffff1660e01b81526004016109bc91815260200190565b602060405180830381865afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190613bc5565b95945050505050565b6000846001600160a01b031663bd02d0f561099e868686610fd9565b6000836001600160a01b031663bd02d0f5610a3d8585611026565b6040518263ffffffff1660e01b8152600401610a5b91815260200190565b602060405180830381865afa158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106679190613bc5565b600080600080610ab08989898960016110ad565b90506000610ac48a878b600001518a6110fd565b905060008083138015610ade575081610adc84611119565b115b9b929a50909850909650505050505050565b600080610aff86868686611174565b905080600003610b13576000915050610667565b6000866001600160a01b0316637ae1cfca604051602001610b719060208082526023908201527f534b49505f424f52524f57494e475f4645455f464f525f534d414c4c45525f5360408201526249444560e81b606082015260800190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610ba591815260200190565b602060405180830381865afa158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be69190613819565b90508015610c4e576000610bfc888860016111ba565b90506000610c0c898960006111ba565b9050858015610c1a57508082105b15610c2c576000945050505050610667565b85158015610c3957508181105b15610c4b576000945050505050610667565b50505b6000610c5e888888886000611218565b905080600003610c8157604051630d5f5aef60e31b815260040160405180910390fd5b6000610c928989600001518861129e565b90508015610cb357610ca88989888786866112b9565b945050505050610667565b6000610cc48a8a6000015189611468565b90506000610cd28683611483565b90506000610ce082866114e2565b90506000610cf38d8d600001518c6114f0565b9050610cff828261150b565b9d9c50505050505050505050505050565b610d18612c86565b600080610d29858560000151611524565b92509250506000610d3e8686602001516116bc565b604080516060810182529586526020860194909452928401929092525090949350505050565b6000604051602001610d9c906020808252601290820152711254d7d3505492d15517d11254d05093115160721b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038416908201526060015b604051602081830303815290604052805190602001209050919050565b6060836001600160a01b031663e7e4148e604051602001610e27906020808252600b908201526a13505492d15517d31254d560aa1b604082015260600190565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b16825260048201526024810186905260448101859052606401600060405180830381865afa158015610e84573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106679190810190613bde565b6060846001600160a01b031663f069052a610ec6866117d2565b6040516001600160e01b031960e084901b16815260048101919091526024810186905260448101859052606401600060405180830381865afa158015610f10573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109fd9190810190613c12565b6000604051602001610f79906020808252601b908201527a46554e44494e475f4645455f414d4f554e545f5045525f53495a4560281b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915284166060820152821515608082015260a0015b6040516020818303038152906040528051906020012090509392505050565b6000604051602001610f799060208082526021908201527f434c41494d41424c455f46554e44494e475f414d4f554e545f5045525f53495a6040820152604560f81b606082015260800190565b6000604051602001611059906020808252600d908201526c1310551154d517d0511317d055609a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b0385169082015282151560608201526080015b60405160208183030381529060405280519060200120905092915050565b6000806110be878787878715611218565b9050806000036110d25760009150506109fd565b60006110e588888860000151888861180a565b90506110f1818361189b565b98975050505050505050565b6000846001600160a01b031663bd02d0f561099e8686866118da565b6000808212156111705760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f73697469766560448201526064015b60405180910390fd5b5090565b60008082156111a557600061118a87878661194e565b85516020015190915061119d9082613c5c565b9150506109fd565b6111b08686856111ba565b9695505050505050565b6000806111cf84604001518560600151611995565b905060006111e8868660000151876040015187866119c4565b90506000611201878760000151886060015188876119c4565b905061120d8183613c73565b979650505050505050565b6000808361122a578560600151611230565b85604001515b9050600061123f888884611a4a565b90506000841561126d578561125c57866040015160200151611266565b8660200151602001515b9050611287565b8561127d57604087015151611284565b6020870151515b90505b6112918183613c5c565b9998505050505050505050565b6000836001600160a01b031663bd02d0f5610a3d8585611ae8565b6000806112c98888888888611b22565b90506000886001600160a01b031663bd02d0f56112ea8a600001518a611b50565b6040518263ffffffff1660e01b815260040161130891815260200190565b602060405180830381865afa158015611325573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113499190613bc5565b90506000611357838361150b565b9050848311801561137357508468327cb2734119d3b7a9601e1b115b156112915760006113848685613c86565b905060008b6001600160a01b031663bd02d0f56113a58d600001518d611b8b565b6040518263ffffffff1660e01b81526004016113c391815260200190565b602060405180830381865afa1580156113e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114049190613bc5565b905060008482111561141d5761141a8583613c86565b90505b60006114358968327cb2734119d3b7a9601e1b613c86565b9050806114428584613c5c565b61144c9190613caf565b6114569086613c73565b9e9d5050505050505050505050505050565b6000836001600160a01b031663bd02d0f5610a3d8585611bdb565b600068327cb2734119d3b7a9601e1b8310156114a15750600061026c565b68327cb2734119d3b7a9601e1b82036114bb57508161026c565b60006114d76114c985611c1a565b6114d285611c1a565b611c2b565b905061066781611c6d565b600061057983836000611c7e565b6000836001600160a01b031663bd02d0f5610a3d8585611ccd565b6000610579838368327cb2734119d3b7a9601e1b611d03565b600080600080856001600160a01b031663a6ed563e61154287611d10565b6040518263ffffffff1660e01b815260040161156091815260200190565b602060405180830381865afa15801561157d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a19190613bc5565b9050806115b9576000806000935093509350506116b5565b6001866001600160a01b031663bd02d0f56115d5846001611d47565b6040518263ffffffff1660e01b81526004016115f391815260200190565b602060405180830381865afa158015611610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116349190613bc5565b876001600160a01b031663bd02d0f561164e856000611d47565b6040518263ffffffff1660e01b815260040161166c91815260200190565b602060405180830381865afa158015611689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ad9190613bc5565b935093509350505b9250925092565b6000806000846001600160a01b031663a6ed563e6116d986611db9565b6040518263ffffffff1660e01b81526004016116f791815260200190565b602060405180830381865afa158015611714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117389190613bc5565b90508061174c5760008092509250506117cb565b6001856001600160a01b031663dc97d96261176684611def565b6040518263ffffffff1660e01b815260040161178491815260200190565b602060405180830381865afa1580156117a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c59190613bc5565b92509250505b9250929050565b6000604051602001610d9c906020808252601290820152711050d0d3d5539517d3d491115497d31254d560721b604082015260600190565b60008061182061181b8888876111ba565b611e5b565b9050600061182f88888761194e565b905081158061183c575080155b1561184c576000925050506109fd565b6000611859878787611ec5565b9050600061186a61181b8385613c5c565b90506000876118825761187d8286613cd1565b61188c565b61188c8583613cd1565b9b9a5050505050505050505050565b6000806118b06118aa85611efc565b846114e2565b9050600084136118d1576118c381611e5b565b6118cc90613cf8565b610667565b61066781611e5b565b600060405160200161190e906020808252600e908201526d26a0ac2fa827262fa320a1aa27a960911b604082015260600190565b60408051601f1981840301815282825280516020918201209083015281018590526001600160a01b0384166060820152821515608082015260a001610fba565b60008061196384604001518560600151611995565b9050600061197c86866000015187604001518786611f0f565b9050600061120187876000015188606001518887611f0f565b6000816001600160a01b0316836001600160a01b0316146119b75760016119ba565b60025b60ff169392505050565b600081866001600160a01b031663bd02d0f56119e1888888611f2c565b6040518263ffffffff1660e01b81526004016119ff91815260200190565b602060405180830381865afa158015611a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a409190613bc5565b6111b09190613caf565b600080611a5f84604001518560600151611995565b905080856001600160a01b031663bd02d0f5611a7f876000015187611f5f565b6040518263ffffffff1660e01b8152600401611a9d91815260200190565b602060405180830381865afa158015611aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ade9190613bc5565b6109fd9190613caf565b60006040516020016110599060208082526014908201527327a82a24a6a0a62faaa9a0a3a2afa320a1aa27a960611b604082015260600190565b600080611b3487876000015187611fcd565b90506000611b42848361150b565b9050600061129186836114e2565b6000604051602001611059906020808252601590820152742120a9a2afa127a92927aba4a723afa320a1aa27a960591b604082015260600190565b60006040516020016110599060208082526024908201527f41424f56455f4f5054494d414c5f55534147455f424f52524f57494e475f464160408201526321aa27a960e11b606082015260800190565b6000604051602001611059906020808252601990820152782127a92927aba4a723afa2ac2827a722a72a2fa320a1aa27a960391b604082015260600190565b600061026c64e8d4a5100083613caf565b600082600003611c53578115611c42576000611c4c565b670de0b6b3a76400005b905061026c565b610579611c68611c6285611fe8565b8461209e565b6120aa565b600061026c64e8d4a5100083613c5c565b600083600003611c9057506000610579565b8115611cb657611caf8468327cb2734119d3b7a9601e1b8560016120f0565b9050610579565b6106678468327cb2734119d3b7a9601e1b85612141565b60006040516020016110599060208082526010908201526f2127a92927aba4a723afa320a1aa27a960811b604082015260600190565b6000610667848484612141565b6000604051602001610d9c906020808252601190820152701592549515505317d3505492d15517d251607a1b604082015260600190565b6000604051602001611d88906020808252601b908201527a5649525455414c5f494e56454e544f52595f464f525f535741505360281b604082015260600190565b60408051601f198184030181528282528051602091820120908301528101849052821515606082015260800161108f565b6000604051602001610d9c9060208082526010908201526f1592549515505317d513d2d15397d25160821b604082015260600190565b6000604051602001611e32906020808252601f908201527f5649525455414c5f494e56454e544f52595f464f525f504f534954494f4e5300604082015260600190565b60408051601f198184030181528282528051602091820120908301528101839052606001610dca565b60006001600160ff1b038211156111705760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401611167565b60008215611ee45781611ed9578351611caf565b506020830151610579565b81611ef3578360200151610667565b50509051919050565b600080821215611170578160000361026c565b600081866001600160a01b031663bd02d0f56119e188888861222b565b6000604051602001610f79906020808252600d908201526c13d4115397d2539511549154d5609a1b604082015260600190565b6000604051602001611f90906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800161108f565b6000836001600160a01b031663bd02d0f5610a3d8585612268565b6000670de0b6b3a764000082101561201657604051633621413760e21b815260048101839052602401611167565b600061202b670de0b6b3a764000084046122aa565b670de0b6b3a764000081029250905082811c670de0b6b3a763ffff198101612054575050919050565b6706f05b59d3b200005b801561209657670de0b6b3a7640000828002049150671bc16d674ec80000821061208e579283019260019190911c905b60011c61205e565b505050919050565b6000610579838361238d565b6000680a688906bd8b00000082106120d857604051634a4f26f160e01b815260048101839052602401611167565b670de0b6b3a7640000604083901b0461057981612453565b6000806120fe868686612141565b9050600183600281111561211457612114613377565b14801561213157506000848061212c5761212c613c99565b868809115b156109fd576111b0600182613c73565b600080806000198587098587029250828110838203039150508060000361217b5783828161217157612171613c99565b0492505050610579565b8084116121c25760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401611167565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000604051602001610f79906020808252601790820152764f50454e5f494e5445524553545f494e5f544f4b454e5360481b604082015260600190565b6000604051602001611059906020808252601c908201527b27a822a72fa4a72a22a922a9aa2fa922a9a2a92b22afa320a1aa27a960211b604082015260600190565b6000600160801b82106122ca57608091821c916122c79082613c73565b90505b600160401b82106122e857604091821c916122e59082613c73565b90505b600160201b821061230657602091821c916123039082613c73565b90505b62010000821061232357601091821c916123209082613c73565b90505b610100821061233f57600891821c9161233c9082613c73565b90505b6010821061235a57600491821c916123579082613c73565b90505b6004821061237557600291821c916123729082613c73565b90505b600282106123885761026c600182613c73565b919050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106123d15760405163698d9a0160e11b815260048101829052602401611167565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff821190508260000361240f5780670de0b6b3a764000085040194505050505061026c565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b8216156124735768016a09e667f3bcc9090260401c5b6001603e1b82161561248e576801306fe0a31b7152df0260401c5b6001603d1b8216156124a9576801172b83c7d517adce0260401c5b6001603c1b8216156124c45768010b5586cf9890f62a0260401c5b6001603b1b8216156124df576801059b0d31585743ae0260401c5b6001603a1b8216156124fa57680102c9a3e778060ee70260401c5b600160391b8216156125155768010163da9fb33356d80260401c5b600160381b82161561253057680100b1afa5abcbed610260401c5b600160371b82161561254b5768010058c86da1c09ea20260401c5b600160361b821615612566576801002c605e2e8cec500260401c5b600160351b82161561258157680100162f3904051fa10260401c5b600160341b82161561259c576801000b175effdc76ba0260401c5b600160331b8216156125b757680100058ba01fb9f96d0260401c5b600160321b8216156125d25768010002c5cc37da94920260401c5b600160311b8216156125ed576801000162e525ee05470260401c5b600160301b8216156126085768010000b17255775c040260401c5b6001602f1b821615612623576801000058b91b5bc9ae0260401c5b6001602e1b82161561263e57680100002c5c89d5ec6d0260401c5b6001602d1b8216156126595768010000162e43f4f8310260401c5b6001602c1b82161561267457680100000b1721bcfc9a0260401c5b6001602b1b82161561268f5768010000058b90cf1e6e0260401c5b6001602a1b8216156126aa576801000002c5c863b73f0260401c5b600160291b8216156126c557680100000162e430e5a20260401c5b600160281b8216156126e0576801000000b1721835510260401c5b600160271b8216156126fb57680100000058b90c0b490260401c5b600160261b8216156127165768010000002c5c8601cc0260401c5b600160251b821615612731576801000000162e42fff00260401c5b600160241b82161561274c5768010000000b17217fbb0260401c5b600160231b821615612767576801000000058b90bfce0260401c5b600160221b82161561278257680100000002c5c85fe30260401c5b600160211b82161561279d5768010000000162e42ff10260401c5b600160201b8216156127b857680100000000b17217f80260401c5b63800000008216156127d35768010000000058b90bfc0260401c5b63400000008216156127ee576801000000002c5c85fe0260401c5b632000000082161561280957680100000000162e42ff0260401c5b6310000000821615612824576801000000000b17217f0260401c5b630800000082161561283f57680100000000058b90c00260401c5b630400000082161561285a5768010000000002c5c8600260401c5b6302000000821615612875576801000000000162e4300260401c5b63010000008216156128905768010000000000b172180260401c5b628000008216156128aa576801000000000058b90c0260401c5b624000008216156128c457680100000000002c5c860260401c5b622000008216156128de5768010000000000162e430260401c5b621000008216156128f857680100000000000b17210260401c5b620800008216156129125768010000000000058b910260401c5b6204000082161561292c576801000000000002c5c80260401c5b6202000082161561294657680100000000000162e40260401c5b6201000082161561295f5761b172600160401b010260401c5b618000821615612977576158b9600160401b010260401c5b61400082161561298f57612c5d600160401b010260401c5b6120008216156129a75761162e600160401b010260401c5b6110008216156129bf57610b17600160401b010260401c5b6108008216156129d75761058c600160401b010260401c5b6104008216156129ef576102c6600160401b010260401c5b610200821615612a0757610163600160401b010260401c5b610100821615612a1e5760b1600160401b010260401c5b6080821615612a34576059600160401b010260401c5b6040821615612a4a57602c600160401b010260401c5b6020821615612a60576016600160401b010260401c5b6010821615612a7657600b600160401b010260401c5b6008821615612a8c576006600160401b010260401c5b6004821615612aa2576003600160401b010260401c5b6002821615612ab8576001600160401b010260401c5b6001821615612ace576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b6040518060400160405280612af8612ca7565b8152602001612b05612ca7565b905290565b6040518060e00160405280612b1d612b5f565b81526020016000815260200160008152602001612b38612ae5565b8152602001612b45612cc7565b8152602001612b52612c86565b8152600060209091015290565b60408051608081018252600080825260208201819052918101829052606081019190915290565b604080518082019091526000815260208101612b055b60408051610180810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301919091526060610160830152815260208101612c52604080516101808101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516080810182526000808252602082810182905292820181905260608201529101908152602001606081525090565b60405180606001604052806000815260200160008152602001600081525090565b6040518060400160405280612cba612cf1565b8152602001612b05612cf1565b6040518060a001604052806000151581526020016000815260200160008152602001612af8612ca7565b604051806040016040528060008152602001600081525090565b6001600160a01b0381168114612d2057600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715612d5b57612d5b612d23565b60405290565b604080519081016001600160401b0381118282101715612d5b57612d5b612d23565b60405161018081016001600160401b0381118282101715612d5b57612d5b612d23565b60405161010081016001600160401b0381118282101715612d5b57612d5b612d23565b604051601f8201601f191681016001600160401b0381118282101715612df157612df1612d23565b604052919050565b60008082840360a0811215612e0d57600080fd5b8335612e1881612d0b565b92506080601f1982011215612e2c57600080fd5b50612e35612d39565b6020840135612e4381612d0b565b81526040840135612e5381612d0b565b60208201526060840135612e6681612d0b565b60408201526080840135612e7981612d0b565b6060820152919491935090915050565b80518252602090810151910152565b612ea3828251612e89565b6020810151612eb56040840182612e89565b505050565b612ec5828251612e98565b6020810151612eb56080840182612e98565b610100810161026c8284612eba565b8015158114612d2057600080fd5b600060408284031215612f0657600080fd5b612f0e612d61565b823581526020928301359281019290925250919050565b600060c08284031215612f3757600080fd5b604051606081016001600160401b0381118282101715612f5957612f59612d23565b604052905080612f698484612ef4565b8152612f788460408501612ef4565b6020820152612f8a8460808501612ef4565b60408201525092915050565b6000806000806101208587031215612fad57600080fd5b8435612fb881612d0b565b93506020850135612fc881612d0b565b92506040850135612fd881612ee6565b9150612fe78660608701612f25565b905092959194509250565b6000806000610100848603121561300857600080fd5b833561301381612d0b565b92506130228560208601612f25565b915060e084013561303281612d0b565b809150509250925092565b6001600160a01b03169052565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b61308882825161304a565b60208101516080830152604081015160a083015260608101516130ae60c0840182612eba565b506080810151805115156101c084015260208101516101e0840152604081015161020084015260608101516130e7610220850182612e98565b50608001516130fa6102a0840182612e98565b5060a0810151805161032084015260208101516103408401526040015161036083015260c00151151561038090910152565b6103a0810161026c828461307d565b60006001600160401b0382111561315457613154612d23565b5060051b60200190565b6000806000806080858703121561317457600080fd5b843561317f81612d0b565b935060208501356001600160401b0381111561319a57600080fd5b8501601f810187136131ab57600080fd5b80356131be6131b98261313b565b612dc9565b80828252602082019150602060c084028501019250898311156131e057600080fd5b6020840193505b8284101561320c576131f98a85612f25565b825260208201915060c0840193506131e7565b9699969850505050604085013594606001359392505050565b602080825282518282018190526000918401906040840190835b818110156132695761325283855161307d565b602093909301926103a0929092019160010161323f565b509095945050505050565b60008060006060848603121561328957600080fd5b833561329481612d0b565b95602085013595506040909401359392505050565b602080825282518282018190526000918401906040840190835b81811015613269576132d683855161304a565b60209390930192608092909201916001016132c3565b6000806000806080858703121561330257600080fd5b843561330d81612d0b565b9350602085013561331d81612d0b565b93969395505050506040820135916060013590565b600081518084526020840193506020830160005b8281101561336d5781516001600160a01b0316865260209586019590910190600101613346565b5093949350505050565b634e487b7160e01b600052602160045260246000fd5b6009811061339d5761339d613377565b9052565b6003811061339d5761339d613377565b6133bc82825161338d565b60208101516133ce60208401826133a1565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008101516101008301526101208101516101208301526101408101516101408301526101608101516101608301525050565b600081518084526020840193506020830160005b8281101561336d578151865260209586019590910190600101613453565b805161024080845281516001600160a01b03908116918501919091526020820151166102608401526040810151600091906134b061028086018261303d565b5060608101516134c46102a086018261303d565b5060808101516134d86102c086018261303d565b5060a08101516134ec6102e086018261303d565b5060c081015161350061030086018261303d565b5060e0015161010061032085015261351c610340850182613332565b9050602083015161353060208601826133b1565b50604083810151805115156101a0870152602081015115156101c08701529081015115156101e086015260609081015115156102008601528301518482036102208601526109fd828261343f565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b828110156135ee57603f1987860301845281518051865260208101519050604060208701526135d86040870182613471565b95505060209384019391909101906001016135a6565b50929695505050505050565b6000806040838503121561360d57600080fd5b823561361881612d0b565b946020939093013593505050565b6020815260006105796020830184613471565b6001600160a01b0392831681529116602082015260400190565b805161238881612d0b565b6000608082840312801561367157600080fd5b5061367a612d39565b825161368581612d0b565b8152602083015161369581612d0b565b602082015260408301516136a881612d0b565b604082015260608301516136bb81612d0b565b60608201529392505050565b6001600160a01b038416815261016081016136e5602083018561304a565b6136f360a083018451612e89565b602083015161370560e0840182612e89565b506040830151613719610120840182612e89565b50949350505050565b60006040828403121561373457600080fd5b61373c612d61565b825181526020928301519281019290925250919050565b60006080828403121561376557600080fd5b61376d612d61565b90506137798383613722565b81526137888360408401613722565b602082015292915050565b60006101608284031280156137a757600080fd5b5060405160a081016001600160401b03811182821017156137ca576137ca612d23565b60405282516137d881612ee6565b815260208381015190820152604080840151908201526137fb8460608501613753565b606082015261380d8460e08501613753565b60808201529392505050565b60006020828403121561382b57600080fd5b815161057981612ee6565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03929092168252602082015260400190565b600082601f83011261387657600080fd5b81516138846131b98261313b565b8082825260208201915060208360051b8601019250858311156138a657600080fd5b602085015b838110156107a75780516138be81612d0b565b8352602092830192016138ab565b80516009811061238857600080fd5b80516003811061238857600080fd5b600061018082840312156138fd57600080fd5b613905612d83565b9050613910826138cc565b815261391e602083016138db565b602082015260408281015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e080830151908201526101008083015190820152610120808301519082015261014080830151908201526101609182015191810191909152919050565b6000608082840312156139a557600080fd5b6139ad612d39565b905081516139ba81612ee6565b815260208201516139ca81612ee6565b602082015260408201516139dd81612ee6565b604082015260608201516139f081612ee6565b606082015292915050565b600082601f830112613a0c57600080fd5b8151613a1a6131b98261313b565b8082825260208201915060208360051b860101925085831115613a3c57600080fd5b602085015b838110156107a7578051835260209283019201613a41565b600060208284031215613a6b57600080fd5b81516001600160401b03811115613a8157600080fd5b82016102408185031215613a9457600080fd5b613a9c612d39565b81516001600160401b03811115613ab257600080fd5b82016101008187031215613ac557600080fd5b613acd612da6565b613ad682613653565b8152613ae460208301613653565b6020820152613af560408301613653565b6040820152613b0660608301613653565b6060820152613b1760808301613653565b6080820152613b2860a08301613653565b60a0820152613b3960c08301613653565b60c082015260e08201516001600160401b03811115613b5757600080fd5b613b6388828501613865565b60e083015250825250613b7985602084016138ea565b6020820152613b8c856101a08401613993565b60408201526102208201516001600160401b03811115613bab57600080fd5b613bb7868285016139fb565b606083015250949350505050565b600060208284031215613bd757600080fd5b5051919050565b600060208284031215613bf057600080fd5b81516001600160401b03811115613c0657600080fd5b61066784828501613865565b600060208284031215613c2457600080fd5b81516001600160401b03811115613c3a57600080fd5b610667848285016139fb565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761026c5761026c613c46565b8082018082111561026c5761026c613c46565b8181038181111561026c5761026c613c46565b634e487b7160e01b600052601260045260246000fd5b600082613ccc57634e487b7160e01b600052601260045260246000fd5b500490565b8181036000831280158383131683831282161715613cf157613cf1613c46565b5092915050565b6000600160ff1b8201613d0d57613d0d613c46565b506000039056fea2646970667358221220ef8147f3bf6a9e59aa9a43c35fbd822499739f1fad438e82935276621f050bb964736f6c634300081d0033";

type ReaderUtilsConstructorParams =
  | [linkLibraryAddresses: ReaderUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReaderUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ReaderUtils__factory extends ContractFactory {
  constructor(...args: ReaderUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ReaderUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ReaderUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$ff439aa65a80c9eec648f15db20b189505\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$056c740eb4988709d6549ac3afae887637\$__", "g"),
      linkLibraryAddresses[
        "contracts/reader/ReaderPositionUtils.sol:ReaderPositionUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReaderUtils> {
    return super.deploy(overrides || {}) as Promise<ReaderUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReaderUtils {
    return super.attach(address) as ReaderUtils;
  }
  override connect(signer: Signer): ReaderUtils__factory {
    return super.connect(signer) as ReaderUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReaderUtilsInterface {
    return new utils.Interface(_abi) as ReaderUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReaderUtils {
    return new Contract(address, _abi, signerOrProvider) as ReaderUtils;
  }
}

export interface ReaderUtilsLibraryAddresses {
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
  ["contracts/reader/ReaderPositionUtils.sol:ReaderPositionUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
