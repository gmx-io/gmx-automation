// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Reader, ReaderInterface } from "../../../contracts/reader/Reader";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountOrders",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderKey",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType: "struct Order.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum Order.OrderType",
                    name: "orderType",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Order.DecreasePositionSwapType",
                    name: "decreasePositionSwapType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "updatedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "srcChainId",
                    type: "uint256",
                  },
                ],
                internalType: "struct Order.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "shouldUnwrapNativeToken",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isFrozen",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "autoCancel",
                    type: "bool",
                  },
                ],
                internalType: "struct Order.Flags",
                name: "flags",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "_dataList",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Order.Props",
            name: "order",
            type: "tuple",
          },
        ],
        internalType: "struct ReaderUtils.OrderInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "marketPrices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountPositionInfoList",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionKey",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "collateralToken",
                    type: "address",
                  },
                ],
                internalType: "struct Position.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeInUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeInTokens",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "int256",
                    name: "pendingImpactAmount",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Position.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                ],
                internalType: "struct Position.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Position.Props",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "referralCode",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "affiliate",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "trader",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "adjustedAffiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardAmount",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionReferralFees",
                name: "referral",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "traderTier",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionProFees",
                name: "pro",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableLongTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableShortTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestFundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestLongTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestShortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionFundingFees",
                name: "funding",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "borrowingFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionBorrowingFees",
                name: "borrowing",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionUiFees",
                name: "ui",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "liquidationFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionLiquidationFees",
                name: "liquidation",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct Price.Props",
                name: "collateralTokenPrice",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "positionFeeFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeReceiverFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeReceiverAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmountExcludingFunding",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDiscountAmount",
                type: "uint256",
              },
            ],
            internalType: "struct PositionPricingUtils.PositionFees",
            name: "fees",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "priceImpactUsd",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "executionPrice",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "balanceWasImproved",
                type: "bool",
              },
            ],
            internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
            name: "executionPriceResult",
            type: "tuple",
          },
          {
            internalType: "int256",
            name: "basePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "uncappedBasePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "pnlAfterPriceImpactUsd",
            type: "int256",
          },
        ],
        internalType: "struct ReaderPositionUtils.PositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getAccountPositions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "pendingImpactAmount",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Position.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
    ],
    name: "getAdlState",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getDeposit",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialLongToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialShortToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Deposit.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "initialLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Deposit.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Deposit.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Deposit.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "longTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "enum ISwapPricingUtils.SwapPricingType",
        name: "swapPricingType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "includeVirtualInventoryImpact",
        type: "bool",
      },
    ],
    name: "getDepositAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSizeInTokens",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "sizeDeltaUsd",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
    ],
    name: "getExecutionPrice",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "priceImpactUsd",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "executionPrice",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "balanceWasImproved",
            type: "bool",
          },
        ],
        internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "key",
        type: "address",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "getMarketBySalt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
    ],
    name: "getMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForLongs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForShorts",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSize",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSize",
                type: "tuple",
              },
            ],
            internalType: "struct ReaderUtils.BaseFundingValues",
            name: "baseFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "longsPayShorts",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fundingFactorPerSecond",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "nextSavedFundingFactorPerSecond",
                type: "int256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSizeDelta",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSizeDelta",
                type: "tuple",
              },
            ],
            internalType:
              "struct MarketUtils.GetNextFundingAmountPerSizeResult",
            name: "nextFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "virtualPoolAmountForLongToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "virtualPoolAmountForShortToken",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "virtualInventoryForPositions",
                type: "int256",
              },
            ],
            internalType: "struct ReaderUtils.VirtualInventory",
            name: "virtualInventory",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isDisabled",
            type: "bool",
          },
        ],
        internalType: "struct ReaderUtils.MarketInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "marketPricesList",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarketInfoList",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForLongs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFactorPerSecondForShorts",
            type: "uint256",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSize",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSize",
                type: "tuple",
              },
            ],
            internalType: "struct ReaderUtils.BaseFundingValues",
            name: "baseFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "longsPayShorts",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "fundingFactorPerSecond",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "nextSavedFundingFactorPerSecond",
                type: "int256",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "fundingFeeAmountPerSizeDelta",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "long",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "longToken",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortToken",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct MarketUtils.CollateralType",
                    name: "short",
                    type: "tuple",
                  },
                ],
                internalType: "struct MarketUtils.PositionType",
                name: "claimableFundingAmountPerSizeDelta",
                type: "tuple",
              },
            ],
            internalType:
              "struct MarketUtils.GetNextFundingAmountPerSizeResult",
            name: "nextFunding",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "virtualPoolAmountForLongToken",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "virtualPoolAmountForShortToken",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "virtualInventoryForPositions",
                type: "int256",
              },
            ],
            internalType: "struct ReaderUtils.VirtualInventory",
            name: "virtualInventory",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "isDisabled",
            type: "bool",
          },
        ],
        internalType: "struct ReaderUtils.MarketInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "longTokenPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "shortTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "pnlFactorType",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getMarketTokenPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "poolValue",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "longPnl",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "shortPnl",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "netPnl",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "longTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longTokenUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortTokenUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrowingFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFeePoolFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "impactPoolAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lentImpactPoolAmount",
            type: "uint256",
          },
        ],
        internalType: "struct MarketPoolValueInfo.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getMarkets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getNetPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getOpenInterestWithPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "getPendingPositionImpactPoolDistributionAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getPnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maximize",
        type: "bool",
      },
    ],
    name: "getPnlToPoolFactor",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "collateralToken",
                type: "address",
              },
            ],
            internalType: "struct Position.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeInUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeInTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
              {
                internalType: "int256",
                name: "pendingImpactAmount",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "borrowingFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fundingFeeAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortTokenClaimableFundingAmountPerSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "increasedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "decreasedAtTime",
                type: "uint256",
              },
            ],
            internalType: "struct Position.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
            ],
            internalType: "struct Position.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Position.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "usePositionSizeAsSizeDeltaUsd",
        type: "bool",
      },
    ],
    name: "getPositionInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionKey",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "collateralToken",
                    type: "address",
                  },
                ],
                internalType: "struct Position.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeInUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeInTokens",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "int256",
                    name: "pendingImpactAmount",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Position.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                ],
                internalType: "struct Position.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Position.Props",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "referralCode",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "affiliate",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "trader",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "adjustedAffiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardAmount",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionReferralFees",
                name: "referral",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "traderTier",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionProFees",
                name: "pro",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableLongTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableShortTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestFundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestLongTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestShortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionFundingFees",
                name: "funding",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "borrowingFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionBorrowingFees",
                name: "borrowing",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionUiFees",
                name: "ui",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "liquidationFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionLiquidationFees",
                name: "liquidation",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct Price.Props",
                name: "collateralTokenPrice",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "positionFeeFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeReceiverFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeReceiverAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmountExcludingFunding",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDiscountAmount",
                type: "uint256",
              },
            ],
            internalType: "struct PositionPricingUtils.PositionFees",
            name: "fees",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "priceImpactUsd",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "executionPrice",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "balanceWasImproved",
                type: "bool",
              },
            ],
            internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
            name: "executionPriceResult",
            type: "tuple",
          },
          {
            internalType: "int256",
            name: "basePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "uncappedBasePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "pnlAfterPriceImpactUsd",
            type: "int256",
          },
        ],
        internalType: "struct ReaderPositionUtils.PositionInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "positionKeys",
        type: "bytes32[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
    ],
    name: "getPositionInfoList",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionKey",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "collateralToken",
                    type: "address",
                  },
                ],
                internalType: "struct Position.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "sizeInUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeInTokens",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateralAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "int256",
                    name: "pendingImpactAmount",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "increasedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "decreasedAtTime",
                    type: "uint256",
                  },
                ],
                internalType: "struct Position.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                ],
                internalType: "struct Position.Flags",
                name: "flags",
                type: "tuple",
              },
            ],
            internalType: "struct Position.Props",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "referralCode",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "affiliate",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "trader",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "adjustedAffiliateRewardFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalRebateAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "affiliateRewardAmount",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionReferralFees",
                name: "referral",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "traderTier",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "traderDiscountAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionProFees",
                name: "pro",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "fundingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableLongTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "claimableShortTokenAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestFundingFeeAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestLongTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "latestShortTokenClaimableFundingAmountPerSize",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionFundingFees",
                name: "funding",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "borrowingFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "borrowingFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionBorrowingFees",
                name: "borrowing",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "uiFeeAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPricingUtils.PositionUiFees",
                name: "ui",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "liquidationFeeUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidationFeeAmountForFeeReceiver",
                    type: "uint256",
                  },
                ],
                internalType:
                  "struct PositionPricingUtils.PositionLiquidationFees",
                name: "liquidation",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct Price.Props",
                name: "collateralTokenPrice",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "positionFeeFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protocolFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeReceiverFactor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeReceiverAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "feeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmountForPool",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmountExcludingFunding",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalCostAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalDiscountAmount",
                type: "uint256",
              },
            ],
            internalType: "struct PositionPricingUtils.PositionFees",
            name: "fees",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "priceImpactUsd",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "executionPrice",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "balanceWasImproved",
                type: "bool",
              },
            ],
            internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
            name: "executionPriceResult",
            type: "tuple",
          },
          {
            internalType: "int256",
            name: "basePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "uncappedBasePnlUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "pnlAfterPriceImpactUsd",
            type: "int256",
          },
        ],
        internalType: "struct ReaderPositionUtils.PositionInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
    ],
    name: "getPositionPnlUsd",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getShift",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "fromMarket",
                type: "address",
              },
              {
                internalType: "address",
                name: "toMarket",
                type: "address",
              },
            ],
            internalType: "struct Shift.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Shift.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Shift.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
    ],
    name: "getSwapAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "feeReceiverAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeAmountForPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountAfterFees",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "uiFeeReceiverFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uiFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct SwapPricingUtils.SwapFees",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketKey",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "tokenInPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "tokenOutPrice",
        type: "tuple",
      },
    ],
    name: "getSwapPriceImpact",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getWithdrawal",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "marketTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "enum ISwapPricingUtils.SwapPricingType",
        name: "swapPricingType",
        type: "uint8",
      },
    ],
    name: "getWithdrawalAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "shouldValidateMinCollateralUsd",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "forLiquidation",
        type: "bool",
      },
    ],
    name: "isPositionLiquidatable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "remainingCollateralUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minCollateralUsd",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "minCollateralUsdForLeverage",
            type: "int256",
          },
        ],
        internalType: "struct PositionUtils.IsPositionLiquidatableInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50615cbf80620000216000396000f3fe608060405234801561001057600080fd5b506004361061015f5760003560e01c80630815bce114610164578063095ce6c51461018d5780630fa8f5161461023a5780631485d2971461025a57806324c029e01461027a5780632572d8f91461029b5780632b17b4fd146102c3578063409f37c7146102f657806342a6f8d314610368578063456110f91461038857806349651b6a146103aa5780635d5c6efe146103ca5780635deceb84146103f8578063714af34b1461040b57806377cfb1621461042b578063847bb4691461044b57806393703f871461046b578063971de27d1461047e578063a014093814610491578063a4f0d550146104a4578063addac2e0146104b7578063b05e0ea0146104d7578063b4976dae146104f7578063bc7b5bba1461050a578063bfbf451a1461052a578063ce3264bf1461053d578063ceeea3bf1461055d578063f44adb491461057d578063fd50649d1461059d575b600080fd5b610177610172366004612ac8565b6105b0565b6040516101849190612e8a565b60405180910390f35b6101a061019b366004612f01565b61064b565b6040805192835281516020808501919091528201518382015281015160608084019190915281015160808084019190915281015160a08084019190915281015160c08084019190915281015160e0808401919091528101516101008084019190915281015161012080840191909152810151610140808401919091528101516101608084019190915201516101808201526101a001610184565b61024d610248366004612f7e565b610746565b6040516101849190612faa565b61026d610268366004612f7e565b6107d2565b6040516101849190613071565b61028d61028836600461318f565b610858565b604051908152602001610184565b6102ae6102a936600461320f565b610873565b60408051928352602083019190915201610184565b6102d66102d1366004613286565b610906565b604080519485529215156020850152918301526060820152608001610184565b6103096103043660046132e2565b61099c565b604080519384526020808501939093528151848201529181015160608085019190915291810151608080850191909152918101516001600160a01b031660a0808501919091529181015160c0840152015160e082015261010001610184565b61037b61037636600461335d565b610a76565b6040516101849190613575565b61039b6103963660046135e9565b610afb565b6040516101849392919061368b565b6103bd6103b8366004612f7e565b610c40565b60405161018491906136e5565b6103dd6103d83660046136f8565b610cc5565b60408051938452602084019290925290820152606001610184565b61028d610406366004613782565b610dcc565b61041e61041936600461381a565b610e64565b6040516101849190613886565b61043e61043936600461335d565b610ee6565b6040516101849190613894565b61045e6104593660046138e3565b610f6b565b6040516101849190613a05565b6102ae61047936600461381a565b610ffa565b61028d61048c366004613a14565b611013565b61028d61049f36600461318f565b61109f565b61041e6104b2366004612f7e565b6110ae565b6104ca6104c5366004612f7e565b6110ef565b6040516101849190613a79565b6104ea6104e5366004613b94565b611175565b6040516101849190613cb3565b6103dd610505366004613cf6565b611202565b61051d610518366004613d52565b611318565b6040516101849190613db1565b6104ea610538366004613df4565b61139d565b61055061054b366004613ee4565b611424565b6040516101849190613f19565b61057061056b366004612f7e565b6114b5565b6040516101849190613f5b565b61059061058b36600461403a565b61153b565b60405161018491906140a9565b61028d6105ab3660046140b7565b611654565b6105b8612250565b6040516306bc109960e31b815273__$056c740eb4988709d6549ac3afae887637$__906335e084c8906105fb908b908b908b908b908b908b908b90600401614142565b6107e060405180830381865af4158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d919061469e565b90505b979650505050505050565b60006106b16040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051637d494dc360e01b815273__$e53db83827f4e07ebc418caf7145b8c2d5$__90637d494dc3906106f4908c908c908c908c908c908c908c906004016146bb565b6101a060405180830381865af4158015610712573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610736919061471d565b9150915097509795505050505050565b61074e6122a0565b60405163fdfc26f360e01b815273__$3d31b232fb363902662fbc281b11ab3357$__9063fdfc26f39061078790869086906004016147dd565b6101c060405180830381865af41580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c991906147f6565b90505b92915050565b6107da61233d565b60405163fdfc26f360e01b815273__$b63e253a228f0e32f671cc49c7fc32477c$__9063fdfc26f39061081390869086906004016147dd565b600060405180830381865af4158015610830573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107c9919081019061493f565b60006108678686868686611662565b90505b95945050505050565b60008073__$cede619ada704cb31824310f43bfb6e2d5$__63b027d32d8989898989896040518763ffffffff1660e01b81526004016108b796959493929190614acf565b6040805180830381865af41580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190614b1a565b91509150965096945050505050565b60008060008073__$7d62b333171909e88f9935bee8a07b01ad$__631d81085c898989896040518563ffffffff1660e01b81526004016109499493929190614b3e565b608060405180830381865af4158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a9190614b6c565b929b919a509850909650945050505050565b6000806109e16040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b60405163dafa66bf60e01b815273__$ae023ddda47a46a9af6ec057a2ebe54454$__9063dafa66bf90610a22908c908c908c908c908c908c90600401614baa565b61010060405180830381865af4158015610a40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a649190614bfc565b92509250925096509650969350505050565b604051635b4df72360e11b815260609073__$7d62b333171909e88f9935bee8a07b01ad$__9063b69bee4690610ab6908890889088908890600401614c84565b600060405180830381865af4158015610ad3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261086a9190810190614f0f565b60006060610b2360405180606001604052806000815260200160008152602001600081525090565b60405163fdfc26f360e01b815260009073__$3d31b232fb363902662fbc281b11ab3357$__9063fdfc26f390610b5f908e908d906004016147dd565b6101c060405180830381865af4158015610b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba191906147f6565b60405163536e6cbb60e11b815290915073__$91a1a7f12f728c8759f4be979bae55555f$__9063a6dcd97690610be7908e908e9086908e908e908e908e90600401614ffd565b600060405180830381865af4158015610c04573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c2c919081019061505b565b935093509350509750975097945050505050565b610c486123fb565b6040516218cbb560eb1b815273__$7d62b333171909e88f9935bee8a07b01ad$__9063c65da80090610c8090869086906004016147dd565b600060405180830381865af4158015610c9d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107c99190810190615114565b60008060008073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff58c8c6040518363ffffffff1660e01b8152600401610d04929190615148565b608060405180830381865af4158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4591906151bf565b6040516340f5d44f60e11b815290915073__$ae023ddda47a46a9af6ec057a2ebe54454$__906381eba89e90610d8b908e9085908e908e908e908e908e906004016151db565b606060405180830381865af4158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2c919061522d565b604051632bf0549960e11b815260009073__$12e61648fa0188a8261c5e0807220aaa66$__906357e0a93290610e14908c908c908c908c908c908c908c908c9060040161525b565b602060405180830381865af4158015610e31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5591906152c4565b90505b98975050505050505050565b610e6c612480565b60405163a8d8fff560e01b815273__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff590610ea59086908690600401615148565b608060405180830381865af4158015610ec2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c991906151bf565b60405163282ece5960e11b815260609073__$056c740eb4988709d6549ac3afae887637$__9063505d9cb290610f26908890889088908890600401614c84565b600060405180830381865af4158015610f43573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261086a91908101906152dd565b610f736124a7565b60405163619c4ddb60e01b815273__$7d62b333171909e88f9935bee8a07b01ad$__9063619c4ddb90610fae90879087908790600401615377565b6103a060405180830381865af4158015610fcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff09190615532565b90505b9392505050565b60008061100784846116f3565b915091505b9250929050565b60008073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff588886040518363ffffffff1660e01b815260040161104f929190615148565b608060405180830381865af415801561106c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109091906151bf565b90506106408782878787611888565b600061086786868686866118cc565b6110b6612480565b6040516329bc01e160e11b815273__$ff439aa65a80c9eec648f15db20b189505$__9063537803c290610ea590869086906004016147dd565b6110f7612518565b60405163fdfc26f360e01b815273__$17bbc74b36df540d4a9b171eb59c5012db$__9063fdfc26f39061113090869086906004016147dd565b600060405180830381865af415801561114d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107c9919081019061554f565b604051637810908160e01b815260609073__$056c740eb4988709d6549ac3afae887637$__906378109081906111bd908c908c908c908c908c908c908c908c90600401615699565b600060405180830381865af41580156111da573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e559190810190615736565b60008060008073__$3d31b232fb363902662fbc281b11ab3357$__63fdfc26f38a886040518363ffffffff1660e01b81526004016112419291906147dd565b6101c060405180830381865af415801561125f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128391906147f6565b60405163e22de79360e01b815290915073__$91a1a7f12f728c8759f4be979bae55555f$__9063e22de793906112c5908c908c908c9087908c906004016157c4565b606060405180830381865af41580156112e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611306919061522d565b93509350935050955095509592505050565b6040516340c774bb60e11b815260609073__$7d62b333171909e88f9935bee8a07b01ad$__9063818ee9769061135890889088908890889060040161580e565b600060405180830381865af4158015611375573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261086a9190810190615845565b604051636aeb875560e01b815260609073__$056c740eb4988709d6549ac3afae887637$__90636aeb8755906113df90899089908990899089906004016158d3565b600060405180830381865af41580156113fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108679190810190615736565b6040516326d0fa7f60e21b81526001600160a01b0384166004820152602481018390526044810182905260609073__$7d62b333171909e88f9935bee8a07b01ad$__90639b43e9fc90606401600060405180830381865af415801561148d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ff09190810190615951565b6114bd612592565b60405163fdfc26f360e01b815273__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__9063fdfc26f3906114f690869086906004016147dd565b600060405180830381865af4158015611513573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107c991908101906159e1565b6115436125dc565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$__9063a8d8fff59061157f908c908c90600401615148565b608060405180830381865af415801561159c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c091906151bf565b6040516306731ff760e21b815290915073__$ae023ddda47a46a9af6ec057a2ebe54454$__906319cc7fdc90611606908c9085908c908c908c908c908c90600401615b22565b606060405180830381865af4158015611623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116479190615b77565b9998505050505050505050565b600061086a858585856118f7565b600080611678611673888887611926565b611979565b905060006116878888876119ec565b9050811580611694575080155b156116a45760009250505061086a565b60006116b1878787611a33565b905060006116c26116738385615ba9565b90506000876116da576116d58286615bc0565b6116e4565b6116e48583615bc0565b9b9a5050505050505050505050565b60008060006117028585611a6c565b9050806000036117175760009250905061100c565b6000856001600160a01b031663bd02d0f561173187611ae5565b6040518263ffffffff1660e01b815260040161174f91815260200190565b602060405180830381865afa15801561176c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179091906152c4565b9050806000036117a6575060009250905061100c565b6000866001600160a01b031663bd02d0f56117c088611b81565b6040518263ffffffff1660e01b81526004016117de91815260200190565b602060405180830381865afa1580156117fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181f91906152c4565b9050808311611837576000839450945050505061100c565b60006118438285615be7565b905060006118518989611bc4565b9050600061185f8286611c64565b90508281111561186c5750815b806118778188615be7565b975097505050505050509250929050565b600080611899878787878715611c7d565b9050806000036118ad57600091505061086a565b60006118c0888888600001518888611662565b9050610e588183611cf6565b6000806118da878786611926565b905060006118eb8888888888611662565b9050610e588282611d35565b600080611908868686600187611662565b9050600061191a878787600088611662565b90506106408183615bfa565b60008061193b84604001518560600151611d4b565b9050600061195486866000015187604001518786611d7a565b9050600061196d87876000015188606001518887611d7a565b90506106408183615c22565b60006001600160ff1b038211156119e85760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084015b60405180910390fd5b5090565b600080611a0184604001518560600151611d4b565b90506000611a1a86866000015187604001518786611e00565b9050600061196d87876000015188606001518887611e00565b60008215611a545781611a47578351611a4d565b83602001515b9050610ff3565b81611a63578360200151610ff0565b50509051919050565b6000826001600160a01b031663bd02d0f5611a8684611e1d565b6040518263ffffffff1660e01b8152600401611aa491815260200190565b602060405180830381865afa158015611ac1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c991906152c4565b6000604051602001611b379060208082526026908201527f504f534954494f4e5f494d504143545f504f4f4c5f444953545249425554494f6040820152654e5f5241544560d01b606082015260800190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b6000604051602001611b37906020808252601f908201527f4d494e5f504f534954494f4e5f494d504143545f504f4f4c5f414d4f554e5400604082015260600190565b600080836001600160a01b031663bd02d0f5611bdf85611e5e565b6040518263ffffffff1660e01b8152600401611bfd91815260200190565b602060405180830381865afa158015611c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3e91906152c4565b905080600003611c525760009150506107cc565b611c5c8142615be7565b949350505050565b60006107c9838368327cb2734119d3b7a9601e1b611ead565b60008083611c8f578560600151611c95565b85604001515b90506000611ca4888884611eba565b905060008415611cd25785611cc157866040015160200151611ccb565b8660200151602001515b9050611cec565b85611ce257604087015151611ce9565b6020870151515b90505b6116478183615ba9565b600080611d0b611d0585611f58565b84611f69565b905060008413611d2c57611d1e81611979565b611d2790615c35565b611c5c565b611c5c81611979565b600081611d4184611979565b6107c99190615bfa565b6000816001600160a01b0316836001600160a01b031614611d6d576001611d70565b60025b60ff169392505050565b600081866001600160a01b031663bd02d0f5611d97888888611f77565b6040518263ffffffff1660e01b8152600401611db591815260200190565b602060405180830381865afa158015611dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df691906152c4565b6108679190615c67565b600081866001600160a01b031663bd02d0f5611d97888888612009565b6000604051602001611b37906020808252601b908201527a1413d4d2551253d397d253541050d517d413d3d317d05353d55395602a1b604082015260600190565b6000604051602001611b379060208082526023908201527f504f534954494f4e5f494d504143545f504f4f4c5f444953545249425554454460408201526217d05560ea1b606082015260800190565b6000610ff0848484612046565b600080611ecf84604001518560600151611d4b565b905080856001600160a01b031663bd02d0f5611eef876000015187612130565b6040518263ffffffff1660e01b8152600401611f0d91815260200190565b602060405180830381865afa158015611f2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4e91906152c4565b61086a9190615c67565b6000808212156119e8575060000390565b60006107c9838360006121b7565b6000604051602001611faa906020808252600d908201526c13d4115397d2539511549154d5609a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915284166060820152821515608082015260a0016040516020818303038152906040528051906020012090509392505050565b6000604051602001611faa906020808252601790820152764f50454e5f494e5445524553545f494e5f544f4b454e5360481b604082015260600190565b60008080600019858709858702925082811083820303915050806000036120805783828161207657612076615c51565b0492505050610ff3565b8084116120c75760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016119df565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000604051602001612161906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800160405160208183030381529060405280519060200120905092915050565b6000836000036121c957506000610ff3565b81156121e857611a4d8468327cb2734119d3b7a9601e1b8560016121ff565b610ff08468327cb2734119d3b7a9601e1b85612046565b60008061220d868686612046565b90506001836002811115612223576122236133a3565b14801561224057506000848061223b5761223b615c51565b868809115b1561086a57610867600182615c22565b6040805160e08101909152600081526020810161226b6122a0565b81526020016122786125ff565b81526020016122856125dc565b81526020016000815260200160008152602001600081525090565b6040805160c081019091526000606082018181526080830182905260a083019190915281908152602001612320604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160208181019092526000815291015290565b905290565b604080516101a0810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301919091526060610160830181905261018083015281905b81526020016123d86040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516020818101909252600081529101905b8152602001606081525090565b60408051610180810190915260006080820181815260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083019190915260606101608301528152602081016124546127cb565b8152604080516080810182526000808252602082810182905292820181905260608201529101906123ee565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040518060e001604052806124ba612480565b815260200160008152602001600081526020016124d56127e6565b81526020016124e2612806565b815260200161250b60405180606001604052806000815260200160008152602001600081525090565b8152600060209091015290565b6040805161012081019091526000606082018181526080830182905260a0830182905260c0830182905260e08301829052610100830191909152819081526020016123ee6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610160810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830191909152606061012083018190526101408301528190612393565b604051806060016040528060008152602001600081526020016000151581525090565b6040518061022001604052806126766040518061014001604052806000801916815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161269f60405180606001604052806000815260200160008152602001600081525090565b81526020016126dd6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161270d6040518060800160405280600081526020016000815260200160008152602001600081525090565b8152604080516060810182526000808252602082810182905292820152910190815260200161275d6040518060800160405280600081526020016000815260200160008152602001600081525090565b815260200161277f604051806040016040528060008152602001600081525090565b8152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040805161018081019091528060008152602001600061277f565b60405180604001604052806127f961282c565b815260200161233861282c565b6040518060a0016040528060001515815260200160008152602001600081526020016127f95b60408051608081018252600091810182815260608201929092529081908152602001612338604051806040016040528060008152602001600081525090565b6001600160a01b038116811461288057600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156128bb576128bb612883565b60405290565b604051606081016001600160401b03811182821017156128bb576128bb612883565b604051608081016001600160401b03811182821017156128bb576128bb612883565b60405161014081016001600160401b03811182821017156128bb576128bb612883565b60405160c081016001600160401b03811182821017156128bb576128bb612883565b60405160e081016001600160401b03811182821017156128bb576128bb612883565b60405161022081016001600160401b03811182821017156128bb576128bb612883565b60405161018081016001600160401b03811182821017156128bb576128bb612883565b60405161012081016001600160401b03811182821017156128bb576128bb612883565b60405161010081016001600160401b03811182821017156128bb576128bb612883565b604051601f8201601f191681016001600160401b0381118282101715612a2057612a20612883565b604052919050565b600060408284031215612a3a57600080fd5b612a42612899565b9050813581526020820135602082015292915050565b600060c08284031215612a6a57600080fd5b612a726128c1565b9050612a7e8383612a28565b8152612a8d8360408401612a28565b6020820152612a9f8360808401612a28565b604082015292915050565b8035612ab58161286b565b919050565b801515811461288057600080fd5b6000806000806000806000610180888a031215612ae457600080fd5b8735612aef8161286b565b96506020880135612aff8161286b565b955060408801359450612b158960608a01612a58565b93506101208801359250610140880135612b2e8161286b565b9150610160880135612b3f81612aba565b8091505092959891949750929550565b6001600160a01b03169052565b805160018060a01b03808251168452806020830151166020850152806040830151166040850152505060208101518051606084015260208101516080840152604081015160a0840152606081015160c0840152608081015160e084015260a0810151610100818186015260c08301519150610120828187015260e084015161014087015281840151610160870152808401516101808701525050505060408101515115156101a08301525050565b805182526020810151612c206020840182612b4f565b506040810151612c336040840182612b4f565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b8051825260208082015190830152604090810151910152565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b805182526020810151602083015260408101516040830152606081015160608301525050565b80518252602090810151910152565b80518252602080820151908301526040908101511515910152565b805182526020810151612d3b6020840182612b5c565b5060408101516101e0612d518185018351612c0a565b6020820151612d64610320860182612c82565b506040820151612d78610380860182612c9b565b506060820151612d8c610440860182612cd5565b50608082015180516001600160a01b03166104c086015260208101516104e08601526040015161050085015260a0820151612dcb610520860182612cd5565b5060c0820151612ddf6105a0860182612cfb565b5060e08201516105e08501526101008201516106008501526101208201516106208501526101408201516106408501526101608201516106608501526101808201516106808501526101a08201516106a08501526101c08201516106c08501528101516106e084015261020001516107008301526060810151612e66610720840182612d0a565b50608081015161078083015260a08101516107a083015260c001516107c090910152565b6107e081016107cc8284612d25565b600060808284031215612eab57600080fd5b612eb36128e3565b90508135612ec08161286b565b81526020820135612ed08161286b565b60208201526040820135612ee38161286b565b60408201526060820135612ef68161286b565b606082015292915050565b60008060008060008060006101a0888a031215612f1d57600080fd5b8735612f288161286b565b9650612f378960208a01612e99565b9550612f468960a08a01612a28565b9450612f558960e08a01612a28565b9350612f65896101208a01612a28565b92506101608801359150610180880135612b3f81612aba565b60008060408385031215612f9157600080fd5b8235612f9c8161286b565b946020939093013593505050565b6101c081016107cc8284612b5c565b600081518084526020808501945080840160005b83811015612ff25781516001600160a01b031687529582019590820190600101612fcd565b509495945050505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c08301525050565b600081518084526020808501945080840160005b83811015612ff257815187529582019590820190600101613055565b602081526000825161014080602085015261309161016085018351612b4f565b60208201516130a4610180860182612b4f565b5060408201516130b86101a0860182612b4f565b5060608201516130cc6101c0860182612b4f565b5060808201516130e06101e0860182612b4f565b5060a08201516130f4610200860182612b4f565b5060c0820151613108610220860182612b4f565b5060e082015161012080610240870152613126610280870183612fb9565b9150610100840151935061015f19868303016102608701526131488285612fb9565b93506020870151915061315e6040870183612ffd565b604087015151151590860152506060850151601f1985840301828601526131858382613041565b9695505050505050565b600080600080600061012086880312156131a857600080fd5b85356131b38161286b565b94506131c28760208801612e99565b93506131d18760a08801612a28565b925060e08601356131e181612aba565b91506101008601356131f281612aba565b809150509295509295909350565b803560068110612ab557600080fd5b6000806000806000806101c0878903121561322957600080fd5b86356132348161286b565b95506132438860208901612e99565b94506132528860a08901612a58565b9350610160870135925061018087013561326b8161286b565b915061327a6101a08801613200565b90509295509295509295565b600080600080610120858703121561329d57600080fd5b84356132a88161286b565b935060208501356132b88161286b565b925060408501356132c881612aba565b91506132d78660608701612a58565b905092959194509250565b6000806000806000806101c087890312156132fc57600080fd5b86356133078161286b565b95506133168860208901612e99565b94506133258860a08901612a58565b93506101608701356133368161286b565b925061018087013591506101a087013561334f8161286b565b809150509295509295509295565b6000806000806080858703121561337357600080fd5b843561337e8161286b565b9350602085013561338e8161286b565b93969395505050506040820135916060013590565b634e487b7160e01b600052602160045260246000fd5b600981106133c9576133c96133a3565b9052565b600381106133c9576133c96133a3565b6133e88282516133b9565b60208101516133fa60208401826133cd565b5060408181015190830152606080820151908301526080808201519083015260a0808201519083015260c0808201519083015260e0808201519083015261010080820151908301526101208082015190830152610140808201519083015261016090810151910152565b805161024080845281516001600160a01b039081169185019190915260208201511661026084015260408101516000916134a2610280860183612b4f565b606081015191506134b76102a0860183612b4f565b608081015191506134cc6102c0860183612b4f565b60a081015191506134e16102e0860183612b4f565b60c081015191506134f6610300860183612b4f565b60e001516101006103208601529050613513610340850182612fb9565b9050602083015161352760208601826133dd565b50604083810151805115156101a0870152602081015115156101c08701529081015115156101e0860152606090810151151561020086015283015184820361022086015261086a8282613041565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156135db57888303603f190185528151805184528701518784018790526135c887850182613464565b958801959350509086019060010161359c565b509098975050505050505050565b60008060008060008060006101e0888a03121561360557600080fd5b87356136108161286b565b965060208801356136208161286b565b9550604088013594506136368960608a01612e99565b93506136458960e08a01612a58565b92506101a088013561365681612aba565b91506101c0880135612b3f81612aba565b60005b8381101561368257818101518382015260200161366a565b50506000910152565b831515815260a06020820152600083518060a08401526136b28160c0850160208801613667565b60c0601f19601f830116840101915050825160408301526020830151606083015260408301516080830152949350505050565b6020815260006107c96020830184613464565b6000806000806000806000610120888a03121561371457600080fd5b873561371f8161286b565b9650602088013561372f8161286b565b9550604088013561373f8161286b565b9450606088013561374f8161286b565b9350608088013592506137658960a08a01612a28565b91506137748960e08a01612a28565b905092959891949750929550565b600080600080600080600080610200898b03121561379f57600080fd5b88356137aa8161286b565b97506137b98a60208b01612e99565b96506137c88a60a08b01612a58565b9550610160890135945061018089013593506101a08901356137e98161286b565b92506137f86101c08a01613200565b91506101e089013561380981612aba565b809150509295985092959890939650565b6000806040838503121561382d57600080fd5b82356138388161286b565b915060208301356138488161286b565b809150509250929050565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b608081016107cc8284613853565b6020808252825182820181905260009190848201906040850190845b818110156138d7576138c3838551612b5c565b928401926101c092909201916001016138b0565b50909695505050505050565b600080600061010084860312156138f957600080fd5b83356139048161286b565b92506139138560208601612a58565b915060e08401356139238161286b565b809150509250925092565b613939828251612cfb565b602081015161394b6040840182612cfb565b505050565b61395b828251613853565b60208101516080830152604081015160a0830152606081015161398260c08401825161392e565b6020015161399461014084018261392e565b506080810151805115156101c084015260208101516101e0840152604081015161020084015260608101516139cd61022085018261392e565b50608001516139e06102a084018261392e565b5060a08101516139f4610320840182612c82565b5060c0015115156103809190910152565b6103a081016107cc8284613950565b60008060008060006101408688031215613a2d57600080fd5b8535613a388161286b565b94506020860135613a488161286b565b9350613a578760408801612a58565b9250610100860135613a6881612aba565b91506101208601356131f281612aba565b602081526000825160018060a01b038082511660208501528060208301511660408501528060408301511660608501528060608301511660808501528060808301511660a08501528060a08301511660c085015250506020830151613ae160e0840182612c9b565b5060408301516101a083810152611c5c6101c0840182613041565b60006001600160401b03821115613b1557613b15612883565b5060051b60200190565b600082601f830112613b3057600080fd5b81356020613b45613b4083613afc565b6129f8565b82815260c09283028501820192828201919087851115613b6457600080fd5b8387015b85811015613b8757613b7a8982612a58565b8452928401928101613b68565b5090979650505050505050565b600080600080600080600080610100898b031215613bb157600080fd5b8835613bbc8161286b565b9750602089810135613bcd8161286b565b975060408a0135613bdd8161286b565b965060608a01356001600160401b0380821115613bf957600080fd5b818c0191508c601f830112613c0d57600080fd5b8135613c1b613b4082613afc565b81815260059190911b8301840190848101908f831115613c3a57600080fd5b938501935b82851015613c61578435613c528161286b565b82529385019390850190613c3f565b9950505060808c0135925080831115613c7957600080fd5b5050613c878b828c01613b1f565b945050613c9660a08a01612aaa565b925060c0890135915060e089013590509295985092959890939650565b6020808252825182820181905260009190848201906040850190845b818110156138d757613ce2838551612d25565b928401926107e09290920191600101613ccf565b60008060008060006101a08688031215613d0f57600080fd5b8535613d1a8161286b565b9450613d298760208801612e99565b9350613d388760a08801612a58565b949793965093946101608101359450610180013592915050565b60008060008060808587031215613d6857600080fd5b8435613d738161286b565b935060208501356001600160401b03811115613d8e57600080fd5b613d9a87828801613b1f565b949794965050505060408301359260600135919050565b6020808252825182820181905260009190848201906040850190845b818110156138d757613de0838551613950565b928401926103a09290920191600101613dcd565b600080600080600060a08688031215613e0c57600080fd5b8535613e178161286b565b9450602086810135613e288161286b565b945060408701356001600160401b0380821115613e4457600080fd5b818901915089601f830112613e5857600080fd5b8135613e66613b4082613afc565b81815260059190911b8301840190848101908c831115613e8557600080fd5b938501935b82851015613ea357843582529385019390850190613e8a565b975050506060890135925080831115613ebb57600080fd5b5050613ec988828901613b1f565b925050613ed860808701612aaa565b90509295509295909350565b600080600060608486031215613ef957600080fd5b8335613f048161286b565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b818110156138d757613f48838551613853565b9284019260809290920191600101613f35565b602081526000825161014080602085015260018060a01b038083511661016086015280602084015116610180860152806040840151166101a0860152506060820151613fab6101c0860182612b4f565b506080820151613fbf6101e0860182612b4f565b5060a082015160e0610200860152613fdb610240860182612fb9565b905060c0830151925061015f1985820301610220860152613ffc8184612fb9565b92505060208501516140116040860182612ffd565b5060408501515115156101208501526060850151601f1985840301828601526131858382613041565b6000806000806000806000610180888a03121561405657600080fd5b87356140618161286b565b965060208801356140718161286b565b95506140808960408a01612a58565b9450610100880135935061012088013592506101408801359150610160880135612b3f81612aba565b606081016107cc8284612d0a565b60008060008061010085870312156140ce57600080fd5b84356140d98161286b565b93506140e88660208701612e99565b92506140f78660a08701612a28565b915060e085013561410781612aba565b939692955090935050565b61411d828251612cfb565b602081015161412f6040840182612cfb565b50604081015161394b6080840182612cfb565b6001600160a01b0388811682528781166020830152604082018790526101808201906141716060840188614112565b856101208401528085166101408401525082151561016083015298975050505050505050565b8051612ab58161286b565b8051612ab581612aba565b6000602082840312156141bf57600080fd5b604051602081016001600160401b03811182821017156141e1576141e1612883565b806040525080915082516141f481612aba565b905292915050565b60008183036101c081121561421057600080fd5b6142186128c1565b9150606081121561422857600080fd5b6142306128c1565b835161423b8161286b565b8152602084015161424b8161286b565b6020820152604084015161425e8161286b565b60408201528252610140605f19820181131561427957600080fd5b614281612905565b9150606084015182526080840151602083015260a0840151604083015260c0840151606083015260e084015160808301526101008085015160a08401526101208086015160c08501528286015160e0850152610160860151828501526101808601518185015250505080602083015250612a9f836101a084016141ad565b6000610140828403121561431257600080fd5b61431a612905565b90508151815261432c60208301614197565b602082015261433d60408301614197565b6040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525092915050565b6000606082840312156143a457600080fd5b6143ac6128c1565b905081518152602082015160208201526040820151604082015292915050565b600060c082840312156143de57600080fd5b6143e6612928565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b60006080828403121561443657600080fd5b61443e6128e3565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b60006060828403121561447a57600080fd5b6144826128c1565b9050815161448f8161286b565b80825250602082015160208201526040820151604082015292915050565b6000604082840312156144bf57600080fd5b6144c7612899565b9050815181526020820151602082015292915050565b6000606082840312156144ef57600080fd5b6144f76128c1565b905081518152602082015160208201526040820151612a9f81612aba565b60008183036107e081121561452957600080fd5b61453161294a565b91508251825261454484602085016141fc565b60208301526101e06105406101df198301121561456057600080fd5b61456861296c565b9150614576858286016142ff565b8252614586856103208601614392565b60208301526145998561038086016143cc565b60408301526145ac856104408601614424565b60608301526145bf856104c08601614468565b60808301526145d2856105208601614424565b60a08301526145e5856105a086016144ad565b60c08301526105e084015160e08301526106008401516101008301526106208401516101208301526106408401516101408301526106608401516101608301526106808401516101808301526106a08401516101a08301526106c08401516101c08301526106e08401519082015261070083015161020082015260408201526146728361072084016144dd565b606082015261078082015160808201526107a082015160a08201526107c082015160c082015292915050565b60006107e082840312156146b157600080fd5b6107c98383614515565b6001600160a01b03881681526101a081016146d96020830189613853565b6146e660a0830188612cfb565b6146f360e0830187612cfb565b614701610120830186612cfb565b8361016083015282151561018083015298975050505050505050565b6000808284036101a081121561473257600080fd5b8351925061018080601f198301121561474a57600080fd5b61475261298f565b91506020850151825260408501516020830152606085015160408301526080850151606083015260a0850151608083015260c085015160a083015260e085015160c08301526101008086015160e08401526101208087015182850152610140915081870151818501525061016080870151828501528287015181850152505050809150509250929050565b6001600160a01b03929092168252602082015260400190565b60006101c0828403121561480957600080fd5b6107c983836141fc565b600082601f83011261482457600080fd5b81516020614834613b4083613afc565b82815260059290921b8401810191818101908684111561485357600080fd5b8286015b8481101561487757805161486a8161286b565b8352918301918301614857565b509695505050505050565b600060e0828403121561489457600080fd5b61489c61294a565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015292915050565b600082601f8301126148f557600080fd5b81516020614905613b4083613afc565b82815260059290921b8401810191818101908684111561492457600080fd5b8286015b848110156148775780518352918301918301614928565b60006020828403121561495157600080fd5b81516001600160401b038082111561496857600080fd5b90830190610140828603121561497d57600080fd5b6149856128e3565b82518281111561499457600080fd5b83016101208188038113156149a857600080fd5b6149b06129b2565b6149b983614197565b81526149c760208401614197565b60208201526149d860408401614197565b60408201526149e960608401614197565b60608201526149fa60808401614197565b6080820152614a0b60a08401614197565b60a0820152614a1c60c08401614197565b60c082015260e083015185811115614a3357600080fd5b614a3f8a828601614813565b60e0830152506101008084015186811115614a5957600080fd5b614a658b828701614813565b8284015250818552614a7a8a60208901614882565b6020860152614a8b8a8289016141ad565b60408601525050840151905082811115614aa457600080fd5b614ab0878286016148e4565b60608301525095945050505050565b600681106133c9576133c96133a3565b6001600160a01b0387811682526101c0820190614aef6020840189613853565b614afc60a0840188614112565b610160830186905284166101808301526106406101a0830184614abf565b60008060408385031215614b2d57600080fd5b505080516020909101519092909150565b6001600160a01b038581168252841660208201528215156040820152610120810161086a6060830184614112565b60008060008060808587031215614b8257600080fd5b845193506020850151614b9481612aba565b6040860151606090960151949790965092505050565b6001600160a01b0387811682526101c0820190614bca6020840189613853565b614bd760a0840188614112565b808616610160840152846101808401528084166101a084015250979650505050505050565b6000806000838503610100811215614c1357600080fd5b845193506020850151925060c0603f1982011215614c3057600080fd5b50614c39612928565b60408501518152606085015160208201526080850151604082015260a0850151614c628161286b565b606082015260c0850151608082015260e09094015160a0850152509093909250565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b805160098110612ab557600080fd5b805160038110612ab557600080fd5b60006101808284031215614cde57600080fd5b614ce661298f565b9050614cf182614cad565b8152614cff60208301614cbc565b602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525061014080830151818301525061016080830151818301525092915050565b600060808284031215614d8857600080fd5b614d906128e3565b90508151614d9d81612aba565b81526020820151614dad81612aba565b60208201526040820151614dc081612aba565b60408201526060820151612ef681612aba565b60006102408284031215614de657600080fd5b614dee6128e3565b82519091506001600160401b0380821115614e0857600080fd5b908301906101008286031215614e1d57600080fd5b614e256129d5565b614e2e83614197565b8152614e3c60208401614197565b6020820152614e4d60408401614197565b6040820152614e5e60608401614197565b6060820152614e6f60808401614197565b6080820152614e8060a08401614197565b60a0820152614e9160c08401614197565b60c082015260e083015182811115614ea857600080fd5b614eb487828601614813565b60e0830152508352614ec98560208601614ccb565b6020840152614edc856101a08601614d76565b6040840152610220840151915080821115614ef657600080fd5b50614f03848285016148e4565b60608301525092915050565b60006020808385031215614f2257600080fd5b82516001600160401b0380821115614f3957600080fd5b818501915085601f830112614f4d57600080fd5b8151614f5b613b4082613afc565b81815260059190911b83018401908481019088831115614f7a57600080fd5b8585015b83811015614ff057805185811115614f965760008081fd5b86016040818c03601f1901811315614fae5760008081fd5b614fb6612899565b828a01518152908201519087821115614fcf5760008081fd5b614fdd8d8b84860101614dd3565b818b015285525050918601918601614f7e565b5098975050505050505050565b6001600160a01b0388811682528716602082015261038081016150236040830188612b5c565b615031610200830187613853565b61503f610280830186614112565b9215156103408201529015156103609091015295945050505050565b600080600060a0848603121561507057600080fd5b835161507b81612aba565b60208501519093506001600160401b038082111561509857600080fd5b818601915086601f8301126150ac57600080fd5b8151818111156150be576150be612883565b6150d1601f8201601f19166020016129f8565b91508082528760208285010111156150e857600080fd5b6150f9816020840160208601613667565b50925061510b90508560408601614392565b90509250925092565b60006020828403121561512657600080fd5b81516001600160401b0381111561513c57600080fd5b611c5c84828501614dd3565b6001600160a01b0392831681529116602082015260400190565b60006080828403121561517457600080fd5b61517c6128e3565b905081516151898161286b565b815260208201516151998161286b565b602082015260408201516151ac8161286b565b60408201526060820151612ef68161286b565b6000608082840312156151d157600080fd5b6107c98383615162565b6001600160a01b0388811682526101808201906151fb602084018a613853565b87811660a0840152861660c083015260e0820185905261521f610100830185612cfb565b610e58610140830184612cfb565b60008060006060848603121561524257600080fd5b8351925060208401519150604084015190509250925092565b6001600160a01b03898116825261020082019061527b602084018b613853565b61528860a084018a614112565b87610160840152866101808401528086166101a0840152506152ae6101c0830185614abf565b8215156101e08301529998505050505050505050565b6000602082840312156152d657600080fd5b5051919050565b600060208083850312156152f057600080fd5b82516001600160401b0381111561530657600080fd5b8301601f8101851361531757600080fd5b8051615325613b4082613afc565b8181526101c0918202830184019184820191908884111561534557600080fd5b938501935b8385101561536b5761535c89866141fc565b8352938401939185019161534a565b50979650505050505050565b6001600160a01b0384811682526101008201906153976020840186614112565b80841660e084015250949350505050565b6000608082840312156153ba57600080fd5b6153c2612899565b90506153ce83836144ad565b81526153dd83604084016144ad565b602082015292915050565b600061016082840312156153fb57600080fd5b60405160a081016001600160401b038111828210171561541d5761541d612883565b8060405250809150825161543081612aba565b80825250602083015160208201526040830151604082015261545584606085016153a8565b60608201526154678460e085016153a8565b60808201525092915050565b60008183036103a081121561548757600080fd5b61548f61294a565b915061549b8484615162565b82526080830151602083015260a0830151604083015261010060bf19820112156154c457600080fd5b506154cd612899565b6154da8460c085016153a8565b81526154ea8461014085016153a8565b60208201526060820152615502836101c084016153e8565b6080820152615515836103208401614392565b60a082015261552761038083016141a2565b60c082015292915050565b60006103a0828403121561554557600080fd5b6107c98383615473565b60006020828403121561556157600080fd5b81516001600160401b038082111561557857600080fd5b908301908185036101a081121561558e57600080fd5b6155966128c1565b60c08212156155a457600080fd5b6155ac612928565b915083516155b98161286b565b825260208401516155c98161286b565b602083015260408401516155dc8161286b565b604083015260608401516155ef8161286b565b606083015260808401516156028161286b565b608083015260a08401516156158161286b565b60a083015281815261562a8760c086016143cc565b602082015261018084015191508282111561564457600080fd5b615650878386016148e4565b60408201529695505050505050565b600081518084526020808501945080840160005b83811015612ff257615686878351614112565b60c0969096019590820190600101615673565b6001600160a01b03898116825288811660208084019190915288821660408401526101006060840181905288519084018190526000926101208501928a810192855b818110156156f95784518416865294820194938201936001016156db565b50505050508281036080840152615710818861565f565b91505061572060a0830186612b4f565b60c082019390935260e001529695505050505050565b6000602080838503121561574957600080fd5b82516001600160401b0381111561575f57600080fd5b8301601f8101851361577057600080fd5b805161577e613b4082613afc565b8181526107e0918202830184019184820191908884111561579e57600080fd5b938501935b8385101561536b576157b58986614515565b835293840193918501916157a3565b6001600160a01b038616815261034081016157e26020830187613853565b6157ef60a0830186614112565b6157fd610160830185612b5c565b826103208301529695505050505050565b6001600160a01b03851681526080602082018190526000906158329083018661565f565b6040830194909452506060015292915050565b6000602080838503121561585857600080fd5b82516001600160401b0381111561586e57600080fd5b8301601f8101851361587f57600080fd5b805161588d613b4082613afc565b8181526103a091820283018401918482019190888411156158ad57600080fd5b938501935b8385101561536b576158c48986615473565b835293840193918501916158b2565b600060a0820160018060a01b03808916845260208189168186015260a0604086015282885180855260c087019150828a01945060005b8181101561592557855183529483019491830191600101615909565b50508581036060870152615939818961565f565b94505050808516608085015250509695505050505050565b6000602080838503121561596457600080fd5b82516001600160401b0381111561597a57600080fd5b8301601f8101851361598b57600080fd5b8051615999613b4082613afc565b81815260079190911b820183019083810190878311156159b857600080fd5b928401925b82841015610640576159cf8885615162565b825284820191506080840193506159bd565b6000602082840312156159f357600080fd5b81516001600160401b0380821115615a0a57600080fd5b908301906101408286031215615a1f57600080fd5b615a276128e3565b825182811115615a3657600080fd5b830160e08188031215615a4857600080fd5b615a5061294a565b615a5982614197565b8152615a6760208301614197565b6020820152615a7860408301614197565b6040820152615a8960608301614197565b6060820152615a9a60808301614197565b608082015260a082015184811115615ab157600080fd5b615abd89828501614813565b60a08301525060c082015184811115615ad557600080fd5b615ae189828501614813565b60c083015250825250615af78660208501614882565b6020820152615b0a8661010085016141ad565b604082015261012083015182811115614aa457600080fd5b6001600160a01b03881681526101e08101615b406020830189613853565b615b4d60a0830188614112565b8561016083015284610180830152836101a08301528215156101c083015298975050505050505050565b600060608284031215615b8957600080fd5b6107c983836144dd565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176107cc576107cc615b93565b8181036000831280158383131683831282161715615be057615be0615b93565b5092915050565b818103818111156107cc576107cc615b93565b8082018281126000831280158216821582161715615c1a57615c1a615b93565b505092915050565b808201808211156107cc576107cc615b93565b6000600160ff1b8201615c4a57615c4a615b93565b5060000390565b634e487b7160e01b600052601260045260246000fd5b600082615c8457634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220b0c548ffd60111c5ec77afdd7138954994fdf1370a17008b0a8dc9894203f03a64736f6c63430008140033";

type ReaderConstructorParams =
  | [linkLibraryAddresses: ReaderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Reader__factory extends ContractFactory {
  constructor(...args: ReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Reader__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: ReaderLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$056c740eb4988709d6549ac3afae887637\$__", "g"),
      linkLibraryAddresses[
        "contracts/reader/ReaderPositionUtils.sol:ReaderPositionUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$3d31b232fb363902662fbc281b11ab3357\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/PositionStoreUtils.sol:PositionStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$b63e253a228f0e32f671cc49c7fc32477c\$__", "g"),
      linkLibraryAddresses[
        "contracts/deposit/DepositStoreUtils.sol:DepositStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$cede619ada704cb31824310f43bfb6e2d5\$__", "g"),
      linkLibraryAddresses[
        "contracts/reader/ReaderWithdrawalUtils.sol:ReaderWithdrawalUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$7d62b333171909e88f9935bee8a07b01ad\$__", "g"),
      linkLibraryAddresses["contracts/reader/ReaderUtils.sol:ReaderUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$ae023ddda47a46a9af6ec057a2ebe54454\$__", "g"),
      linkLibraryAddresses[
        "contracts/reader/ReaderPricingUtils.sol:ReaderPricingUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$91a1a7f12f728c8759f4be979bae55555f\$__", "g"),
      linkLibraryAddresses["contracts/position/PositionUtils.sol:PositionUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$ff439aa65a80c9eec648f15db20b189505\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$12e61648fa0188a8261c5e0807220aaa66\$__", "g"),
      linkLibraryAddresses[
        "contracts/reader/ReaderDepositUtils.sol:ReaderDepositUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$17bbc74b36df540d4a9b171eb59c5012db\$__", "g"),
      linkLibraryAddresses[
        "contracts/shift/ShiftStoreUtils.sol:ShiftStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$3dc24d71d6ebafc0c4ce8ac2f69cd1548a\$__", "g"),
      linkLibraryAddresses[
        "contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Reader> {
    return super.deploy(overrides || {}) as Promise<Reader>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Reader {
    return super.attach(address) as Reader;
  }
  override connect(signer: Signer): Reader__factory {
    return super.connect(signer) as Reader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReaderInterface {
    return new utils.Interface(_abi) as ReaderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Reader {
    return new Contract(address, _abi, signerOrProvider) as Reader;
  }
}

export interface ReaderLibraryAddresses {
  ["contracts/reader/ReaderPositionUtils.sol:ReaderPositionUtils"]: string;
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
  ["contracts/position/PositionStoreUtils.sol:PositionStoreUtils"]: string;
  ["contracts/deposit/DepositStoreUtils.sol:DepositStoreUtils"]: string;
  ["contracts/reader/ReaderWithdrawalUtils.sol:ReaderWithdrawalUtils"]: string;
  ["contracts/reader/ReaderUtils.sol:ReaderUtils"]: string;
  ["contracts/reader/ReaderPricingUtils.sol:ReaderPricingUtils"]: string;
  ["contracts/position/PositionUtils.sol:PositionUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
  ["contracts/reader/ReaderDepositUtils.sol:ReaderDepositUtils"]: string;
  ["contracts/shift/ShiftStoreUtils.sol:ShiftStoreUtils"]: string;
  ["contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"]: string;
}
