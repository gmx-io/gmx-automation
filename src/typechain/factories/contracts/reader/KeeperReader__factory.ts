/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KeeperReader,
  KeeperReaderInterface,
} from "../../../contracts/reader/KeeperReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "marketPrices",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "shouldValidateMinCollateralUsd",
        type: "bool",
      },
    ],
    name: "getLiquidatablePositions",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Order.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cd4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806327b62ad91461003b5780632cfad8fe14610064575b600080fd5b61004e61004936600461039e565b61008b565b60405161005b91906104e0565b60405180910390f35b61007e610072366004610771565b60609695505050505050565b60405161005b9190610896565b6060600061009a8585856101e3565b9050600081516001600160401b038111156100b7576100b761062e565b6040519080825280602002602001820160405280156100f057816020015b6100dd6102af565b8152602001906001900390816100d55790505b50905060005b82518110156101d9576000838281518110610113576101136108da565b602090810291909101015160405163fdfc26f360e01b81526001600160a01b038a1660048201526024810182905290915073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f390604401600060405180830381865af4158015610180573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a89190810190610ab1565b8383815181106101ba576101ba6108da565b60200260200101819052505080806101d190610be7565b9150506100f6565b5095945050505050565b6060836001600160a01b031663f069052a604051602001610222906020808252600a908201526913d491115497d31254d560b21b604082015260600190565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b16825260048201526024810186905260448101859052606401600060405180830381865afa15801561027f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102a79190810190610c0e565b949350505050565b604080516101608101909152600060608083018281526080840183905260a0840183905260c0840183905260e08401839052610100840183905261012084019290925261014083015281526020810161035c6040805161016081019091528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b6001600160a01b038116811461039b57600080fd5b50565b6000806000606084860312156103b357600080fd5b83356103be81610386565b95602085013595506040909401359392505050565b6001600160a01b03169052565b600081518084526020808501945080840160005b838110156104195781516001600160a01b0316875295820195908201906001016103f4565b509495945050505050565b634e487b7160e01b600052602160045260246000fd5b6009811061044a5761044a610424565b9052565b6003811061044a5761044a610424565b61046982825161043a565b602081015161047b602084018261044e565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561062057888303603f190185528151805161020080865281516001600160a01b0390811691870191909152898201511661022086015287810151906105546102408701836103d3565b606081015191506105696102608701836103d3565b6080810151915061057e6102808701836103d3565b60a081015191506105936102a08701836103d3565b60c081015191506105a86102c08701836103d3565b60e001516101006102e087015290506105c56103008601826103e0565b9050888201516105d78a87018261045e565b509087015180511515610180860152602081015115156101a0860152604081015115156101c08601526060015115156101e0909401939093529386019390860190600101610507565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156106665761066661062e565b60405290565b60405161016081016001600160401b03811182821017156106665761066661062e565b60405161010081016001600160401b03811182821017156106665761066661062e565b604051601f8201601f191681016001600160401b03811182821017156106da576106da61062e565b604052919050565b60006001600160401b038211156106fb576106fb61062e565b5060051b60200190565b60006040828403121561071757600080fd5b604080519081016001600160401b03811182821017156107395761073961062e565b604052823581526020928301359281019290925250919050565b801515811461039b57600080fd5b803561076c81610753565b919050565b60008060008060008060c0878903121561078a57600080fd5b863561079581610386565b95506020878101356107a681610386565b95506040888101356001600160401b038111156107c257600080fd5b8901601f81018b136107d357600080fd5b80356107e66107e1826106e2565b6106b2565b81815260c09091028201840190848101908d83111561080457600080fd5b928501925b828410156108695760c0848f0312156108225760008081fd5b61082a610644565b6108348f86610705565b81526108428f878701610705565b878201526108538f60808701610705565b81870152825260c0939093019290850190610809565b98505050506060890135945050506080870135915061088a60a08801610761565b90509295509295509295565b6020808252825182820181905260009190848201906040850190845b818110156108ce578351835292840192918401916001016108b2565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b805161076c81610386565b600082601f83011261090c57600080fd5b8151602061091c6107e1836106e2565b82815260059290921b8401810191818101908684111561093b57600080fd5b8286015b8481101561095f57805161095281610386565b835291830191830161093f565b509695505050505050565b80516009811061076c57600080fd5b80516003811061076c57600080fd5b6000610160828403121561099b57600080fd5b6109a361066c565b90506109ae8261096a565b81526109bc60208301610979565b602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525061014080830151818301525092915050565b600060808284031215610a3957600080fd5b604051608081016001600160401b0381118282101715610a5b57610a5b61062e565b80604052508091508251610a6e81610753565b81526020830151610a7e81610753565b60208201526040830151610a9181610753565b60408201526060830151610aa481610753565b6060919091015292915050565b600060208284031215610ac357600080fd5b81516001600160401b0380821115610ada57600080fd5b908301906102008286031215610aef57600080fd5b610af7610644565b825182811115610b0657600080fd5b83016101008188031215610b1957600080fd5b610b2161068f565b610b2a826108f0565b8152610b38602083016108f0565b6020820152610b49604083016108f0565b6040820152610b5a606083016108f0565b6060820152610b6b608083016108f0565b6080820152610b7c60a083016108f0565b60a0820152610b8d60c083016108f0565b60c082015260e082015184811115610ba457600080fd5b610bb0898285016108fb565b60e083015250825250610bc68660208501610988565b6020820152610bd9866101808501610a27565b604082015295945050505050565b600060018201610c0757634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020808385031215610c2157600080fd5b82516001600160401b03811115610c3757600080fd5b8301601f81018513610c4857600080fd5b8051610c566107e1826106e2565b81815260059190911b82018301908381019087831115610c7557600080fd5b928401925b82841015610c9357835182529284019290840190610c7a565b97965050505050505056fea26469706673582212209abb8e1f0a3f3350f096214cb9d997d6fd7dfc265d9bca1d4a8b8ea196f80ad264736f6c63430008120033";

type KeeperReaderConstructorParams =
  | [linkLibraryAddresses: KeeperReaderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeeperReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class KeeperReader__factory extends ContractFactory {
  constructor(...args: KeeperReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        KeeperReader__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: KeeperReaderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KeeperReader> {
    return super.deploy(overrides || {}) as Promise<KeeperReader>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KeeperReader {
    return super.attach(address) as KeeperReader;
  }
  override connect(signer: Signer): KeeperReader__factory {
    return super.connect(signer) as KeeperReader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperReaderInterface {
    return new utils.Interface(_abi) as KeeperReaderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeeperReader {
    return new Contract(address, _abi, signerOrProvider) as KeeperReader;
  }
}

export interface KeeperReaderLibraryAddresses {
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
