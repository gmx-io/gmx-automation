// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KeeperReader,
  KeeperReaderInterface,
} from "../../../contracts/reader/KeeperReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "marketPrices",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "shouldValidateMinCollateralUsd",
        type: "bool",
      },
    ],
    name: "getLiquidatablePositions",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d38806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806327b62ad91461003b5780632cfad8fe14610064575b600080fd5b61004e6100493660046103b1565b61008b565b60405161005b9190610528565b60405180910390f35b61007e6100723660046107f1565b60609695505050505050565b60405161005b9190610916565b6060600061009a8585856101e3565b9050600081516001600160401b038111156100b7576100b761068c565b6040519080825280602002602001820160405280156100f057816020015b6100dd6102af565b8152602001906001900390816100d55790505b50905060005b82518110156101d957600083828151811061011357610113610930565b602090810291909101015160405163fdfc26f360e01b81526001600160a01b038a1660048201526024810182905290915073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f390604401600060405180830381865af4158015610180573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a89190810190610b4c565b8383815181106101ba576101ba610930565b60200260200101819052505080806101d190610ca7565b9150506100f6565b5095945050505050565b6060836001600160a01b031663f069052a604051602001610222906020808252600a908201526913d491115497d31254d560b21b604082015260600190565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b16825260048201526024810186905260448101859052606401600060405180830381865afa15801561027f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102a79190810190610cce565b949350505050565b60408051610180810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301919091526060610160830152815260208101610365604080516101808101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516080810182526000808252602082810182905292820181905260608201529101908152602001606081525090565b6001600160a01b03811681146103ae57600080fd5b50565b6000806000606084860312156103c657600080fd5b83356103d181610399565b95602085013595506040909401359392505050565b6001600160a01b03169052565b600081518084526020808501945080840160005b8381101561042c5781516001600160a01b031687529582019590820190600101610407565b509495945050505050565b634e487b7160e01b600052602160045260246000fd5b6009811061045d5761045d610437565b9052565b6003811061045d5761045d610437565b61047c82825161044d565b602081015161048e6020840182610461565b5060408181015190830152606080820151908301526080808201519083015260a0808201519083015260c0808201519083015260e0808201519083015261010080820151908301526101208082015190830152610140808201519083015261016090810151910152565b600081518084526020808501945080840160005b8381101561042c5781518752958201959082019060010161050c565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561067e57888303603f190185528151805161024080865281516001600160a01b03908116918701919091528982015116610260860152878101519061059c6102808701836103e6565b60609150818101516105b26102a08801826103e6565b5060808101516105c66102c08801826103e6565b5060a08101516105da6102e08801826103e6565b5060c08101516105ee6103008801826103e6565b5060e0015161010061032087015261060a6103408701826103f3565b90508983015161061c8b880182610471565b5088830151805115156101a0880152602081015115156101c0880152604081015115156101e0880152606001511515610200870152918101518583036102208701529161066981846104f8565b978a019795505050918701915060010161054f565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156106c4576106c461068c565b60405290565b60405161018081016001600160401b03811182821017156106c4576106c461068c565b604051608081016001600160401b03811182821017156106c4576106c461068c565b60405161010081016001600160401b03811182821017156106c4576106c461068c565b604051601f8201601f191681016001600160401b038111828210171561075a5761075a61068c565b604052919050565b60006001600160401b0382111561077b5761077b61068c565b5060051b60200190565b60006040828403121561079757600080fd5b604080519081016001600160401b03811182821017156107b9576107b961068c565b604052823581526020928301359281019290925250919050565b80151581146103ae57600080fd5b80356107ec816107d3565b919050565b60008060008060008060c0878903121561080a57600080fd5b863561081581610399565b955060208781013561082681610399565b95506040888101356001600160401b0381111561084257600080fd5b8901601f81018b1361085357600080fd5b803561086661086182610762565b610732565b81815260c09091028201840190848101908d83111561088457600080fd5b928501925b828410156108e95760c0848f0312156108a25760008081fd5b6108aa6106a2565b6108b48f86610785565b81526108c28f878701610785565b878201526108d38f60808701610785565b81870152825260c0939093019290850190610889565b98505050506060890135945050506080870135915061090a60a088016107e1565b90509295509295509295565b60208152600061092960208301846104f8565b9392505050565b634e487b7160e01b600052603260045260246000fd5b80516107ec81610399565b600082601f83011261096257600080fd5b8151602061097261086183610762565b82815260059290921b8401810191818101908684111561099157600080fd5b8286015b848110156109b55780516109a881610399565b8352918301918301610995565b509695505050505050565b8051600981106107ec57600080fd5b8051600381106107ec57600080fd5b600061018082840312156109f157600080fd5b6109f96106ca565b9050610a04826109c0565b8152610a12602083016109cf565b602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525061014080830151818301525061016080830151818301525092915050565b600060808284031215610a9b57600080fd5b610aa36106ed565b90508151610ab0816107d3565b81526020820151610ac0816107d3565b60208201526040820151610ad3816107d3565b60408201526060820151610ae6816107d3565b606082015292915050565b600082601f830112610b0257600080fd5b81516020610b1261086183610762565b82815260059290921b84018101918181019086841115610b3157600080fd5b8286015b848110156109b55780518352918301918301610b35565b600060208284031215610b5e57600080fd5b81516001600160401b0380821115610b7557600080fd5b908301906102408286031215610b8a57600080fd5b610b926106ed565b825182811115610ba157600080fd5b83016101008188031215610bb457600080fd5b610bbc61070f565b610bc582610946565b8152610bd360208301610946565b6020820152610be460408301610946565b6040820152610bf560608301610946565b6060820152610c0660808301610946565b6080820152610c1760a08301610946565b60a0820152610c2860c08301610946565b60c082015260e082015184811115610c3f57600080fd5b610c4b89828501610951565b60e083015250825250610c6186602085016109de565b6020820152610c74866101a08501610a89565b604082015261022083015182811115610c8c57600080fd5b610c9887828601610af1565b60608301525095945050505050565b600060018201610cc757634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610ce057600080fd5b81516001600160401b03811115610cf657600080fd5b6102a784828501610af156fea264697066735822122080f59140c4c906e6130f1fb1b22771a8535149394703ce07212ecf2141947fe364736f6c63430008140033";

type KeeperReaderConstructorParams =
  | [linkLibraryAddresses: KeeperReaderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeeperReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class KeeperReader__factory extends ContractFactory {
  constructor(...args: KeeperReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        KeeperReader__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: KeeperReaderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KeeperReader> {
    return super.deploy(overrides || {}) as Promise<KeeperReader>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KeeperReader {
    return super.attach(address) as KeeperReader;
  }
  override connect(signer: Signer): KeeperReader__factory {
    return super.connect(signer) as KeeperReader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperReaderInterface {
    return new utils.Interface(_abi) as KeeperReaderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeeperReader {
    return new Contract(address, _abi, signerOrProvider) as KeeperReader;
  }
}

export interface KeeperReaderLibraryAddresses {
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
