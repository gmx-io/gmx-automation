// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KeeperReader,
  KeeperReaderInterface,
} from "../../../contracts/reader/KeeperReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "referralStorage",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices[]",
        name: "marketPrices",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "shouldValidateMinCollateralUsd",
        type: "bool",
      },
    ],
    name: "getLiquidatablePositions",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610d258061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806327b62ad91461003b5780632cfad8fe14610064575b600080fd5b61004e6100493660046103a6565b61008b565b60405161005b9190610527565b60405180910390f35b61007e6100723660046107f5565b60609695505050505050565b60405161005b9190610920565b6060600061009a8585856101d8565b9050600081516001600160401b038111156100b7576100b7610690565b6040519080825280602002602001820160405280156100f057816020015b6100dd6102a4565b8152602001906001900390816100d55790505b50905060005b82518110156101ce5760008382815181106101135761011361093a565b602090810291909101015160405163fdfc26f360e01b81526001600160a01b038a1660048201526024810182905290915073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f390604401600060405180830381865af4158015610180573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a89190810190610b4f565b8383815181106101ba576101ba61093a565b6020908102919091010152506001016100f6565b5095945050505050565b6060836001600160a01b031663f069052a604051602001610217906020808252600a908201526913d491115497d31254d560b21b604082015260600190565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b16825260048201526024810186905260448101859052606401600060405180830381865afa158015610274573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261029c9190810190610cbb565b949350505050565b60408051610180810190915260006080820181815260a0830182905260c0830182905260e0830182905261010083018290526101208301829052610140830191909152606061016083015281526020810161035a604080516101808101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516080810182526000808252602082810182905292820181905260608201529101908152602001606081525090565b6001600160a01b03811681146103a357600080fd5b50565b6000806000606084860312156103bb57600080fd5b83356103c68161038e565b95602085013595506040909401359392505050565b6001600160a01b03169052565b600081518084526020840193506020830160005b828110156104235781516001600160a01b03168652602095860195909101906001016103fc565b5093949350505050565b634e487b7160e01b600052602160045260246000fd5b600981106104535761045361042d565b9052565b600381106104535761045361042d565b610472828251610443565b60208101516104846020840182610457565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008101516101008301526101208101516101208301526101408101516101408301526101608101516101608301525050565b600081518084526020840193506020830160005b82811015610423578151865260209586019590910190600101610509565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561068457868503603f190184528151805161024080885281516001600160a01b0390811691890191909152602082015116610260880152604081015161059d6102808901826103db565b5060608101516105b16102a08901826103db565b5060808101516105c56102c08901826103db565b5060a08101516105d96102e08901826103db565b5060c08101516105ed6103008901826103db565b5060e001516101006103208801526106096103408801826103e8565b9050602082015161061d6020890182610467565b50604082810151805115156101a08a0152602081015115156101c08a01529081015115156101e08901526060908101511515610200890152909101518682036102208801529061066d81836104f5565b96505050602093840193919091019060010161054f565b50929695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156106c8576106c8610690565b60405290565b60405161018081016001600160401b03811182821017156106c8576106c8610690565b604051608081016001600160401b03811182821017156106c8576106c8610690565b60405161010081016001600160401b03811182821017156106c8576106c8610690565b604051601f8201601f191681016001600160401b038111828210171561075e5761075e610690565b604052919050565b60006001600160401b0382111561077f5761077f610690565b5060051b60200190565b60006040828403121561079b57600080fd5b604080519081016001600160401b03811182821017156107bd576107bd610690565b604052823581526020928301359281019290925250919050565b80151581146103a357600080fd5b80356107f0816107d7565b919050565b60008060008060008060c0878903121561080e57600080fd5b86356108198161038e565b955060208701356108298161038e565b945060408701356001600160401b0381111561084457600080fd5b8701601f8101891361085557600080fd5b803561086861086382610766565b610736565b80828252602082019150602060c0840285010192508b83111561088a57600080fd5b6020840193505b828410156108f55760c0848d0312156108a957600080fd5b6108b16106a6565b6108bb8d86610789565b81526108ca8d60408701610789565b60208201526108dc8d60808701610789565b6040820152825260c09390930192602090910190610891565b9650505050606087013592506080870135915061091460a088016107e5565b90509295509295509295565b60208152600061093360208301846104f5565b9392505050565b634e487b7160e01b600052603260045260246000fd5b80516107f08161038e565b600082601f83011261096c57600080fd5b815161097a61086382610766565b8082825260208201915060208360051b86010192508583111561099c57600080fd5b602085015b838110156101ce5780516109b48161038e565b8352602092830192016109a1565b8051600981106107f057600080fd5b8051600381106107f057600080fd5b600061018082840312156109f357600080fd5b6109fb6106ce565b9050610a06826109c2565b8152610a14602083016109d1565b602082015260408281015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e080830151908201526101008083015190820152610120808301519082015261014080830151908201526101609182015191810191909152919050565b600060808284031215610a9b57600080fd5b610aa36106f1565b90508151610ab0816107d7565b81526020820151610ac0816107d7565b60208201526040820151610ad3816107d7565b60408201526060820151610ae6816107d7565b606082015292915050565b600082601f830112610b0257600080fd5b8151610b1061086382610766565b8082825260208201915060208360051b860101925085831115610b3257600080fd5b602085015b838110156101ce578051835260209283019201610b37565b600060208284031215610b6157600080fd5b81516001600160401b03811115610b7757600080fd5b82016102408185031215610b8a57600080fd5b610b926106f1565b81516001600160401b03811115610ba857600080fd5b82016101008187031215610bbb57600080fd5b610bc3610713565b610bcc82610950565b8152610bda60208301610950565b6020820152610beb60408301610950565b6040820152610bfc60608301610950565b6060820152610c0d60808301610950565b6080820152610c1e60a08301610950565b60a0820152610c2f60c08301610950565b60c082015260e08201516001600160401b03811115610c4d57600080fd5b610c598882850161095b565b60e083015250825250610c6f85602084016109e0565b6020820152610c82856101a08401610a89565b60408201526102208201516001600160401b03811115610ca157600080fd5b610cad86828501610af1565b606083015250949350505050565b600060208284031215610ccd57600080fd5b81516001600160401b03811115610ce357600080fd5b61029c84828501610af156fea26469706673582212204f6823836a3988901f9e06025e34b4de2c5e223a49d470ffe40bfed450b2d54d64736f6c634300081d0033";

type KeeperReaderConstructorParams =
  | [linkLibraryAddresses: KeeperReaderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeeperReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class KeeperReader__factory extends ContractFactory {
  constructor(...args: KeeperReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        KeeperReader__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: KeeperReaderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KeeperReader> {
    return super.deploy(overrides || {}) as Promise<KeeperReader>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KeeperReader {
    return super.attach(address) as KeeperReader;
  }
  override connect(signer: Signer): KeeperReader__factory {
    return super.connect(signer) as KeeperReader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperReaderInterface {
    return new utils.Interface(_abi) as KeeperReaderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeeperReader {
    return new Contract(address, _abi, signerOrProvider) as KeeperReader;
  }
}

export interface KeeperReaderLibraryAddresses {
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
