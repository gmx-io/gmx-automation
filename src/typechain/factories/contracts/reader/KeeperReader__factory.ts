// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KeeperReader,
  KeeperReaderInterface,
} from "../../../contracts/reader/KeeperReader";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getOrders",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610b328061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806327b62ad914610030575b600080fd5b61004361003e366004610374565b610059565b60405161005091906104f5565b60405180910390f35b606060006100688585856101a6565b9050600081516001600160401b038111156100855761008561065e565b6040519080825280602002602001820160405280156100be57816020015b6100ab610272565b8152602001906001900390816100a35790505b50905060005b825181101561019c5760008382815181106100e1576100e1610674565b602090810291909101015160405163fdfc26f360e01b81526001600160a01b038a1660048201526024810182905290915073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9063fdfc26f390604401600060405180830381865af415801561014e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610176919081019061095c565b83838151811061018857610188610674565b6020908102919091010152506001016100c4565b5095945050505050565b6060836001600160a01b031663f069052a6040516020016101e5906020808252600a908201526913d491115497d31254d560b21b604082015260600190565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b16825260048201526024810186905260448101859052606401600060405180830381865afa158015610242573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261026a9190810190610ac8565b949350505050565b60408051610180810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301919091526060610160830152815260208101610328604080516101808101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516080810182526000808252602082810182905292820181905260608201529101908152602001606081525090565b6001600160a01b038116811461037157600080fd5b50565b60008060006060848603121561038957600080fd5b83356103948161035c565b95602085013595506040909401359392505050565b6001600160a01b03169052565b600081518084526020840193506020830160005b828110156103f15781516001600160a01b03168652602095860195909101906001016103ca565b5093949350505050565b634e487b7160e01b600052602160045260246000fd5b60098110610421576104216103fb565b9052565b60038110610421576104216103fb565b610440828251610411565b60208101516104526020840182610425565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008101516101008301526101208101516101208301526101408101516101408301526101608101516101608301525050565b600081518084526020840193506020830160005b828110156103f15781518652602095860195909101906001016104d7565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b8281101561065257868503603f190184528151805161024080885281516001600160a01b0390811691890191909152602082015116610260880152604081015161056b6102808901826103a9565b50606081015161057f6102a08901826103a9565b5060808101516105936102c08901826103a9565b5060a08101516105a76102e08901826103a9565b5060c08101516105bb6103008901826103a9565b5060e001516101006103208801526105d76103408801826103b6565b905060208201516105eb6020890182610435565b50604082810151805115156101a08a0152602081015115156101c08a01529081015115156101e08901526060908101511515610200890152909101518682036102208801529061063b81836104c3565b96505050602093840193919091019060010161051d565b50929695505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60405161018081016001600160401b03811182821017156106ad576106ad61065e565b60405290565b604051608081016001600160401b03811182821017156106ad576106ad61065e565b60405161010081016001600160401b03811182821017156106ad576106ad61065e565b604051601f8201601f191681016001600160401b03811182821017156107205761072061065e565b604052919050565b80516107338161035c565b919050565b60006001600160401b038211156107515761075161065e565b5060051b60200190565b600082601f83011261076c57600080fd5b815161077f61077a82610738565b6106f8565b8082825260208201915060208360051b8601019250858311156107a157600080fd5b602085015b8381101561019c5780516107b98161035c565b8352602092830192016107a6565b80516009811061073357600080fd5b80516003811061073357600080fd5b600061018082840312156107f857600080fd5b61080061068a565b905061080b826107c7565b8152610819602083016107d6565b602082015260408281015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e080830151908201526101008083015190820152610120808301519082015261014080830151908201526101609182015191810191909152919050565b8051801515811461073357600080fd5b6000608082840312156108b057600080fd5b6108b86106b3565b90506108c38261088e565b81526108d16020830161088e565b60208201526108e26040830161088e565b60408201526108f36060830161088e565b606082015292915050565b600082601f83011261090f57600080fd5b815161091d61077a82610738565b8082825260208201915060208360051b86010192508583111561093f57600080fd5b602085015b8381101561019c578051835260209283019201610944565b60006020828403121561096e57600080fd5b81516001600160401b0381111561098457600080fd5b8201610240818503121561099757600080fd5b61099f6106b3565b81516001600160401b038111156109b557600080fd5b820161010081870312156109c857600080fd5b6109d06106d5565b6109d982610728565b81526109e760208301610728565b60208201526109f860408301610728565b6040820152610a0960608301610728565b6060820152610a1a60808301610728565b6080820152610a2b60a08301610728565b60a0820152610a3c60c08301610728565b60c082015260e08201516001600160401b03811115610a5a57600080fd5b610a668882850161075b565b60e083015250825250610a7c85602084016107e5565b6020820152610a8f856101a0840161089e565b60408201526102208201516001600160401b03811115610aae57600080fd5b610aba868285016108fe565b606083015250949350505050565b600060208284031215610ada57600080fd5b81516001600160401b03811115610af057600080fd5b61026a848285016108fe56fea2646970667358221220169b106170ddd1ac38e6891ecfdefef16d9be4c0f4d8face2125e2aca36d283964736f6c634300081d0033";

type KeeperReaderConstructorParams =
  | [linkLibraryAddresses: KeeperReaderLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeeperReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class KeeperReader__factory extends ContractFactory {
  constructor(...args: KeeperReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        KeeperReader__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: KeeperReaderLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KeeperReader> {
    return super.deploy(overrides || {}) as Promise<KeeperReader>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KeeperReader {
    return super.attach(address) as KeeperReader;
  }
  override connect(signer: Signer): KeeperReader__factory {
    return super.connect(signer) as KeeperReader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperReaderInterface {
    return new utils.Interface(_abi) as KeeperReaderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeeperReader {
    return new Contract(address, _abi, signerOrProvider) as KeeperReader;
  }
}

export interface KeeperReaderLibraryAddresses {
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
