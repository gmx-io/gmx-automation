// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ReaderWithdrawalUtils,
  ReaderWithdrawalUtilsInterface,
} from "../../../contracts/reader/ReaderWithdrawalUtils";

const _abi = [
  {
    inputs: [],
    name: "EmptyMarketTokenSupply",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "poolValue",
        type: "int256",
      },
    ],
    name: "InvalidPoolValueForWithdrawal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "marketTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
      {
        internalType: "enum ISwapPricingUtils.SwapPricingType",
        name: "swapPricingType",
        type: "ISwapPricingUtils.SwapPricingType",
      },
    ],
    name: "getWithdrawalAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x610ce9610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063b027d32d1461003a575b600080fd5b61004d610048366004610923565b610066565b6040805192835260208301919091520160405180910390f35b6000806100cd6040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600073__$e53db83827f4e07ebc418caf7145b8c2d5$__63f2e2a4f58b8b8b600001518c602001518d6040015160405160200161013b906020808252601e908201527f4d41585f504e4c5f464143544f525f464f525f5749544844524157414c530000604082015260600190565b6040516020818303038152906040528051906020012060006040518863ffffffff1660e01b815260040161017597969594939291906109f0565b61018060405180830381865af4158015610193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b79190610a92565b905060008160000151136101e95780516040516390a6af3b60e01b815260048101919091526024015b60405180910390fd5b80516101f4906104c6565b825288516040516316ba208960e01b81526001600160a01b03909116600482015273__$e53db83827f4e07ebc418caf7145b8c2d5$__906316ba208990602401602060405180830381865af4158015610251573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102759190610b32565b6020830152604089015161028c908b908b9061051c565b604083015260608901516102a3908b908b9061051c565b6060830152602080890151015160408301516102bf9190610b61565b608083015260408801516020015160608301516102dc9190610b61565b60a0830181905260808301516102f29190610b78565b60c0830152815160208301516103099189916105c5565b60e08301819052608083015160c08401516103259291906105fb565b61010083015260e082015160a083015160c08401516103459291906105fb565b61012083015260208089015101516101008301516103639190610ba1565b6101408301526040880151602001516101208301516103829190610ba1565b82610160018181525050600073__$37ccc826b10054fe27f32c30ea3a599925$__63b5f97bcd8c8c6000015186610140015160008c8c6040518763ffffffff1660e01b81526004016103d996959493929190610bc3565b60c060405180830381865af41580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a9190610c21565b9050600073__$37ccc826b10054fe27f32c30ea3a599925$__63b5f97bcd8d8d6000015187610160015160008d8d6040518763ffffffff1660e01b815260040161046996959493929190610bc3565b60c060405180830381865af4158015610486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104aa9190610c21565b604092830151920151919c919b50909950505050505050505050565b6000808212156105185760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f73697469766560448201526064016101e0565b5090565b60008061053184604001518560600151610608565b905080856001600160a01b031663bd02d0f5610551876000015187610639565b6040518263ffffffff1660e01b815260040161056f91815260200190565b602060405180830381865afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b09190610b32565b6105ba9190610ba1565b9150505b9392505050565b6000816000036105e857604051630bb8f5a760e21b815260040160405180910390fd5b6105f38385846105fb565b949350505050565b60006105f38484846106c0565b6000816001600160a01b0316836001600160a01b03161461062a57600161062d565b60025b60ff1690505b92915050565b600060405160200161066a906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800160405160208183030381529060405280519060200120905092915050565b60008080600019858709858702925082811083820303915050806000036106fa578382816106f0576106f0610b8b565b04925050506105be565b8084116107415760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b60448201526064016101e0565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6001600160a01b03811681146107bf57600080fd5b50565b604051608081016001600160401b03811182821017156107f257634e487b7160e01b600052604160045260246000fd5b60405290565b60405161018081016001600160401b03811182821017156107f257634e487b7160e01b600052604160045260246000fd5b8035610834816107aa565b919050565b60006040828403121561084b57600080fd5b604080519081016001600160401b038111828210171561087b57634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b600060c082840312156108a757600080fd5b604051606081016001600160401b03811182821017156108d757634e487b7160e01b600052604160045260246000fd5b6040529050806108e78484610839565b81526108f68460408501610839565b60208201526109088460808501610839565b60408201525092915050565b80356006811061083457600080fd5b6000806000806000808688036101c081121561093e57600080fd5b8735610949816107aa565b96506080601f198201121561095d57600080fd5b506109666107c2565b6020880135610974816107aa565b81526040880135610984816107aa565b60208201526060880135610997816107aa565b604082015260808801356109aa816107aa565b606082015294506109be8860a08901610895565b935061016087013592506109d56101808801610829565b91506109e46101a08801610914565b90509295509295509295565b6001600160a01b03888116825287518116602080840191909152880151811660408084019190915288015181166060808401919091528801511660808201526101a08101610a4b60a083018880518252602090810151910152565b855160e083015260208601516101008301528451610120830152602085015161014083015283610160830152610a8661018083018415159052565b98975050505050505050565b6000610180828403128015610aa657600080fd5b506000610ab16107f8565b835181526020808501519082015260408085015190820152606080850151908201526080808501519082015260a0808501519082015260c0808501519082015260e080850151908201526101008085015190820152610120808501519082015261014080850151908201526101609384015193810193909352509092915050565b600060208284031215610b4457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761063357610633610b4b565b8082018082111561063357610633610b4b565b634e487b7160e01b600052601260045260246000fd5b600082610bbe57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b03878116825286811660208301526040820186905284151560608301528316608082015260c0810160068310610c1057634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b600060c0828403128015610c3457600080fd5b5060405160009060c081016001600160401b0381118282101715610c6657634e487b7160e01b83526041600452602483fd5b6040908152845182526020808601519083015284810151908201526060840151610c8f816107aa565b60608201526080848101519082015260a0938401519381019390935250909291505056fea264697066735822122078ea4152e954c6eb7afe47432eda132844ccba4d2ab79f28a493c71cd858f85f64736f6c634300081d0033";

type ReaderWithdrawalUtilsConstructorParams =
  | [
      linkLibraryAddresses: ReaderWithdrawalUtilsLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReaderWithdrawalUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ReaderWithdrawalUtils__factory extends ContractFactory {
  constructor(...args: ReaderWithdrawalUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ReaderWithdrawalUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ReaderWithdrawalUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$37ccc826b10054fe27f32c30ea3a599925\$__", "g"),
      linkLibraryAddresses[
        "contracts/pricing/SwapPricingUtils.sol:SwapPricingUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReaderWithdrawalUtils> {
    return super.deploy(overrides || {}) as Promise<ReaderWithdrawalUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReaderWithdrawalUtils {
    return super.attach(address) as ReaderWithdrawalUtils;
  }
  override connect(signer: Signer): ReaderWithdrawalUtils__factory {
    return super.connect(signer) as ReaderWithdrawalUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReaderWithdrawalUtilsInterface {
    return new utils.Interface(_abi) as ReaderWithdrawalUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReaderWithdrawalUtils {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReaderWithdrawalUtils;
  }
}

export interface ReaderWithdrawalUtilsLibraryAddresses {
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
  ["contracts/pricing/SwapPricingUtils.sol:SwapPricingUtils"]: string;
}
