// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LiquidationHandler,
  LiquidationHandlerInterface,
} from "../../../contracts/exchange/LiquidationHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract MultichainVault",
        name: "_multichainVault",
        type: "address",
      },
      {
        internalType: "contract OrderVault",
        name: "_orderVault",
        type: "address",
      },
      {
        internalType: "contract ISwapHandler",
        name: "_swapHandler",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "_referralStorage",
        type: "address",
      },
      {
        internalType: "contract IOrderExecutor",
        name: "_decreaseOrderExecutor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "InvalidNativeTokenSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decreaseOrderExecutor",
    outputs: [
      {
        internalType: "contract IOrderExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "providers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "oracleParams",
        type: "tuple",
      },
    ],
    name: "executeLiquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "multichainVault",
    outputs: [
      {
        internalType: "contract MultichainVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderVault",
    outputs: [
      {
        internalType: "contract OrderVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralStorage",
    outputs: [
      {
        internalType: "contract IReferralStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapHandler",
    outputs: [
      {
        internalType: "contract ISwapHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101a060405234801561001157600080fd5b506040516122e33803806122e38339810160408190526100309161008c565b6001600160a01b0398891660805296881660a05293871660c05293861660e05290851661010052841661012052908316610140528216610160521661018052610150565b6001600160a01b038116811461008957600080fd5b50565b60008060008060008060008060006101208a8c0312156100ab57600080fd5b89516100b681610074565b60208b01519099506100c781610074565b60408b01519098506100d881610074565b60608b01519097506100e981610074565b60808b01519096506100fa81610074565b60a08b015190955061010b81610074565b60c08b015190945061011c81610074565b60e08b015190935061012d81610074565b6101008b015190925061013f81610074565b809150509295985092959850929598565b60805160a05160c05160e05161010051610120516101405161016051610180516120916102526000396000818161037b01526107200152600081816101a50152610c500152600081816102df0152610c250152600081816103130152610bcd0152600081816102430152610ba20152600081816103470152818161055e0152610b770152600081816102ab01528181610444015281816104b20152818161078001528181610bf80152610ce0015260008181608d015281816102770152818161053601528181610628015281816108040152818161090701528181610aad01528181610b4f0152610f3501526000818161020f01526109da01526120916000f3fe6080604052600436106100845760003560e01c80626cc35e14610193578063109ebc49146101dd5780634a4a7b04146101fd578063528a65f414610231578063660d0d67146102655780637dc0d1d0146102995780638a53aaac146102cd57806393845e46146103015780639ff78c3014610335578063cedef2ef1461036957600080fd5b3661018e5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166321f8a7216040516020016100e19060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161011591815260200190565b602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610156919061124d565b9050336001600160a01b0382161461018c573360405163738d28df60e11b81526004016101839190611277565b60405180910390fd5b005b600080fd5b34801561019f57600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b6040516101d49190611277565b60405180910390f35b3480156101e957600080fd5b5061018c6101f8366004611299565b61039d565b34801561020957600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b34801561023d57600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b34801561027157600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b3480156102a557600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d957600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b34801561030d57600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b34801561034157600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b34801561037557600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b6103a5610800565b6104246040516020016103de906020808252601290820152712624a8aaa4a220aa24a7a72fa5a2a2a822a960711b604082015260600190565b60405160208183030381529060405280519060200120604051806040016040528060128152602001712624a8aaa4a220aa24a7a72fa5a2a2a822a960711b8152506109c3565b61042d81611496565b604051633d333c8560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d333c8590610479908490600401611697565b600060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b5050505060005a90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663070211e66040518163ffffffff1660e01b815260040160006040518083038186803b15801561050957600080fd5b505afa15801561051d573d6000803e3d6000fd5b505060405163cd17310760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152808b166044830152808a1660648301528816608482015286151560a48201526000925073__$24ecf20cb15267250766fd478de108983d$__915063cd1731079060c401602060405180830381865af41580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610608919061173d565b9050600073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__63fdfc26f37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610665929190611756565b600060405180830381865af4158015610682573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106aa9190810190611963565b905060006106bc838333876000610a73565b805151604082015160200151519192506106f1916106ec90309060088111156106e7576106e7611acf565b610e73565b610f08565b6040516392ee7d2360e01b815273__$6c133984afab440de9073e7935a24545e7$__906392ee7d239061074a907f0000000000000000000000000000000000000000000000000000000000000000908590600401611dd1565b60006040518083038186803b15801561076257600080fd5b505af4158015610776573d6000803e3d6000fd5b50505050505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107d857600080fd5b505af11580156107ec573d6000803e3d6000fd5b50505050506107f9610f33565b5050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f560405160200161084090611ea5565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161087491815260200190565b602060405180830381865afa158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b5919061173d565b905080156109055760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610183565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a60405160200161094390611ea5565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b1682526004820152600160248201526044016020604051808303816000875af115801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf919061173d565b5050565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb90610a119033908690600401611756565b602060405180830381865afa158015610a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a529190611ed6565b6109bf57338160405163a35b150b60e01b8152600401610183929190611ef3565b610a7b611063565b610a83611063565b602081018790526040810186905273__$e53db83827f4e07ebc418caf7145b8c2d5$__630988a8f77f0000000000000000000000000000000000000000000000000000000000000000610ad8895160e0015190565b6040518363ffffffff1660e01b8152600401610af5929190611f1f565b600060405180830381865af4158015610b12573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b3a9190810190611fa0565b60608083019190915281516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690915282517f0000000000000000000000000000000000000000000000000000000000000000821660209182015283517f0000000000000000000000000000000000000000000000000000000000000000831660409182015284517f0000000000000000000000000000000000000000000000000000000000000000841694019390935283517f00000000000000000000000000000000000000000000000000000000000000008316608090910181905284517f0000000000000000000000000000000000000000000000000000000000000000841660a09091015284517f000000000000000000000000000000000000000000000000000000000000000090931660c090930192909252825163f002606b60e01b81529251919263f002606b92600480830193928290030181865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd5919061173d565b8160800181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663716042456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d60919061173d565b60a08201526040810151600090610d79905160a0015190565b6001600160a01b031614610e255780515160408201515160a0015173__$e53db83827f4e07ebc418caf7145b8c2d5$__91635d95a47e916040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401608060405180830381865af4158015610dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1f919061203f565b60c08201525b6001600160a01b03851660e082015261010081018490526101208101836001811115610e5357610e53611acf565b90816001811115610e6657610e66611acf565b9052509695505050505050565b6000604051602001610eb6906020808252601e908201527f455845435554455f4f524445525f464541545552455f44495341424c45440000604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038516908201526060810183905260800160405160208183030381529060405280519060200120905092915050565b610f128282610ff0565b156109bf5760405163dd70e0c960e01b815260048101829052602401610183565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a604051602001610f7190611ea5565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b1682526004820152600060248201526044016020604051808303816000875af1158015610fc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fed919061173d565b50565b604051633d70e7e560e11b8152600481018290526000906001600160a01b03841690637ae1cfca90602401602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190611ed6565b9392505050565b604080516102208101825260006101408201818152610160830182905261018083018290526101a083018290526101c083018290526101e083018290526102008301829052825260208201529081016110ba61113e565b8152602001606081526020016000815260200160008152602001611123604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b81526000602082018190526040820181905260609091015290565b60408051610180810190915260006080820181815260a0830182905260c0830182905260e083018290526101008301829052610120830182905261014083019190915260606101608301528152602081016111f4604080516101808101909152806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152604080516080810182526000808252602082810182905292820181905260608201529101908152602001606081525090565b6001600160a01b0381168114610fed57600080fd5b805161124881611228565b919050565b60006020828403121561125f57600080fd5b815161105c81611228565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b8015158114610fed57600080fd5b600080600080600060a086880312156112b157600080fd5b85356112bc81611228565b945060208601356112cc81611228565b935060408601356112dc81611228565b925060608601356112ec8161128b565b915060808601356001600160401b0381111561130757600080fd5b86016060818903121561131957600080fd5b809150509295509295909350565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561135f5761135f611327565b60405290565b60405161018081016001600160401b038111828210171561135f5761135f611327565b604051608081016001600160401b038111828210171561135f5761135f611327565b60405161010081016001600160401b038111828210171561135f5761135f611327565b604051601f8201601f191681016001600160401b03811182821017156113f5576113f5611327565b604052919050565b60006001600160401b0382111561141657611416611327565b5060051b60200190565b600082601f83011261143157600080fd5b813561144461143f826113fd565b6113cd565b8082825260208201915060208360051b86010192508583111561146657600080fd5b602085015b8381101561148c57803561147e81611228565b83526020928301920161146b565b5095945050505050565b6000606082360312156114a857600080fd5b6114b061133d565b82356001600160401b038111156114c657600080fd5b6114d236828601611420565b82525060208301356001600160401b038111156114ee57600080fd5b6114fa36828601611420565b60208301525060408301356001600160401b0381111561151957600080fd5b830136601f82011261152a57600080fd5b803561153861143f826113fd565b8082825260208201915060208360051b85010192503683111561155a57600080fd5b602084015b838110156115fc5780356001600160401b0381111561157d57600080fd5b850136603f82011261158e57600080fd5b60208101356001600160401b038111156115aa576115aa611327565b6115bd601f8201601f19166020016113cd565b8181523660408484010111156115d257600080fd5b8160408401602083013760006020838301015280865250505060208301925060208101905061155f565b5060408501525091949350505050565b600081518084526020840193506020830160005b828110156116475781516001600160a01b0316865260209586019590910190600101611620565b5093949350505050565b6000815180845260005b818110156116775760208185018101518683018201520161165b565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260008251606060208401526116b3608084018261160c565b90506020840151601f198483030160408501526116d0828261160c565b6040860151858203601f190160608701528051808352919350602090810192508084019190600582901b85010160005b8281101561173157601f1986830301845261171c828651611651565b60209586019594909401939150600101611700565b50979650505050505050565b60006020828403121561174f57600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b600082601f83011261178057600080fd5b815161178e61143f826113fd565b8082825260208201915060208360051b8601019250858311156117b057600080fd5b602085015b8381101561148c5780516117c881611228565b8352602092830192016117b5565b80516009811061124857600080fd5b80516003811061124857600080fd5b6000610180828403121561180757600080fd5b61180f611365565b905061181a826117d6565b8152611828602083016117e5565b602082015260408281015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e080830151908201526101008083015190820152610120808301519082015261014080830151908201526101609182015191810191909152919050565b6000608082840312156118af57600080fd5b6118b7611388565b905081516118c48161128b565b815260208201516118d48161128b565b602082015260408201516118e78161128b565b604082015260608201516118fa8161128b565b606082015292915050565b600082601f83011261191657600080fd5b815161192461143f826113fd565b8082825260208201915060208360051b86010192508583111561194657600080fd5b602085015b8381101561148c57805183526020928301920161194b565b60006020828403121561197557600080fd5b81516001600160401b0381111561198b57600080fd5b8201610240818503121561199e57600080fd5b6119a6611388565b81516001600160401b038111156119bc57600080fd5b820161010081870312156119cf57600080fd5b6119d76113aa565b6119e08261123d565b81526119ee6020830161123d565b60208201526119ff6040830161123d565b6040820152611a106060830161123d565b6060820152611a216080830161123d565b6080820152611a3260a0830161123d565b60a0820152611a4360c0830161123d565b60c082015260e08201516001600160401b03811115611a6157600080fd5b611a6d8882850161176f565b60e083015250825250611a8385602084016117f4565b6020820152611a96856101a0840161189d565b60408201526102208201516001600160401b03811115611ab557600080fd5b611ac186828501611905565b606083015250949350505050565b634e487b7160e01b600052602160045260246000fd5b80516001600160a01b0390811683526020808301518216908401526040808301518216908401526060808301519091169083015260808082015190611b2c9084018261126a565b5060a0810151611b3f60a084018261126a565b5060c0810151611b5260c084018261126a565b505050565b60098110611b6757611b67611acf565b9052565b60038110611b6757611b67611acf565b611b86828251611b57565b6020810151611b986020840182611b6b565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008101516101008301526101208101516101208301526101408101516101408301526101608101516101608301525050565b600081518084526020840193506020830160005b82811015611647578151865260209586019590910190600101611c1d565b805161024080845281516001600160a01b0390811691850191909152602082015116610260840152604081015160009190611c7a61028086018261126a565b506060810151611c8e6102a086018261126a565b506080810151611ca26102c086018261126a565b5060a0810151611cb66102e086018261126a565b5060c0810151611cca61030086018261126a565b5060e00151610100610320850152611ce661034085018261160c565b90506020830151611cfa6020860182611b7b565b50604083810151805115156101a0870152602081015115156101c08701529081015115156101e08601526060908101511515610200860152830151848203610220860152611d488282611c09565b95945050505050565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b600081518084526020840193506020830160005b8281101561164757611dab868351611d51565b6080959095019460209190910190600101611d98565b60028110611b6757611b67611acf565b6001600160a01b03831681526040602082018190528251611df491830190611ae5565b602082015161012082015260006040830151610260610140840152611e1d6102a0840182611c3b565b90506060840151603f1984830301610160850152611e3b8282611d84565b915050608084015161018084015260a08401516101a084015260c0840151611e676101c0850182611d51565b5060e0840151611e7b61024085018261126a565b50610100840151610260840152610120840151611e9c610280850182611dc1565b50949350505050565b6020808252601790820152765245454e5452414e43595f47554152445f53544154555360481b604082015260600190565b600060208284031215611ee857600080fd5b815161105c8161128b565b6001600160a01b0383168152604060208201819052600090611f1790830184611651565b949350505050565b6001600160a01b0383168152604060208201819052600090611f179083018461160c565b600060808284031215611f5557600080fd5b611f5d611388565b90508151611f6a81611228565b81526020820151611f7a81611228565b60208201526040820151611f8d81611228565b604082015260608201516118fa81611228565b600060208284031215611fb257600080fd5b81516001600160401b03811115611fc857600080fd5b8201601f81018413611fd957600080fd5b8051611fe761143f826113fd565b8082825260208201915060208360071b85010192508683111561200957600080fd5b6020840193505b82841015612035576120228785611f43565b8252602082019150608084019350612010565b9695505050505050565b60006080828403121561205157600080fd5b61105c8383611f4356fea26469706673582212202845e90490e4f0058717e454c8f03367a871f8c0f648d865b4f5218cd756547364736f6c634300081d0033";

type LiquidationHandlerConstructorParams =
  | [linkLibraryAddresses: LiquidationHandlerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidationHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LiquidationHandler__factory extends ContractFactory {
  constructor(...args: LiquidationHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LiquidationHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LiquidationHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$24ecf20cb15267250766fd478de108983d\$__", "g"),
      linkLibraryAddresses[
        "contracts/liquidation/LiquidationUtils.sol:LiquidationUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$6c133984afab440de9073e7935a24545e7\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/ExecuteOrderUtils.sol:ExecuteOrderUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _multichainVault: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    _decreaseOrderExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LiquidationHandler> {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _oracle,
      _multichainVault,
      _orderVault,
      _swapHandler,
      _referralStorage,
      _decreaseOrderExecutor,
      overrides || {}
    ) as Promise<LiquidationHandler>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _multichainVault: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    _decreaseOrderExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _oracle,
      _multichainVault,
      _orderVault,
      _swapHandler,
      _referralStorage,
      _decreaseOrderExecutor,
      overrides || {}
    );
  }
  override attach(address: string): LiquidationHandler {
    return super.attach(address) as LiquidationHandler;
  }
  override connect(signer: Signer): LiquidationHandler__factory {
    return super.connect(signer) as LiquidationHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidationHandlerInterface {
    return new utils.Interface(_abi) as LiquidationHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidationHandler {
    return new Contract(address, _abi, signerOrProvider) as LiquidationHandler;
  }
}

export interface LiquidationHandlerLibraryAddresses {
  ["contracts/liquidation/LiquidationUtils.sol:LiquidationUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
  ["contracts/order/ExecuteOrderUtils.sol:ExecuteOrderUtils"]: string;
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
}
