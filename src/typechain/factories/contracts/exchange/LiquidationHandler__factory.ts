// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LiquidationHandler,
  LiquidationHandlerInterface,
} from "../../../contracts/exchange/LiquidationHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract MultichainVault",
        name: "_multichainVault",
        type: "address",
      },
      {
        internalType: "contract OrderVault",
        name: "_orderVault",
        type: "address",
      },
      {
        internalType: "contract ISwapHandler",
        name: "_swapHandler",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "_referralStorage",
        type: "address",
      },
      {
        internalType: "contract IOrderExecutor",
        name: "_decreaseOrderExecutor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "InvalidNativeTokenSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decreaseOrderExecutor",
    outputs: [
      {
        internalType: "contract IOrderExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "providers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "oracleParams",
        type: "tuple",
      },
    ],
    name: "executeLiquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "multichainVault",
    outputs: [
      {
        internalType: "contract MultichainVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderVault",
    outputs: [
      {
        internalType: "contract OrderVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralStorage",
    outputs: [
      {
        internalType: "contract IReferralStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapHandler",
    outputs: [
      {
        internalType: "contract ISwapHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b506040516200229138038062002291833981016040819052620000359162000093565b6001600160a01b0398891660805296881660a05293871660c05293861660e052908516610100528416610120529083166101405282166101605216610180526200016a565b6001600160a01b03811681146200009057600080fd5b50565b60008060008060008060008060006101208a8c031215620000b357600080fd5b8951620000c0816200007a565b60208b0151909950620000d3816200007a565b60408b0151909850620000e6816200007a565b60608b0151909750620000f9816200007a565b60808b01519096506200010c816200007a565b60a08b01519095506200011f816200007a565b60c08b015190945062000132816200007a565b60e08b015190935062000145816200007a565b6101008b015190925062000159816200007a565b809150509295985092959850929598565b60805160a05160c05160e05161010051610120516101405161016051610180516120246200026d6000396000818161037b01526107200152600081816101a50152610c500152600081816102df0152610c250152600081816103130152610bcd0152600081816102430152610ba20152600081816103470152818161055e0152610b770152600081816102ab01528181610444015281816104b20152818161078001528181610bf80152610ce0015260008181608d015281816102770152818161053601528181610628015281816108040152818161090701528181610aad01528181610b4f0152610f3501526000818161020f01526109da01526120246000f3fe6080604052600436106100845760003560e01c80626cc35e14610193578063109ebc49146101dd5780634a4a7b04146101fd578063528a65f414610231578063660d0d67146102655780637dc0d1d0146102995780638a53aaac146102cd57806393845e46146103015780639ff78c3014610335578063cedef2ef1461036957600080fd5b3661018e5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166321f8a7216040516020016100e19060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161011591815260200190565b602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610156919061124d565b9050336001600160a01b0382161461018c573360405163738d28df60e11b81526004016101839190611277565b60405180910390fd5b005b600080fd5b34801561019f57600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b6040516101d49190611277565b60405180910390f35b3480156101e957600080fd5b5061018c6101f8366004611299565b61039d565b34801561020957600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b34801561023d57600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b34801561027157600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b3480156102a557600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d957600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b34801561030d57600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b34801561034157600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b34801561037557600080fd5b506101c77f000000000000000000000000000000000000000000000000000000000000000081565b6103a5610800565b6104246040516020016103de906020808252601290820152712624a8aaa4a220aa24a7a72fa5a2a2a822a960711b604082015260600190565b60405160208183030381529060405280519060200120604051806040016040528060128152602001712624a8aaa4a220aa24a7a72fa5a2a2a822a960711b8152506109c3565b61042d81611494565b604051633d333c8560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d333c8590610479908490600401611673565b600060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b5050505060005a90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663070211e66040518163ffffffff1660e01b815260040160006040518083038186803b15801561050957600080fd5b505afa15801561051d573d6000803e3d6000fd5b505060405163cd17310760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152808b166044830152808a1660648301528816608482015286151560a48201526000925073__$24ecf20cb15267250766fd478de108983d$__915063cd1731079060c401602060405180830381865af41580156105e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106089190611711565b9050600073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__63fdfc26f37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b815260040161066592919061172a565b600060405180830381865af4158015610682573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106aa9190810190611933565b905060006106bc838333876000610a73565b805151604082015160200151519192506106f1916106ec90309060088111156106e7576106e7611a8e565b610e73565b610f08565b6040516392ee7d2360e01b815273__$6c133984afab440de9073e7935a24545e7$__906392ee7d239061074a907f0000000000000000000000000000000000000000000000000000000000000000908590600401611d16565b60006040518083038186803b15801561076257600080fd5b505af4158015610776573d6000803e3d6000fd5b50505050505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107d857600080fd5b505af11580156107ec573d6000803e3d6000fd5b50505050506107f9610f33565b5050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f560405160200161084090611e3c565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161087491815260200190565b602060405180830381865afa158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b59190611711565b905080156109055760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610183565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a60405160200161094390611e3c565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b1682526004820152600160248201526044016020604051808303816000875af115801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190611711565b5050565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb90610a11903390869060040161172a565b602060405180830381865afa158015610a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a529190611e6d565b6109bf57338160405163a35b150b60e01b8152600401610183929190611e8a565b610a7b611063565b610a83611063565b602081018790526040810186905273__$e53db83827f4e07ebc418caf7145b8c2d5$__630988a8f77f0000000000000000000000000000000000000000000000000000000000000000610ad8895160e0015190565b6040518363ffffffff1660e01b8152600401610af5929190611eb6565b600060405180830381865af4158015610b12573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b3a9190810190611f37565b60608083019190915281516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690915282517f0000000000000000000000000000000000000000000000000000000000000000821660209182015283517f0000000000000000000000000000000000000000000000000000000000000000831660409182015284517f0000000000000000000000000000000000000000000000000000000000000000841694019390935283517f00000000000000000000000000000000000000000000000000000000000000008316608090910181905284517f0000000000000000000000000000000000000000000000000000000000000000841660a09091015284517f000000000000000000000000000000000000000000000000000000000000000090931660c090930192909252825163f002606b60e01b81529251919263f002606b92600480830193928290030181865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190611711565b8160800181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663716042456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190611711565b60a08201526040810151600090610d79905160a0015190565b6001600160a01b031614610e255780515160408201515160a0015173__$e53db83827f4e07ebc418caf7145b8c2d5$";

type LiquidationHandlerConstructorParams =
  | [linkLibraryAddresses: LiquidationHandlerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidationHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class LiquidationHandler__factory extends ContractFactory {
  constructor(...args: LiquidationHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        LiquidationHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: LiquidationHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$24ecf20cb15267250766fd478de108983d\$__", "g"),
      linkLibraryAddresses[
        "contracts/liquidation/LiquidationUtils.sol:LiquidationUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$6c133984afab440de9073e7935a24545e7\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/ExecuteOrderUtils.sol:ExecuteOrderUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _multichainVault: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    _decreaseOrderExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LiquidationHandler> {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _oracle,
      _multichainVault,
      _orderVault,
      _swapHandler,
      _referralStorage,
      _decreaseOrderExecutor,
      overrides || {}
    ) as Promise<LiquidationHandler>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _multichainVault: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    _decreaseOrderExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _oracle,
      _multichainVault,
      _orderVault,
      _swapHandler,
      _referralStorage,
      _decreaseOrderExecutor,
      overrides || {}
    );
  }
  override attach(address: string): LiquidationHandler {
    return super.attach(address) as LiquidationHandler;
  }
  override connect(signer: Signer): LiquidationHandler__factory {
    return super.connect(signer) as LiquidationHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidationHandlerInterface {
    return new utils.Interface(_abi) as LiquidationHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidationHandler {
    return new Contract(address, _abi, signerOrProvider) as LiquidationHandler;
  }
}

export interface LiquidationHandlerLibraryAddresses {
  ["contracts/liquidation/LiquidationUtils.sol:LiquidationUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
  ["contracts/order/ExecuteOrderUtils.sol:ExecuteOrderUtils"]: string;
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
}
