/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DepositHandler,
  DepositHandlerInterface,
} from "../../../contracts/exchange/DepositHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract Oracle",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract DepositVault",
        name: "_depositVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [],
    name: "EndOfOracleSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startingGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "estimatedGasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAdditionalGasForExecution",
        type: "uint256",
      },
    ],
    name: "InsufficientExecutionGas",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startingGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minHandleErrorGas",
        type: "uint256",
      },
    ],
    name: "InsufficientExecutionGasForErrorHandling",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minHandleExecutionErrorGas",
        type: "uint256",
      },
    ],
    name: "InsufficientHandleExecutionErrorGas",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "InvalidNativeTokenSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "primaryTokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "primaryPricesLength",
        type: "uint256",
      },
    ],
    name: "InvalidPrimaryPricesForSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestExpirationAge",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "requestType",
        type: "string",
      },
    ],
    name: "RequestNotYetCancellable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialLongToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialShortToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Deposit.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "initialLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minMarketTokens",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Deposit.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Deposit.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Deposit.Props",
        name: "deposit",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "_executeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "cancelDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "address",
            name: "initialLongToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "initialShortToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "longTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "shortTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "minMarketTokens",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct DepositUtils.CreateDepositParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createDeposit",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositVault",
    outputs: [
      {
        internalType: "contract DepositVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "providers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "oracleParams",
        type: "tuple",
      },
    ],
    name: "executeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract Oracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "primaryTokens",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props[]",
            name: "primaryPrices",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "minTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct OracleUtils.SimulatePricesParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "simulateExecuteDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620030f5380380620030f5833981016040819052620000359162000077565b6001600160a01b0394851660805292841660a052831660c052821660e0521661010052620000f7565b6001600160a01b03811681146200007457600080fd5b50565b600080600080600060a086880312156200009057600080fd5b85516200009d816200005e565b6020870151909550620000b0816200005e565b6040870151909450620000c3816200005e565b6060870151909350620000d6816200005e565b6080870151909250620000e9816200005e565b809150509295509295909350565b60805160a05160c05160e05161010051612ee16200021460003960008181610336015281816107450152818161090901528181610aa501526117250152600081816102e201528181610723015281816108e801528181610a7601526117030152600081816102ae01528181610461015281816104d701528181610ad401528181610c590152610e8b015260008181608e0152818161025a01528181610597015281816106a501528181610701015281816107f101528181610a0f01528181610a4701528181610ce301528181610d6e01528181610d9a01528181610dc701528181610fbc015281816110bf01528181611175015281816113280152818161166501526116e10152600081816102190152610f1f0152612ee16000f3fe6080604052600436106100855760003560e01c80632a3db3eb146101945780632f603040146101b457806331404484146101e75780634a4a7b0414610207578063660d0d671461024857806375e726571461027c5780637dc0d1d01461029c5780639ff78c30146102d0578063c30d891014610304578063d7cd39491461032457600080fd5b3661018f5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166321f8a7216040516020016100e29060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161011691815260200190565b602060405180830381865afa158015610133573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101579190611c17565b9050336001600160a01b0382161461018d573360405163738d28df60e11b81526004016101849190611c41565b60405180910390fd5b005b600080fd5b3480156101a057600080fd5b5061018d6101af366004611e10565b610358565b3480156101c057600080fd5b506101d46101cf366004611f37565b610684565b6040519081526020015b60405180910390f35b3480156101f357600080fd5b5061018d610202366004611f8e565b6107c2565b34801561021357600080fd5b5061023b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516101de9190611c41565b34801561025457600080fd5b5061023b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561028857600080fd5b5061018d610297366004612047565b6109c1565b3480156102a857600080fd5b5061023b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102dc57600080fd5b5061023b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561031057600080fd5b5061018d61031f3660046121bd565b610bbe565b34801561033057600080fd5b5061023b7f000000000000000000000000000000000000000000000000000000000000000081565b6103a860405160200161036a906121ff565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250610f08565b6020810151518151518291146103dc5780515160208201515160405163663de02360e01b8152610184929190600401612223565b60005b8151518110156104d45760008260000151828151811061040157610401612231565b6020026020010151905060008360200151838151811061042357610423612231565b6020908102919091018101516040516347cba33d60e01b81526001600160a01b038581166004830152825160248301529282015160448201529092507f0000000000000000000000000000000000000000000000000000000000000000909116906347cba33d90606401600060405180830381600087803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b50505050505080806104cc9061225d565b9150506103df565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fa101977826040015183606001516040518363ffffffff1660e01b815260040161052b929190612223565b600060405180830381600087803b15801561054557600080fd5b505af1158015610559573d6000803e3d6000fd5b50505050610565610fb8565b60405163fdfc26f360e01b815260009073__$b63e253a228f0e32f671cc49c7fc32477c$__9063fdfc26f3906105c1907f0000000000000000000000000000000000000000000000000000000000000000908890600401612276565b600060405180830381865af41580156105de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106069190810190612372565b6040516375e7265760e01b815290915030906375e72657906106309087908590339060040161254a565b600060405180830381600087803b15801561064a57600080fd5b505af115801561065e573d6000803e3d6000fd5b505050505061066b611173565b6040516327246e6d60e11b815260040160405180910390fd5b600061068e610fb8565b6106a060405160200161036a906121ff565b6106d27f00000000000000000000000000000000000000000000000000000000000000006106cd30611229565b6112b6565b604051639ef3818960e01b815273__$b47f57a87b0fdb80638269130c078613b3$__90639ef3818990610771907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090899089906004016126e6565b602060405180830381865af415801561078e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b29190612849565b90506107bc611173565b92915050565b6107ca610fb8565b6107dc60405160200161036a906121ff565b60005a60405163fdfc26f360e01b81529091507f00000000000000000000000000000000000000000000000000000000000000009060009073__$b63e253a228f0e32f671cc49c7fc32477c$__9063fdfc26f3906108409085908890600401612276565b600060405180830381865af415801561085d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108859190810190612372565b9050610894826106cd306112e1565b6108cb6108a682602001516060015190565b6040518060400160405280600781526020016611195c1bdcda5d60ca1b815250611324565b73__$b47f57a87b0fdb80638269130c078613b3$__636c6a42ac837f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008861093287515190565b60408051808201825260158152741554d15497d2539255125055115117d0d05390d153605a1b602082015290516001600160e01b031960e089901b1681526109839695949392918c916004016128b2565b60006040518083038186803b15801561099b57600080fd5b505af41580156109af573d6000803e3d6000fd5b505050505050506109be611173565b50565b333014610a05576040805163a35b150b60e01b815233600480830191909152602482019290925260448101919091526329a2a62360e11b6064820152608401610184565b60005a9050610a377f00000000000000000000000000000000000000000000000000000000000000006106cd30611442565b60006040518061012001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001868152602001846001600160a01b0316815260200183815260200160036005811115610b2f57610b2f61291d565b81526001602090910152604051635f973d4f60e01b815290915073__$a26e5ecaf38b60f56220843100c2d8b777$__90635f973d4f90610b759084908890600401612a51565b602060405180830381865af4158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb69190612849565b505050505050565b610bc6610fb8565b610c39604051602001610bf9906020808252600c908201526b27a92222a92fa5a2a2a822a960a11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600c81526020016b27a92222a92fa5a2a2a822a960a11b815250610f08565b610c4281612b26565b604051633d333c8560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d333c8590610c8e908490600401612c64565b600060405180830381600087803b158015610ca857600080fd5b505af1158015610cbc573d6000803e3d6000fd5b5050505060005a9050600073__$b63e253a228f0e32f671cc49c7fc32477c$__63fdfc26f37f0000000000000000000000000000000000000000000000000000000000000000876040518363ffffffff1660e01b8152600401610d20929190612276565b600060405180830381865af4158015610d3d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d659190810190612372565b90506000610d937f000000000000000000000000000000000000000000000000000000000000000083611483565b9050610dc07f000000000000000000000000000000000000000000000000000000000000000084836115d3565b6000610dec7f00000000000000000000000000000000000000000000000000000000000000008561161b565b6040516375e7265760e01b815290915030906375e72657908390610e18908b908890339060040161254a565b600060405180830381600088803b158015610e3257600080fd5b5087f193505050508015610e44575060015b610e85573d808015610e72576040519150601f19603f3d011682016040523d82523d6000602084013e610e77565b606091505b50610e83888683611660565b505b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ee357600080fd5b505af1158015610ef7573d6000803e3d6000fd5b5050505050610f04611173565b5050565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb90610f569033908690600401612276565b602060405180830381865afa158015610f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f979190612d02565b610f0457338160405163a35b150b60e01b8152600401610184929190612d1f565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f5604051602001610ff890612d43565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161102c91815260200190565b602060405180830381865afa158015611049573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106d9190612849565b905080156110bd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610184565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a6040516020016110fb90612d43565b6040516020818303038152906040528051906020012060016040518363ffffffff1660e01b8152600401611130929190612223565b6020604051808303816000875af115801561114f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f049190612849565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a6040516020016111b190612d43565b6040516020818303038152906040528051906020012060006040518363ffffffff1660e01b81526004016111e6929190612223565b6020604051808303816000875af1158015611205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109be9190612849565b600060405160200161126c906020808252601f908201527f4352454154455f4445504f5349545f464541545552455f44495341424c454400604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b6112c0828261178e565b15610f045760405163dd70e0c960e01b815260048101829052602401610184565b600060405160200161126c906020808252601f908201527f43414e43454c5f4445504f5349545f464541545552455f44495341424c454400604082015260600190565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f560405160200161139090602080825260179082015276524551554553545f45585049524154494f4e5f54494d4560481b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016113c491815260200190565b602060405180830381865afa1580156113e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114059190612849565b905060006114138442612d74565b90508181101561143c57808284604051631d04cc8760e31b815260040161018493929190612d87565b50505050565b600060405160200161126c906020808252818101527f455845435554455f4445504f5349545f464541545552455f44495341424c4544604082015260600190565b600080836001600160a01b031663bd02d0f561149d611801565b6040518263ffffffff1660e01b81526004016114bb91815260200190565b602060405180830381865afa1580156114d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fc9190612849565b9050600061150d8451610100015190565b51845160e001515161151f9190612da6565b9050600061152d8383612db9565b90508061153f866020015160a0015190565b876001600160a01b031663bd02d0f5611556611857565b6040518263ffffffff1660e01b815260040161157491815260200190565b602060405180830381865afa158015611591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b59190612849565b6115bf9190612da6565b6115c99190612da6565b9695505050505050565b60006115de8461188e565b90506115ea8183612da6565b83101561143c5760405163bb416f9360e01b8152600481018490526024810183905260448101829052606401610184565b60008061162784611953565b90508083101561164e578281604051631e4a4e5960e21b8152600401610184929190612223565b6116588184612d74565b949350505050565b61168a7f0000000000000000000000000000000000000000000000000000000000000000826119b7565b6000611697826020015190565b90506116a38183611a05565b60006116ae83611a6d565b50604051631b1a90ab60e21b815290915073__$b47f57a87b0fdb80638269130c078613b3$";

type DepositHandlerConstructorParams =
  | [linkLibraryAddresses: DepositHandlerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class DepositHandler__factory extends ContractFactory {
  constructor(...args: DepositHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        DepositHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: DepositHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b63e253a228f0e32f671cc49c7fc32477c\\$__", "g"),
      linkLibraryAddresses[
        "contracts/deposit/DepositStoreUtils.sol:DepositStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b47f57a87b0fdb80638269130c078613b3\\$__", "g"),
      linkLibraryAddresses["contracts/deposit/DepositUtils.sol:DepositUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a26e5ecaf38b60f56220843100c2d8b777\\$__", "g"),
      linkLibraryAddresses[
        "contracts/deposit/ExecuteDepositUtils.sol:ExecuteDepositUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _depositVault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositHandler> {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _oracle,
      _depositVault,
      overrides || {}
    ) as Promise<DepositHandler>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _depositVault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _oracle,
      _depositVault,
      overrides || {}
    );
  }
  override attach(address: string): DepositHandler {
    return super.attach(address) as DepositHandler;
  }
  override connect(signer: Signer): DepositHandler__factory {
    return super.connect(signer) as DepositHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositHandlerInterface {
    return new utils.Interface(_abi) as DepositHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositHandler {
    return new Contract(address, _abi, signerOrProvider) as DepositHandler;
  }
}

export interface DepositHandlerLibraryAddresses {
  ["contracts/deposit/DepositStoreUtils.sol:DepositStoreUtils"]: string;
  ["contracts/deposit/DepositUtils.sol:DepositUtils"]: string;
  ["contracts/deposit/ExecuteDepositUtils.sol:ExecuteDepositUtils"]: string;
}
