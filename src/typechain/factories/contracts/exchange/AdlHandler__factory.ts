// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AdlHandler,
  AdlHandlerInterface,
} from "../../../contracts/exchange/AdlHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract MultichainVault",
        name: "_multichainVault",
        type: "address",
      },
      {
        internalType: "contract OrderVault",
        name: "_orderVault",
        type: "address",
      },
      {
        internalType: "contract ISwapHandler",
        name: "_swapHandler",
        type: "address",
      },
      {
        internalType: "contract IReferralStorage",
        name: "_referralStorage",
        type: "address",
      },
      {
        internalType: "contract IOrderExecutor",
        name: "_decreaseOrderExecutor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "pnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPnlFactorForAdl",
        type: "uint256",
      },
    ],
    name: "AdlNotRequired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "nextPnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "pnlToPoolFactor",
        type: "int256",
      },
    ],
    name: "InvalidAdl",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "InvalidNativeTokenSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "nextPnlToPoolFactor",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "minPnlFactorForAdl",
        type: "uint256",
      },
    ],
    name: "PnlOvercorrected",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decreaseOrderExecutor",
    outputs: [
      {
        internalType: "contract IOrderExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "providers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "oracleParams",
        type: "tuple",
      },
    ],
    name: "executeAdl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "multichainVault",
    outputs: [
      {
        internalType: "contract MultichainVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderVault",
    outputs: [
      {
        internalType: "contract OrderVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "referralStorage",
    outputs: [
      {
        internalType: "contract IReferralStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapHandler",
    outputs: [
      {
        internalType: "contract ISwapHandler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "providers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "oracleParams",
        type: "tuple",
      },
    ],
    name: "updateAdlState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b506040516200392538038062003925833981016040819052620000359162000093565b6001600160a01b0398891660805296881660a05293871660c05293861660e052908516610100528416610120529083166101405282166101605216610180526200016a565b6001600160a01b03811681146200009057600080fd5b50565b60008060008060008060008060006101208a8c031215620000b357600080fd5b8951620000c0816200007a565b60208b0151909950620000d3816200007a565b60408b0151909850620000e6816200007a565b60608b0151909750620000f9816200007a565b60808b01519096506200010c816200007a565b60a08b01519095506200011f816200007a565b60c08b015190945062000132816200007a565b60e08b015190935062000145816200007a565b6101008b015190925062000159816200007a565b809150509295985092959850929598565b60805160a05160c05160e0516101005161012051610140516101605161018051613664620002c1600039600081816103860152610bb80152600081816101b001526112cb0152600081816102ea01526112a001526000818161031e015261124801526000818161024e015261121d015260008181610352015281816104e4015281816108ed01526111f20152600081816102b6015281816104400152818161050c015281816105940152818161064c0152818161073a015281816107e40152818161095701528181610c3801528181610d0501528181611273015261135b015260008181609801528181610282015281816104bc01528181610712015281816107c3015281816108be01528181610acc01528181610c1701528181610c9a01528181610d8a01528181610e8d01528181610ff70152818161112801526111ca01526000818161021a0152610f5c01526136646000f3fe60806040526004361061008f5760003560e01c80626cc35e1461019e57806312a758f0146101e85780634a4a7b0414610208578063528a65f41461023c578063660d0d67146102705780637dc0d1d0146102a45780638a53aaac146102d857806393845e461461030c5780639ff78c3014610340578063cedef2ef14610374578063f09f032d146103a857600080fd5b366101995760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166321f8a7216040516020016100ec9060208082526003908201526215d39560ea1b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161012091815260200190565b602060405180830381865afa15801561013d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016191906126da565b9050336001600160a01b03821614610197573360405163738d28df60e11b815260040161018e9190612704565b60405180910390fd5b005b600080fd5b3480156101aa57600080fd5b506101d27f000000000000000000000000000000000000000000000000000000000000000081565b6040516101df9190612704565b60405180910390f35b3480156101f457600080fd5b5061019761020336600461273e565b6103c8565b34801561021457600080fd5b506101d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561024857600080fd5b506101d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561027c57600080fd5b506101d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b057600080fd5b506101d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156102e457600080fd5b506101d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561031857600080fd5b506101d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561034c57600080fd5b506101d27f000000000000000000000000000000000000000000000000000000000000000081565b34801561038057600080fd5b506101d27f000000000000000000000000000000000000000000000000000000000000000081565b3480156103b457600080fd5b506101976103c336600461279f565b610612565b6103d0610d86565b6104206040516020016103e29061282e565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016920a2262fa5a2a2a822a960b11b815250610f45565b610429816129bf565b604051633d333c8560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d333c8590610475908490600401612b9e565b600060405180830381600087803b15801561048f57600080fd5b505af11580156104a3573d6000803e3d6000fd5b505060405163363a231960e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301527f00000000000000000000000000000000000000000000000000000000000000008116604483015287166064820152851515608482015273__$f1c6d6b2bd25207c7e7320f7c6bcfa9419$__925063d8e88c64915060a40160006040518083038186803b15801561057a57600080fd5b505af415801561058e573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105ec57600080fd5b505af1158015610600573d6000803e3d6000fd5b505050505061060d610ff5565b505050565b61061a610d86565b61062c6040516020016103e29061282e565b610635816129bf565b604051633d333c8560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d333c8590610681908490600401612b9e565b600060405180830381600087803b15801561069b57600080fd5b505af11580156106af573d6000803e3d6000fd5b505050506106f86040518060e001604052806000815260200160008019168152602001600015158152602001600081526020016000815260200160008152602001600081525090565b5a815260405163d798ffa160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015288166044820152851515606482015273__$f1c6d6b2bd25207c7e7320f7c6bcfa9419$__9063d798ffa19060840160006040518083038186803b1580156107a657600080fd5b505af41580156107ba573d6000803e3d6000fd5b5050505061085a7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000898860405160200161083f9060208082526016908201527513505617d4139317d19050d513d497d193d497d0511360521b604082015260600190565b604051602081830303815290604052805190602001206110ae565b6060840152608083015215156040820181905261089657806080015181606001516040516368376c5f60e11b815260040161018e929190612c3c565b73__$f1c6d6b2bd25207c7e7320f7c6bcfa9419$__63dbadc9b96040518061010001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018b6001600160a01b031681526020018a6001600160a01b03168152602001896001600160a01b0316815260200188151581526020018781526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f002606b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d79190612c4a565b90526040805160e084811b6001600160e01b031916825283516001600160a01b03908116600484015260208501518116602484015292840151831660448301526060840151831660648301526080840151909216608482015260a0830151151560a482015260c083015160c482015291015160e482015261010401602060405180830381865af4158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a939190612c4a565b6020820181905260405163fdfc26f360e01b815260009173__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$__9163fdfc26f391610af5917f00000000000000000000000000000000000000000000000000000000000000009190600401612c63565b600060405180830381865af4158015610b12573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b3a9190810190612e6c565b90506000610b5483602001518333866000015160016110ee565b80515160408201516020015151919250610b8991610b849030906008811115610b7f57610b7f612fc7565b6114db565b611571565b6040516392ee7d2360e01b815273__$6c133984afab440de9073e7935a24545e7$__906392ee7d2390610be2907f0000000000000000000000000000000000000000000000000000000000000000908590600401613246565b60006040518083038186803b158015610bfa57600080fd5b505af4158015610c0e573d6000803e3d6000fd5b50505050610c607f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008b8a600161159c565b60a08401819052608084015113610c95578260a00151836080015160405162753f0f60e61b815260040161018e929190612c3c565b610cc07f00000000000000000000000000000000000000000000000000000000000000008a8961172f565b60c08401819052610cd0906117b3565b8360a001511215610d00578260a001518360c00151604051634f85e3ef60e11b815260040161018e929190612c3c565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610d5d57600080fd5b505af1158015610d71573d6000803e3d6000fd5b5050505050610d7e610ff5565b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f5604051602001610dc69061336c565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610dfa91815260200190565b602060405180830381865afa158015610e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3b9190612c4a565b90508015610e8b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161018e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a604051602001610ec99061336c565b6040516020818303038152906040528051906020012060016040518363ffffffff1660e01b8152600401610efe929190612c3c565b6020604051808303816000875af1158015610f1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f419190612c4a565b5050565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb90610f939033908690600401612c63565b602060405180830381865afa158015610fb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd4919061339d565b610f4157338160405163a35b150b60e01b815260040161018e9291906133ba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a6040516020016110339061336c565b6040516020818303038152906040528051906020012060006040518363ffffffff1660e01b8152600401611068929190612c3c565b6020604051808303816000875af1158015611087573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ab9190612c4a565b50565b6000806000806110be8988611821565b905060006110cc89836118b2565b90506110db8a83838a8a611a28565b9450945094505050955095509592505050565b6110f66124c6565b6110fe6124c6565b602081018790526040810186905273__$e53db83827f4e07ebc418caf7145b8c2d5$__630988a8f77f0000000000000000000000000000000000000000000000000000000000000000611153895160e0015190565b6040518363ffffffff1660e01b81526004016111709291906133de565b600060405180830381865af415801561118d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b5919081019061345f565b60608083019190915281516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690915282517f0000000000000000000000000000000000000000000000000000000000000000821660209182015283517f0000000000000000000000000000000000000000000000000000000000000000831660409182015284517f0000000000000000000000000000000000000000000000000000000000000000841694019390935283517f00000000000000000000000000000000000000000000000000000000000000008316608090910181905284517f0000000000000000000000000000000000000000000000000000000000000000841660a09091015284517f000000000000000000000000000000000000000000000000000000000000000090931660c090930192909252825163f002606b60e01b81529251919263f002606b92600480830193928290030181865afa15801561132c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113509190612c4a565b8160800181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663716042456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113db9190612c4a565b60a082015260408101516000906113f4905160a0015190565b6001600160a01b03161461148b578051516040808301515160a001519051632ecad23f60e11b815273__$e53db83827f4e07ebc418caf7145b8c2d5$__92635d95a47e92611444926004016134ef565b608060405180830381865af4158015611461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114859190613509565b60c08201525b6001600160a01b03851660e0820152610100810184905261012081018360018111156114b9576114b9612fc7565b908160018111156114cc576114cc612fc7565b90525090505b95945050505050565b600060405160200161151d906020808252601c908201527b11561150d5551157d0511317d191505515549157d11254d05093115160221b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03851690820152606081018390526080015b6040516020818303038152906040528051906020012090505b92915050565b61157b8282611a7c565b15610f415760405163dd70e0c960e01b81526004810182905260240161018e565b6000806115a98786611821565b905060006040518060600160405280886001600160a01b0316635dcf719485602001516040518263ffffffff1660e01b81526004016115e89190612704565b6040805180830381865afa158015611604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116289190613525565b8152602001886001600160a01b0316635dcf719485604001516040518263ffffffff1660e01b815260040161165d9190612704565b6040805180830381865afa158015611679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169d9190613525565b8152602001886001600160a01b0316635dcf719485606001516040518263ffffffff1660e01b81526004016116d29190612704565b6040805180830381865afa1580156116ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117129190613525565b905290506117238883838888611ae8565b98975050505050505050565b6000836001600160a01b031663bd02d0f561174a8585611b2c565b6040518263ffffffff1660e01b815260040161176891815260200190565b602060405180830381865afa158015611785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a99190612c4a565b90505b9392505050565b60006001600160ff1b0382111561181d5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161018e565b5090565b61182961255d565b60405163a8d8fff560e01b815260009073__$ff439aa65a80c9eec648f15db20b189505$";

type AdlHandlerConstructorParams =
  | [linkLibraryAddresses: AdlHandlerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdlHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class AdlHandler__factory extends ContractFactory {
  constructor(...args: AdlHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        AdlHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: AdlHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$f1c6d6b2bd25207c7e7320f7c6bcfa9419\$__", "g"),
      linkLibraryAddresses["contracts/adl/AdlUtils.sol:AdlUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$6c133984afab440de9073e7935a24545e7\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/ExecuteOrderUtils.sol:ExecuteOrderUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$ff439aa65a80c9eec648f15db20b189505\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _multichainVault: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    _decreaseOrderExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AdlHandler> {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _oracle,
      _multichainVault,
      _orderVault,
      _swapHandler,
      _referralStorage,
      _decreaseOrderExecutor,
      overrides || {}
    ) as Promise<AdlHandler>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _multichainVault: PromiseOrValue<string>,
    _orderVault: PromiseOrValue<string>,
    _swapHandler: PromiseOrValue<string>,
    _referralStorage: PromiseOrValue<string>,
    _decreaseOrderExecutor: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _oracle,
      _multichainVault,
      _orderVault,
      _swapHandler,
      _referralStorage,
      _decreaseOrderExecutor,
      overrides || {}
    );
  }
  override attach(address: string): AdlHandler {
    return super.attach(address) as AdlHandler;
  }
  override connect(signer: Signer): AdlHandler__factory {
    return super.connect(signer) as AdlHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdlHandlerInterface {
    return new utils.Interface(_abi) as AdlHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdlHandler {
    return new Contract(address, _abi, signerOrProvider) as AdlHandler;
  }
}

export interface AdlHandlerLibraryAddresses {
  ["contracts/adl/AdlUtils.sol:AdlUtils"]: string;
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
  ["contracts/order/ExecuteOrderUtils.sol:ExecuteOrderUtils"]: string;
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
}
