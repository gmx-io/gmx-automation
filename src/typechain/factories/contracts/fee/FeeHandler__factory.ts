// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FeeHandler,
  FeeHandlerInterface,
} from "../../../contracts/fee/FeeHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract IVaultV1",
        name: "_vaultV1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gmx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "buybackToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "availableFeeAmount",
        type: "uint256",
      },
    ],
    name: "AvailableFeeAmountIsZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "buybackToken",
        type: "address",
      },
    ],
    name: "BuybackAndFeeTokenAreEqual",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyClaimFeesMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "buybackToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOutputAmount",
        type: "uint256",
      },
    ],
    name: "InsufficientBuybackOutputAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buybackToken",
        type: "address",
      },
    ],
    name: "InvalidBuybackToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "InvalidVersion",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buybackMaxPriceAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTimestamp",
        type: "uint256",
      },
    ],
    name: "MaxBuybackPriceAgeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "buybackToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minOutputAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "providers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "buyback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "claimFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "buybackToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeTokenPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buybackTokenPrice",
        type: "uint256",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmx",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "v2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultV1",
    outputs: [
      {
        internalType: "contract IVaultV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buybackToken",
        type: "address",
      },
    ],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014060405234801561001157600080fd5b5060405161371f38038061371f8339810160408190526100309161007c565b60016000556001600160a01b0395861660805293851660a05291841660c052831660e0528216610100521661012052610103565b6001600160a01b038116811461007957600080fd5b50565b60008060008060008060c0878903121561009557600080fd5b86516100a081610064565b60208801519096506100b181610064565b60408801519095506100c281610064565b60608801519094506100d381610064565b60808801519093506100e481610064565b60a08801519092506100f581610064565b809150509295509295509295565b60805160a05160c05160e051610100516101205161352d6101f26000396000818161010b0152818161065501526113c901526000818160ce015281816105530152818161088201526109190152600081816101d001528181610a490152818161180d0152611f8601526000818161017a015281816102cd015281816103a50152818161043e01528181610a2801528181610fc2015281816112ea01528181611cd001528181611d690152611e0b0152600081816101a901528181610acf01528181610c2f0152818161140d0152818161154001526115bf0152600081816101320152610d20015261352d6000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c8063164e68de146100b45780631ee00bc3146100c957806331e67c71146101065780634a4a7b041461012d5780634a6f4d0e14610154578063660d0d67146101755780636854171d1461019c5780637dc0d1d0146101a45780639ff78c30146101cb578063ac9650d8146101f2578063ceca23f114610212578063f3acae3a14610225578063fc7dc1d31461022d575b600080fd5b6100c76100c23660046124ab565b610240565b005b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b6040516100fd91906124c8565b60405180910390f35b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b610167610162366004612527565b6104fa565b6040519081526020016100fd565b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b610167600181565b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b6100f07f000000000000000000000000000000000000000000000000000000000000000081565b6102056102003660046125a9565b6106e8565b6040516100fd919061263a565b6100c761022036600461269f565b6107fc565b610167600281565b6100c761023b36600461280e565b610aae565b610248610cb0565b6102b7604051602001610279906020808252600a90820152692322a2afa5a2a2a822a960b11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600a8152602001692322a2afa5a2a2a822a960b11b815250610d09565b6102c96102c382610dbd565b82610dcb565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166321f8a72160405160200161032a906020808252600c908201526b2322a2afa922a1a2a4ab22a960a11b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161035e91815260200190565b602060405180830381865afa15801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f91906129c3565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f56103db85610dee565b6040518263ffffffff1660e01b81526004016103f991815260200190565b602060405180830381865afa158015610416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043a91906129e0565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a61047485610dee565b60006040518363ffffffff1660e01b81526004016104939291906129f9565b6020604051808303816000875af11580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d691906129e0565b506104eb6001600160a01b0384168383610e86565b50506104f76001600055565b50565b60008061050686610dbd565b90506105128187610dcb565b60008061051f8989610edc565b905061052961238b565b60005b8b8110156106af57600189036105d057604051631ce9cb8f60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631ce9cb8f90610588908e906004016124c8565b602060405180830381865afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c991906129e0565b9350610647565b600289036106265760008d8d838181106105ec576105ec612a07565b905060200201602081019061060191906124ab565b905061060c81610ef2565b61061e610619828e610f19565b610fa9565b945050610647565b604051630778af2960e21b8152600481018a90526024015b60405180910390fd5b6106518985611035565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168a6001600160a01b031614610696578160200151610699565b81515b93506106a58484612a33565b925060010161052c565b5060006106bf8b8b878b8b611079565b9050808311156106d55794506106dd9350505050565b509093505050505b979650505050505050565b6060816001600160401b03811115610702576107026126e0565b60405190808252806020026020018201604052801561073557816020015b60608152602001906001900390816107205790505b50905060005b828110156107f4576000803086868581811061075957610759612a07565b905060200281019061076b9190612a46565b604051610779929190612a8c565b600060405180830381855af49150503d80600081146107b4576040519150601f19603f3d011682016040523d82523d6000602084013e6107b9565b606091505b5091509150816107cc576107cc816110da565b808484815181106107df576107df612a07565b6020908102919091010152505060010161073b565b505b92915050565b610804610cb0565b600060018203610a12576040516370a0823160e01b81526000906001600160a01b038516906370a082319061083d9030906004016124c8565b602060405180830381865afa15801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e91906129e0565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166312d43a516040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090291906129c3565b604051630e9587f360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015286811660248301523060448301529190911690630e9587f390606401600060405180830381600087803b15801561097557600080fd5b505af1158015610989573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b03871691506370a08231906109bc9030906004016124c8565b602060405180830381865afa1580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd91906129e0565b9050610a098282612a9c565b92505050610a93565b60028203610a7757610a2384610ef2565b610a707f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000868630611113565b9050610a93565b604051630778af2960e21b81526004810183905260240161063e565b610a9e8284836112e6565b50610aa96001600055565b505050565b610ab6610cb0565b604051633d333c8560e01b815281906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633d333c8590610b04908490600401612b50565b600060405180830381600087803b158015610b1e57600080fd5b505af1158015610b32573d6000803e3d6000fd5b50505050836001600160a01b0316856001600160a01b031603610b6c578484604051633b1dd52160e21b815260040161063e929190612bb0565b6000610b7785610dbd565b9050610b838186610dcb565b6000610b8f8787610edc565b905080600003610bb857868682604051633062f23960e11b815260040161063e93929190612bca565b6000610bc5888885611408565b90506000818310610bd65781610bd8565b825b905086811015610c1c576040516314b03ec960e31b81526001600160a01b03808b16600483015289166024820152604481018290526064810188905260840161063e565b610c298989868487611666565b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c8757600080fd5b505af1158015610c9b573d6000803e3d6000fd5b5050505050610caa6001600055565b50505050565b600260005403610d025760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161063e565b6002600055565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb90610d579033908690600401612bee565b602060405180830381865afa158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d989190612c07565b610db957338160405163a35b150b60e01b815260040161063e929190612c29565b5050565b60006107f66106198361187c565b81600003610db9578060405163752fdb6360e01b815260040161063e91906124c8565b6000604051602001610e3b9060208082526021908201527f574954484452415741424c455f4255594241434b5f544f4b454e5f414d4f554e6040820152601560fa1b606082015260800190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038416908201526060015b604051602081830303815290604052805190602001209050919050565b610aa98363a9059cbb60e01b8484604051602401610ea5929190612bee565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526118b6565b6000610eeb610619848461198b565b9392505050565b6001600160a01b0381166104f75760405163616daf1f60e01b815260040160405180910390fd5b6000604051602001610f539060208082526014908201527310d31052535050931157d1915157d05353d5539560621b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03808616918301919091528316606082015260800160405160208183030381529060405280519060200120905092915050565b60405163bd02d0f560e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bd02d0f590602401602060405180830381865afa158015611011573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f691906129e0565b61103d61238b565b600061104b610619856119cd565b905061105561238b565b61105f8483611a2d565b80825261106c9085612a9c565b6020820152949350505050565b600080611087858486611a42565b9050600061109761061988611a57565b6110a36106198a611a57565b6110ad9190612a33565b90506110ce826110c968327cb2734119d3b7a9601e1b84612a33565b611a2d565b98975050505050505050565b6000806110e683611a9a565b91509150801561110a578160405162461bcd60e51b815260040161063e9190612c4d565b610aa983611b2a565b600061111e82611b33565b600061112a8585610f19565b60405163bd02d0f560e01b8152600481018290529091506000906001600160a01b0389169063bd02d0f590602401602060405180830381865afa158015611175573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119991906129e0565b604051637152429d60e11b81529091506001600160a01b0389169063e2a4853a906111cb9085906000906004016129f9565b6020604051808303816000875af11580156111ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120e91906129e0565b5060405163078d3b7960e01b81526001600160a01b0387169063078d3b799061123f90889088908690600401612bca565b600060405180830381600087803b15801561125957600080fd5b505af115801561126d573d6000803e3d6000fd5b5050604051632c9800af60e11b815273__$e53db83827f4e07ebc418caf7145b8c2d5$";

type FeeHandlerConstructorParams =
  | [linkLibraryAddresses: FeeHandlerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FeeHandler__factory extends ContractFactory {
  constructor(...args: FeeHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FeeHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FeeHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$e53db83827f4e07ebc418caf7145b8c2d5\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _vaultV1: PromiseOrValue<string>,
    _gmx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeHandler> {
    return super.deploy(
      _roleStore,
      _oracle,
      _dataStore,
      _eventEmitter,
      _vaultV1,
      _gmx,
      overrides || {}
    ) as Promise<FeeHandler>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _vaultV1: PromiseOrValue<string>,
    _gmx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _oracle,
      _dataStore,
      _eventEmitter,
      _vaultV1,
      _gmx,
      overrides || {}
    );
  }
  override attach(address: string): FeeHandler {
    return super.attach(address) as FeeHandler;
  }
  override connect(signer: Signer): FeeHandler__factory {
    return super.connect(signer) as FeeHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeHandlerInterface {
    return new utils.Interface(_abi) as FeeHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeHandler {
    return new Contract(address, _abi, signerOrProvider) as FeeHandler;
  }
}

export interface FeeHandlerLibraryAddresses {
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
}
