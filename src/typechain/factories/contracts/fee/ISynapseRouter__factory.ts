// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISynapseRouter,
  ISynapseRouterInterface,
} from "../../../contracts/fee/ISynapseRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "swapAdapter",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "rawParams",
            type: "bytes",
          },
        ],
        internalType: "struct SwapQuery",
        name: "originQuery",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "swapAdapter",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "rawParams",
            type: "bytes",
          },
        ],
        internalType: "struct SwapQuery",
        name: "destQuery",
        type: "tuple",
      },
    ],
    name: "bridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class ISynapseRouter__factory {
  static readonly abi = _abi;
  static createInterface(): ISynapseRouterInterface {
    return new utils.Interface(_abi) as ISynapseRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISynapseRouter {
    return new Contract(address, _abi, signerOrProvider) as ISynapseRouter;
  }
}
