/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FeeDistributor,
  FeeDistributorInterface,
} from "../../../contracts/fee/FeeDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract IVaultV1",
        name: "_vaultV1",
        type: "address",
      },
      {
        internalType: "contract IRouterV1",
        name: "_routerV1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_routerV2",
        type: "address",
      },
      {
        internalType: "contract IExchangeRouter",
        name: "_exchangeRouterV2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bridgingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EmptyReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderKey",
        type: "bytes32",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
        ],
        internalType: "struct Order.Props",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    name: "afterOrderCancellation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndexV2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIndexV2",
        type: "uint256",
      },
    ],
    name: "claimFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRouterV2",
    outputs: [
      {
        internalType: "contract IExchangeRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerV1",
    outputs: [
      {
        internalType: "contract IRouterV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerV2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feeBatchKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "swapFeesUsingV1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feeBatchKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "swapPath",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "swapAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "swapFeesUsingV2",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultV1",
    outputs: [
      {
        internalType: "contract IVaultV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101806040523480156200001257600080fd5b5060405162003f8438038062003f84833981016040819052620000359162000090565b60016000556001600160a01b0397881660805295871660a05293861660c05291851660e052841661010052831661012052821661014052166101605262000151565b6001600160a01b03811681146200008d57600080fd5b50565b600080600080600080600080610100898b031215620000ae57600080fd5b8851620000bb8162000077565b60208a0151909850620000ce8162000077565b60408a0151909750620000e18162000077565b60608a0151909650620000f48162000077565b60808a0151909550620001078162000077565b60a08a01519094506200011a8162000077565b60c08a01519093506200012d8162000077565b60e08a0151909250620001408162000077565b809150509295985092959890939650565b60805160a05160c05160e05161010051610120516101405161016051613d2e620002566000396000818161019a015281816103620152610a8301526000818160ae0152610340015260008181610166015261031e0152600081816102020152610a6101526000818160fe0152818161046e01528181610cf30152610d6c01526000818161024b01528181610f910152610fea0152600081816101ce015281816102fc015281816104f7015281816106340152818161068a0152818161076d01528181610808015281816108bd015281816109ac01528181610a3f01528181610ee901528181610f700152610fc90152600081816101320152610b610152613d2e6000f3fe6080604052600436106100975760003560e01c80630a602d351461009c5780631ee00bc3146100ec5780634a4a7b0414610120578063502f7446146101545780635a445bce14610188578063660d0d67146101bc578063714981e0146101f05780638afe631d146102245780639ff78c3014610239578063cdd1c61e1461026d578063f0c089751461028d578063f940bfa1146102ad575b600080fd5b3480156100a857600080fd5b506100d07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b3480156100f857600080fd5b506100d07f000000000000000000000000000000000000000000000000000000000000000081565b34801561012c57600080fd5b506100d07f000000000000000000000000000000000000000000000000000000000000000081565b34801561016057600080fd5b506100d07f000000000000000000000000000000000000000000000000000000000000000081565b34801561019457600080fd5b506100d07f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c857600080fd5b506100d07f000000000000000000000000000000000000000000000000000000000000000081565b3480156101fc57600080fd5b506100d07f000000000000000000000000000000000000000000000000000000000000000081565b610237610232366004611ae2565b6102cd565b005b34801561024557600080fd5b506100d07f000000000000000000000000000000000000000000000000000000000000000081565b34801561027957600080fd5b50610237610288366004611b5f565b6103d1565b34801561029957600080fd5b506102376102a8366004612d08565b6106fa565b3480156102b957600080fd5b506102376102c8366004612e6e565b610a10565b60405163e1af6c2d60e01b815273__$adc2203bb4e1bd4beebbd2bb27c02cd615$__9063e1af6c2d90610398907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908e908e908e908e908e908e908e90600401612f13565b60006040518083038186803b1580156103b057600080fd5b505af41580156103c4573d6000803e3d6000fd5b5050505050505050505050565b6103d9610aec565b610462604051602001610417906020808252601790820152762322a2afa224a9aa2924a12aaa24a7a72fa5a2a2a822a960491b604082015260600190565b60405160208183030381529060405280519060200120604051806040016040528060178152602001762322a2afa224a9aa2924a12aaa24a7a72fa5a2a2a822a960491b815250610b4a565b61046a6117f3565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630842b0766040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ee9190612f8d565b9050600061051d7f00000000000000000000000000000000000000000000000000000000000000008686610bfa565b8051909150600061052f826002612fbc565b6105399085612fd3565b9050806001600160401b0381111561055357610553611931565b60405190808252806020026020018201604052801561057c578160200160208202803683370190505b508552806001600160401b0381111561059757610597611931565b6040519080825280602002602001820160405280156105c0578160200160208202803683370190505b506020860152806001600160401b038111156105de576105de611931565b604051908082528060200260200182016040528015610607578160200160208202803683370190505b5060408601526106178585610cc7565b945061062585848685610e9a565b945042606086015260006106587f0000000000000000000000000000000000000000000000000000000000000000611168565b60405163e1fbaed360e01b815290915073__$0bd2986ff9eae1ca31d173b6c133f035a7$__9063e1fbaed3906106b6907f00000000000000000000000000000000000000000000000000000000000000009085908b90600401613016565b60006040518083038186803b1580156106ce57600080fd5b505af41580156106e2573d6000803e3d6000fd5b505050505050505050506106f66001600055565b5050565b61076960405160200161072b906020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250610b4a565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a6ed563e6107a386611182565b6040518263ffffffff1660e01b81526004016107c191815260200190565b602060405180830381865afa1580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190612f8d565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f561083e87611206565b6040518263ffffffff1660e01b815260040161085c91815260200190565b602060405180830381865afa158015610879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089d9190612f8d565b9050600073__$0bd2986ff9eae1ca31d173b6c133f035a7$__63fdfc26f37f0000000000000000000000000000000000000000000000000000000000000000856040518363ffffffff1660e01b81526004016108fa9291906130d0565b600060405180830381865af4158015610917573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261093f91908101906131a8565b905061095085602001516060015190565b8160400151838151811061096657610966613269565b6020026020010181815161097a9190612fd3565b90525060405163e1fbaed360e01b815273__$0bd2986ff9eae1ca31d173b6c133f035a7$__9063e1fbaed3906109d8907f00000000000000000000000000000000000000000000000000000000000000009087908690600401613016565b60006040518083038186803b1580156109f057600080fd5b505af4158015610a04573d6000803e3d6000fd5b50505050505050505050565b604051635cc28b0760e01b815273__$adc2203bb4e1bd4beebbd2bb27c02cd615$__90635cc28b0790610ab5907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908b908b908b908b908b9060040161327f565b60006040518083038186803b158015610acd57600080fd5b505af4158015610ae1573d6000803e3d6000fd5b505050505050505050565b600260005403610b435760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb90610b9890339086906004016130d0565b602060405180830381865afa158015610bb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd991906132da565b6106f657338160405163a35b150b60e01b8152600401610b3a929190613344565b6060836001600160a01b031663e7e4148e604051602001610c3a906020808252600b908201526a13505492d15517d31254d560aa1b604082015260600190565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b16825260048201526024810186905260448101859052606401600060405180830381865afa158015610c97573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cbf9190810190613368565b949350505050565b610ccf6117f3565b60005b82811015610e8f57604051630e468baf60e41b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e468baf090602401602060405180830381865afa158015610d42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d66919061339c565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f255527883306040518363ffffffff1660e01b8152600401610db89291906133b9565b6020604051808303816000875af1158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfb9190612f8d565b90508186600001518481518110610e1457610e14613269565b60200260200101906001600160a01b031690816001600160a01b0316815250508086602001518481518110610e4b57610e4b613269565b6020026020010181815250508086604001518481518110610e6e57610e6e613269565b60200260200101818152505050508080610e87906133d3565b915050610cd2565b508290505b92915050565b610ea26117f3565b60005b8281101561115e576000858281518110610ec157610ec1613269565b60200260200101519050600073__$ff439aa65a80c9eec648f15db20b189505$__63a8d8fff57f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b8152600401610f269291906133b9565b608060405180830381865af4158015610f43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6791906133ec565b90506000610fc07f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008460000151856040015130611247565b905060006110197f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000008560000151866060015130611247565b90506000611028866002612fbc565b611032908a612fd3565b905083604001518b60000151828151811061104f5761104f613269565b60200260200101906001600160a01b031690816001600160a01b031681525050828b60200151828151811061108657611086613269565b602002602001018181525050828b6040015182815181106110a9576110a9613269565b602090810291909101015260608401518b516110c6836001612fd3565b815181106110d6576110d6613269565b6001600160a01b039092166020928302919091018201528b015182906110fd836001612fd3565b8151811061110d5761110d613269565b602090810291909101015260408b0151829061112a836001612fd3565b8151811061113a5761113a613269565b60200260200101818152505050505050508080611156906133d3565b915050610ea5565b5093949350505050565b6000806111748361142d565b90506000610cbf84836114e3565b60006040516020016111c5906020808252601e908201527f4645455f4449535452494255544f525f535741505f4645455f42415443480000604082015260600190565b60408051601f198184030181528282528051602091820120908301528101839052606001604051602081830303815290604052805190602001209050919050565b60006040516020016111c5906020808252818101527f4645455f4449535452494255544f525f535741505f544f4b454e5f494e444558604082015260600190565b600061125282611516565b600061125e8585611540565b60405163bd02d0f560e01b8152600481018290529091506000906001600160a01b0389169063bd02d0f590602401602060405180830381865afa1580156112a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cd9190612f8d565b604051637152429d60e11b815260048101849052600060248201529091506001600160a01b0389169063e2a4853a906044016020604051808303816000875af115801561131e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113429190612f8d565b5060405163078d3b7960e01b81526001600160a01b03868116600483015285811660248301526044820183905287169063078d3b7990606401600060405180830381600087803b15801561139557600080fd5b505af11580156113a9573d6000803e3d6000fd5b5050604051632c9800af60e11b815273__$e53db83827f4e07ebc418caf7145b8c2d5$";

type FeeDistributorConstructorParams =
  | [linkLibraryAddresses: FeeDistributorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FeeDistributor__factory extends ContractFactory {
  constructor(...args: FeeDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FeeDistributor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FeeDistributorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$adc2203bb4e1bd4beebbd2bb27c02cd615\\$__", "g"),
      linkLibraryAddresses["contracts/fee/FeeSwapUtils.sol:FeeSwapUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0bd2986ff9eae1ca31d173b6c133f035a7\\$__", "g"),
      linkLibraryAddresses[
        "contracts/fee/FeeBatchStoreUtils.sol:FeeBatchStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff439aa65a80c9eec648f15db20b189505\\$__", "g"),
      linkLibraryAddresses[
        "contracts/market/MarketStoreUtils.sol:MarketStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e53db83827f4e07ebc418caf7145b8c2d5\\$__", "g"),
      linkLibraryAddresses["contracts/market/MarketUtils.sol:MarketUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _vaultV1: PromiseOrValue<string>,
    _routerV1: PromiseOrValue<string>,
    _routerV2: PromiseOrValue<string>,
    _exchangeRouterV2: PromiseOrValue<string>,
    _bridgingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeDistributor> {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _vaultV1,
      _routerV1,
      _routerV2,
      _exchangeRouterV2,
      _bridgingToken,
      overrides || {}
    ) as Promise<FeeDistributor>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _vaultV1: PromiseOrValue<string>,
    _routerV1: PromiseOrValue<string>,
    _routerV2: PromiseOrValue<string>,
    _exchangeRouterV2: PromiseOrValue<string>,
    _bridgingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _vaultV1,
      _routerV1,
      _routerV2,
      _exchangeRouterV2,
      _bridgingToken,
      overrides || {}
    );
  }
  override attach(address: string): FeeDistributor {
    return super.attach(address) as FeeDistributor;
  }
  override connect(signer: Signer): FeeDistributor__factory {
    return super.connect(signer) as FeeDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeDistributorInterface {
    return new utils.Interface(_abi) as FeeDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeDistributor {
    return new Contract(address, _abi, signerOrProvider) as FeeDistributor;
  }
}

export interface FeeDistributorLibraryAddresses {
  ["contracts/fee/FeeSwapUtils.sol:FeeSwapUtils"]: string;
  ["contracts/fee/FeeBatchStoreUtils.sol:FeeBatchStoreUtils"]: string;
  ["contracts/market/MarketStoreUtils.sol:MarketStoreUtils"]: string;
  ["contracts/market/MarketUtils.sol:MarketUtils"]: string;
}
