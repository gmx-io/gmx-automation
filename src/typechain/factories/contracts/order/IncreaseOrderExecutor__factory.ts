// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  IncreaseOrderExecutor,
  IncreaseOrderExecutorInterface,
} from "../../../contracts/order/IncreaseOrderExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "InvalidCollateralTokenForMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidPositionMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxOracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestExpirationTime",
        type: "uint256",
      },
    ],
    name: "OracleTimestampsAreLargerThanRequestExpirationTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minOracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedTimestamp",
        type: "uint256",
      },
    ],
    name: "OracleTimestampsAreSmallerThanRequired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnexpectedPositionState",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "contract DataStore",
                name: "dataStore",
                type: "address",
              },
              {
                internalType: "contract EventEmitter",
                name: "eventEmitter",
                type: "address",
              },
              {
                internalType: "contract MultichainVault",
                name: "multichainVault",
                type: "address",
              },
              {
                internalType: "contract OrderVault",
                name: "orderVault",
                type: "address",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "contract ISwapHandler",
                name: "swapHandler",
                type: "address",
              },
              {
                internalType: "contract IReferralStorage",
                name: "referralStorage",
                type: "address",
              },
            ],
            internalType: "struct BaseOrderUtils.ExecuteOrderParamsContracts",
            name: "contracts",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType: "struct Order.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum Order.OrderType",
                    name: "orderType",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Order.DecreasePositionSwapType",
                    name: "decreasePositionSwapType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "updatedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "srcChainId",
                    type: "uint256",
                  },
                ],
                internalType: "struct Order.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "shouldUnwrapNativeToken",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isFrozen",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "autoCancel",
                    type: "bool",
                  },
                ],
                internalType: "struct Order.Flags",
                name: "flags",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "_dataList",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Order.Props",
            name: "order",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props[]",
            name: "swapPathMarkets",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "minOracleTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxOracleTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingGas",
            type: "uint256",
          },
          {
            internalType: "enum Order.SecondaryOrderType",
            name: "secondaryOrderType",
            type: "uint8",
          },
        ],
        internalType: "struct BaseOrderUtils.ExecuteOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "processOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b506040516122da3803806122da833981016040819052602c916041565b60016000556001600160a01b0316608052606f565b600060208284031215605257600080fd5b81516001600160a01b0381168114606857600080fd5b9392505050565b60805161224a61009060003960008181604001526101a6015261224a6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a4a7b041461003b578063b0e4ece414610078575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405161006f9190610bf2565b60405180910390f35b61008b61008636600461122b565b610098565b60405161006f9190611980565b6100a0610af4565b6100a8610131565b6101176040516020016100d9906020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b81525061018f565b61012082610243565b905061012c6001600055565b919050565b6002600054036101885760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb906101dd9033908690600401611a50565b602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190611a69565b61023f57338160405163a35b150b60e01b815260040161017f929190611a86565b5050565b61024b610af4565b81515160c083015161025d9190610899565b600080836000015160a001516001600160a01b0316631e5e6a79604051806101a001604052808760000151600001516001600160a01b031681526020018760000151602001516001600160a01b031681526020018760000151608001516001600160a01b031681526020018760000151606001516001600160a01b03168152602001876020015181526020016102f988604001515160c0015190565b6001600160a01b0316815260200161031a8860400151602001516060015190565b81526020018760600151815260200161033d886040015160200151610100015190565b815260200161035288604001515160a0015190565b6001600160a01b031681526020016103708860400151516080015190565b6001600160a01b03168152600060208201819052604091820152516001600160e01b031960e084901b1681526103a99190600401611b56565b60408051808303816000875af11580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190611c4a565b915091506103fd8460c00151836108d1565b600061046961040f8660400151515190565b604087810151805160a090810151918301515183516001600160a01b039586166020808301919091529386168186015294891660608601521515608080860191909152835180860390910181529301909152815191012090565b85515160405163fdfc26f360e01b815291925060009173__$3d31b232fb363902662fbc281b11ab3357$__9163fdfc26f3916104aa91908690600401611a50565b6101c060405180830381865af41580156104c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ec9190611cc7565b905060006104f982515190565b6001600160a01b0316036105d0576105286105178760400151515190565b82516001600160a01b039091169052565b600061053682516020015190565b6001600160a01b03161415806105615750600061055582516040015190565b6001600160a01b031614155b1561057f5760405163814991c360e01b815260040160405180910390fd5b6105a761059287604001515160a0015190565b82516001600160a01b03909116602090910152565b80516001600160a01b038516604091820152868101510151516105d09060408301519015159052565b60408601516020015161012001518660800151101561061f57608086015160408701516020015161012001515b604051637d677abf60e01b81526004810192909252602482015260440161017f565b6106376106328760400151602001515190565b61090e565b158015610654575060408601516020015161014001518660800151105b1561067157608086015160408701516020015161014001516105fd565b8551516040516000916001600160a01b03169063bd02d0f5906106c290602001602080825260179082015276524551554553545f45585049524154494f4e5f54494d4560481b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016106f691815260200190565b602060405180830381865afa158015610713573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107379190611def565b9050600260408801516020015151600881111561075657610756611ab2565b148015610784575080610773886040015160200151610120015190565b61077d9190611e08565b8760a00151115b156107c55760a08701516040880151602001516101200151604051631b0971dd60e31b8152600481019290925260248201526044810182905260640161017f565b73__$7a972c741e25767aac46238a61c2174fde$__63bd8b7e116040518060e001604052808a6000015181526020018a60c0015181526020018a6040015181526020018a6020015181526020018581526020018681526020018a6101200151600181111561083557610835611ab2565b815250866040518363ffffffff1660e01b8152600401610856929190612117565b60006040518083038186803b15801561086e57600080fd5b505af4158015610882573d6000803e3d6000fd5b5050505061088e610af4565b979650505050505050565b6108a38282610962565b60208101516001600160a01b031661023f57805160405163182e30e360e01b815261017f9190600401610bf2565b6108db8282610a30565b61023f5781516040516341ce349f60e11b81526001600160a01b039182166004820152908216602482015260440161017f565b60008082600881111561092357610923611ab2565b14806109405750600282600881111561093e5761093e611ab2565b145b8061095c5750600482600881111561095a5761095a611ab2565b145b92915050565b80516001600160a01b031661098a576040516302fde0d760e11b815260040160405180910390fd5b6000826001600160a01b0316637ae1cfca6109a88460000151610a72565b6040518263ffffffff1660e01b81526004016109c691815260200190565b602060405180830381865afa1580156109e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a079190611a69565b90508015610a2b5781516040516309f8c93760e01b815261017f9190600401610bf2565b505050565b600082604001516001600160a01b0316826001600160a01b03161480610a6b575082606001516001600160a01b0316826001600160a01b0316145b9392505050565b6000604051602001610aaa906020808252601290820152711254d7d3505492d15517d11254d05093115160721b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b604080516101208101909152606060e0820181815261010083019190915281908152602001610b36604051806040016040528060608152602001606081525090565b8152602001610b58604051806040016040528060608152602001606081525090565b8152602001610b7a604051806040016040528060608152602001606081525090565b8152602001610b9c604051806040016040528060608152602001606081525090565b8152602001610bbe604051806040016040528060608152602001606081525090565b8152602001610be0604051806040016040528060608152602001606081525090565b905290565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610c3e57610c3e610c06565b60405290565b60405161018081016001600160401b0381118282101715610c3e57610c3e610c06565b604051608081016001600160401b0381118282101715610c3e57610c3e610c06565b60405161010081016001600160401b0381118282101715610c3e57610c3e610c06565b60405161014081016001600160401b0381118282101715610c3e57610c3e610c06565b604051606081016001600160401b0381118282101715610c3e57610c3e610c06565b604051601f8201601f191681016001600160401b0381118282101715610d1957610d19610c06565b604052919050565b6001600160a01b0381168114610d3657600080fd5b50565b803561012c81610d21565b600060e08284031215610d5657600080fd5b610d5e610c1c565b90508135610d6b81610d21565b81526020820135610d7b81610d21565b60208201526040820135610d8e81610d21565b60408201526060820135610da181610d21565b6060820152610db260808301610d39565b6080820152610dc360a08301610d39565b60a0820152610dd460c08301610d39565b60c082015292915050565b60006001600160401b03821115610df857610df8610c06565b5060051b60200190565b600082601f830112610e1357600080fd5b8135610e26610e2182610ddf565b610cf1565b8082825260208201915060208360051b860101925085831115610e4857600080fd5b602085015b83811015610e6e578035610e6081610d21565b835260209283019201610e4d565b5095945050505050565b80356009811061012c57600080fd5b80356003811061012c57600080fd5b60006101808284031215610ea957600080fd5b610eb1610c44565b9050610ebc82610e78565b8152610eca60208301610e87565b602082015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c0808301359082015260e080830135908201526101008083013590820152610120808301359082015261014080830135908201526101609182013591810191909152919050565b8015158114610d3657600080fd5b600060808284031215610f5f57600080fd5b610f67610c67565b90508135610f7481610f3f565b81526020820135610f8481610f3f565b60208201526040820135610f9781610f3f565b60408201526060820135610faa81610f3f565b606082015292915050565b600082601f830112610fc657600080fd5b8135610fd4610e2182610ddf565b8082825260208201915060208360051b860101925085831115610ff657600080fd5b602085015b83811015610e6e578035835260209283019201610ffb565b6000610240828403121561102657600080fd5b61102e610c67565b905081356001600160401b0381111561104657600080fd5b8201610100818503121561105957600080fd5b611061610c89565b61106a82610d39565b815261107860208301610d39565b602082015261108960408301610d39565b604082015261109a60608301610d39565b60608201526110ab60808301610d39565b60808201526110bc60a08301610d39565b60a08201526110cd60c08301610d39565b60c082015260e08201356001600160401b038111156110eb57600080fd5b6110f786828501610e02565b60e08301525082525061110d8360208401610e96565b6020820152611120836101a08401610f4d565b60408201526102208201356001600160401b0381111561113f57600080fd5b61114b84828501610fb5565b60608301525092915050565b60006080828403121561116957600080fd5b611171610c67565b9050813561117e81610d21565b8152602082013561118e81610d21565b602082015260408201356111a181610d21565b60408201526060820135610faa81610d21565b600082601f8301126111c557600080fd5b81356111d3610e2182610ddf565b8082825260208201915060208360071b8601019250858311156111f557600080fd5b602085015b83811015610e6e5761120c8782611157565b83526020909201916080016111fa565b80356002811061012c57600080fd5b60006020828403121561123d57600080fd5b81356001600160401b0381111561125357600080fd5b8201610260818503121561126657600080fd5b61126e610cac565b6112788583610d44565b815260e082013560208201526101008201356001600160401b0381111561129e57600080fd5b6112aa86828501611013565b6040830152506101208201356001600160401b038111156112ca57600080fd5b6112d6868285016111b4565b606083015250610140820135608082015261016082013560a0820152611300856101808401611157565b60c08201526113126102008301610d39565b60e0820152610220820135610100820152611330610240830161121c565b610120820152949350505050565b6000815180845260005b8181101561136457602081850181015186830182015201611348565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208501945060208160051b8301016020850160005b8381101561142b57601f1985840301885281518051604085526113c8604086018261133e565b6020928301518682038785015280518083529084019360009350909101905b808310156114125783516001600160a01b0316825260209384019360019390930192909101906113e7565b5060209a8b019a909550939093019250506001016113a2565b50909695505050505050565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156114b157605f198886030183528351805160408752611489604088018261133e565b6020928301516001600160a01b03169783019790975250938401939290920191600101611463565b50505050602083015184820360208601526114cc8282611384565b95945050505050565b600082825180855260208501945060208160051b8301016020850160005b8381101561142b57601f198584030188528151805160408552611519604086018261133e565b6020928301518682038785015280518083529084019360009350909101905b8083101561155b5783518252602082019150602084019350600183019250611538565b5060209a8b019a909550939093019250506001016114f3565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156115e557605f1988860301835283518051604087526115c6604088018261133e565b60209283015197830197909752509384019392909201916001016115a0565b50505050602083015184820360208601526114cc82826114d5565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156115e557605f198886030183528351805160408752611652604088018261133e565b602092830151978301979097525093840193929092019160010161162c565b600082825180855260208501945060208160051b8301016020850160005b8381101561142b57601f1985840301885281518051604085526116b5604086018261133e565b6020928301518682038785015280518083529084019360009350909101905b808310156116f9578351151582526020820191506020840193506001830192506116d4565b5060209a8b019a9095509390930192505060010161168f565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561178557605f198886030183528351805160408752611764604088018261133e565b6020928301511515978301979097525093840193929092019160010161173e565b50505050602083015184820360208601526114cc8282611671565b600082825180855260208501945060208160051b8301016020850160005b8381101561142b57601f1985840301885281518051604085526117e4604086018261133e565b6020928301518682038785015280518083529084019391925081830191600582901b84010160005b8281101561183d57601f1985830301845261182882875161133e565b6020968701969490940193915060010161180c565b5080975050505050506020820191506020880197506001810190506117be565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156118e157605f1988860301835283518051604087526118af604088018261133e565b90506020820151915086810360208801526118ca818361133e565b965050506020938401939290920191600101611889565b50505050602083015184820360208601526114cc82826117a0565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156118e157605f19888603018352835180516040875261194e604088018261133e565b9050602082015191508681036020880152611969818361133e565b965050506020938401939290920191600101611928565b602081526000825160e0602084015261199d610100840182611437565b90506020840151601f198483030160408501526119ba8282611574565b9150506040840151601f198483030160608501526119d88282611600565b9150506060840151601f198483030160808501526119f68282611712565b9150506080840151601f198483030160a0850152611a148282611574565b91505060a0840151601f198483030160c0850152611a32828261185d565b91505060c0840151601f198483030160e08501526114cc82826118fc565b6001600160a01b03929092168252602082015260400190565b600060208284031215611a7b57600080fd5b8151610a6b81610f3f565b6001600160a01b0383168152604060208201819052600090611aaa9083018461133e565b949350505050565b634e487b7160e01b600052602160045260246000fd5b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b600081518084526020840193506020830160005b82811015611b3857611b22868351611ac8565b6080959095019460209190910190600101611b0f565b5093949350505050565b60068110611b5257611b52611ab2565b9052565b60208152611b68602082018351610be5565b60006020830151611b7c6040840182610be5565b506040830151611b8f6060840182610be5565b506060830151611ba26080840182610be5565b50608083015160a083015260a0830151611bbf60c0840182610be5565b5060c083015160e083015260e08301516101a0610100840152611be66101c0840182611afb565b9050610100840151610120840152610120840151611c08610140850182610be5565b50610140840151611c1d610160850182610be5565b5061016084015180151561018085015250610180840151611c426101a0850182611b42565b509392505050565b60008060408385031215611c5d57600080fd5b8251611c6881610d21565b6020939093015192949293505050565b600060208284031215611c8a57600080fd5b604051602081016001600160401b0381118282101715611cac57611cac610c06565b80604052508091508251611cbf81610f3f565b905292915050565b60008183036101c081128015611cdc57600080fd5b506000611ce7610ccf565b6060831215611cf4578182fd5b611cfc610ccf565b8551611d0781610d21565b81526020860151611d1781610d21565b60208201526040860151611d2a81610d21565b60408201528152610140605f1984011215611d43578182fd5b611d4b610cac565b606086810151825260808088015160208085019190915260a0808a0151604086015260c0808b01519486019490945260e0808b015193860193909352610100808b015191860191909152610120808b0151948601949094526101408a0151928501929092526101608901519184019190915261018088015191830182905283018290529093509150611de1866101a08701611c78565b604082015295945050505050565b600060208284031215611e0157600080fd5b5051919050565b8082018082111561095c57634e487b7160e01b600052601160045260246000fd5b600081518084526020840193506020830160005b82811015611b385781516001600160a01b0316865260209586019590910190600101611e3d565b60098110611b5257611b52611ab2565b60038110611b5257611b52611ab2565b611e8f828251611e64565b6020810151611ea16020840182611e74565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008101516101008301526101208101516101208301526101408101516101408301526101608101516101608301525050565b600081518084526020840193506020830160005b82811015611b38578151865260209586019590910190600101611f26565b805161024080845281516001600160a01b0390811691850191909152602082015116610260840152604081015160009190611f83610280860182610be5565b506060810151611f976102a0860182610be5565b506080810151611fab6102c0860182610be5565b5060a0810151611fbf6102e0860182610be5565b5060c0810151611fd3610300860182610be5565b5060e00151610100610320850152611fef610340850182611e29565b905060208301516120036020860182611e84565b50604083810151805115156101a0870152602081015115156101c08701529081015115156101e086015260609081015115156102008601528301518482036102208601526114cc8282611f12565b805160018060a01b03815116835260018060a01b03602082015116602084015260018060a01b0360408201511660408401525060208101518051606084015260208101516080840152604081015160a0840152606081015160c0840152608081015160e084015260a081015161010084015260c081015161012084015260e0810151610140840152610100810151610160840152610120810151610180840152506040810151610a2b6101a08401825115159052565b60028110611b5257611b52611ab2565b6040808252835180516001600160a01b039081168484015260208201518116606080860191909152928201518116608080860191909152928201511660a0840152908101516000919061216d60c0850182610be5565b5060a081015161218060e0850182610be5565b5060c00151612193610100840182610be5565b5060208401516121a7610120840182611ac8565b5060408401516103a06101a08401526121c46103e0840182611f44565b905060608501516101c084015260808501516121e46101e0850182612051565b5060a08501516103a084015260c08501516122036103c0850182612107565b50602092909201929092529291505056fea26469706673582212201caa4649f1718e41174d5e9030b03be584af7f7dc8c314a4d3c57f66df50d92164736f6c634300081d0033";

type IncreaseOrderExecutorConstructorParams =
  | [
      linkLibraryAddresses: IncreaseOrderExecutorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncreaseOrderExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class IncreaseOrderExecutor__factory extends ContractFactory {
  constructor(...args: IncreaseOrderExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        IncreaseOrderExecutor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: IncreaseOrderExecutorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$3d31b232fb363902662fbc281b11ab3357\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/PositionStoreUtils.sol:PositionStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$7a972c741e25767aac46238a61c2174fde\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/IncreasePositionUtils.sol:IncreasePositionUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IncreaseOrderExecutor> {
    return super.deploy(
      _roleStore,
      overrides || {}
    ) as Promise<IncreaseOrderExecutor>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, overrides || {});
  }
  override attach(address: string): IncreaseOrderExecutor {
    return super.attach(address) as IncreaseOrderExecutor;
  }
  override connect(signer: Signer): IncreaseOrderExecutor__factory {
    return super.connect(signer) as IncreaseOrderExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncreaseOrderExecutorInterface {
    return new utils.Interface(_abi) as IncreaseOrderExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncreaseOrderExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IncreaseOrderExecutor;
  }
}

export interface IncreaseOrderExecutorLibraryAddresses {
  ["contracts/position/PositionStoreUtils.sol:PositionStoreUtils"]: string;
  ["contracts/position/IncreasePositionUtils.sol:IncreasePositionUtils"]: string;
}
