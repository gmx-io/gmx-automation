/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  IncreaseOrderExecutor,
  IncreaseOrderExecutorInterface,
} from "../../../contracts/order/IncreaseOrderExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "DisabledMarket",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "InvalidCollateralTokenForMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidPositionMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxOracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestExpirationTime",
        type: "uint256",
      },
    ],
    name: "OracleTimestampsAreLargerThanRequestExpirationTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minOracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedTimestamp",
        type: "uint256",
      },
    ],
    name: "OracleTimestampsAreSmallerThanRequired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnexpectedPositionState",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "contract DataStore",
                name: "dataStore",
                type: "address",
              },
              {
                internalType: "contract EventEmitter",
                name: "eventEmitter",
                type: "address",
              },
              {
                internalType: "contract MultichainVault",
                name: "multichainVault",
                type: "address",
              },
              {
                internalType: "contract OrderVault",
                name: "orderVault",
                type: "address",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "contract ISwapHandler",
                name: "swapHandler",
                type: "address",
              },
              {
                internalType: "contract IReferralStorage",
                name: "referralStorage",
                type: "address",
              },
            ],
            internalType: "struct BaseOrderUtils.ExecuteOrderParamsContracts",
            name: "contracts",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType: "struct Order.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum Order.OrderType",
                    name: "orderType",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Order.DecreasePositionSwapType",
                    name: "decreasePositionSwapType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "updatedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "srcChainId",
                    type: "uint256",
                  },
                ],
                internalType: "struct Order.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "shouldUnwrapNativeToken",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isFrozen",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "autoCancel",
                    type: "bool",
                  },
                ],
                internalType: "struct Order.Flags",
                name: "flags",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "_dataList",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Order.Props",
            name: "order",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props[]",
            name: "swapPathMarkets",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "minOracleTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxOracleTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingGas",
            type: "uint256",
          },
          {
            internalType: "enum Order.SecondaryOrderType",
            name: "secondaryOrderType",
            type: "uint8",
          },
        ],
        internalType: "struct BaseOrderUtils.ExecuteOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "processOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051620024843803806200248483398101604081905261003191610042565b6001600160a01b0316608052610072565b60006020828403121561005457600080fd5b81516001600160a01b038116811461006b57600080fd5b9392505050565b6080516123f062000094600039600081816040015261013701526123f06000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a4a7b041461003b578063b0e4ece414610078575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405161006f9190610b8d565b60405180910390f35b61008b6100863660046111b3565b610098565b60405161006f9190611b4e565b6100a0610a8f565b61010f6040516020016100d1906020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250610120565b610118826101dd565b90505b919050565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb9061016e9033908690600401611c1b565b602060405180830381865afa15801561018b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101af9190611c34565b6101d957338160405163a35b150b60e01b81526004016101d0929190611c58565b60405180910390fd5b5050565b6101e5610a8f565b81515160c08301516101f79190610833565b600080836000015160a001516001600160a01b0316631e5e6a79604051806101a001604052808760000151600001516001600160a01b031681526020018760000151602001516001600160a01b031681526020018760000151608001516001600160a01b031681526020018760000151606001516001600160a01b031681526020018760200151815260200161029388604001515160c0015190565b6001600160a01b031681526020016102b48860400151602001516060015190565b8152602001876060015181526020016102d7886040015160200151610100015190565b81526020016102ec88604001515160a0015190565b6001600160a01b0316815260200161030a8860400151516080015190565b6001600160a01b03168152600060208201819052604091820152516001600160e01b031960e084901b1681526103439190600401611d26565b60408051808303816000875af1158015610361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103859190611e1f565b915091506103978460c001518361086b565b60006104036103a98660400151515190565b604087810151805160a090810151918301515183516001600160a01b039586166020808301919091529386168186015294891660608601521515608080860191909152835180860390910181529301909152815191012090565b85515160405163fdfc26f360e01b815291925060009173__$3d31b232fb363902662fbc281b11ab3357$__9163fdfc26f39161044491908690600401611c1b565b6101c060405180830381865af4158015610462573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104869190611e9c565b9050600061049382515190565b6001600160a01b03160361056a576104c26104b18760400151515190565b82516001600160a01b039091169052565b60006104d082516020015190565b6001600160a01b03161415806104fb575060006104ef82516040015190565b6001600160a01b031614155b156105195760405163814991c360e01b815260040160405180910390fd5b61054161052c87604001515160a0015190565b82516001600160a01b03909116602090910152565b80516001600160a01b0385166040918201528681015101515161056a9060408301519015159052565b6040860151602001516101200151866080015110156105b957608086015160408701516020015161012001515b604051637d677abf60e01b8152600481019290925260248201526044016101d0565b6105d16105cc8760400151602001515190565b6108a8565b1580156105ee575060408601516020015161014001518660800151105b1561060b5760808601516040870151602001516101400151610597565b8551516040516000916001600160a01b03169063bd02d0f59061065c90602001602080825260179082015276524551554553545f45585049524154494f4e5f54494d4560481b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161069091815260200190565b602060405180830381865afa1580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d19190611fa9565b905060026040880151602001515160088111156106f0576106f0611c84565b14801561071e57508061070d886040015160200151610120015190565b6107179190611fc2565b8760a00151115b1561075f5760a08701516040880151602001516101200151604051631b0971dd60e31b815260048101929092526024820152604481018290526064016101d0565b73__$7a972c741e25767aac46238a61c2174fde$__63bd8b7e116040518060e001604052808a6000015181526020018a60c0015181526020018a6040015181526020018a6020015181526020018581526020018681526020018a610120015160018111156107cf576107cf611c84565b815250866040518363ffffffff1660e01b81526004016107f09291906122c5565b60006040518083038186803b15801561080857600080fd5b505af415801561081c573d6000803e3d6000fd5b50505050610828610a8f565b979650505050505050565b61083d82826108fb565b60208101516001600160a01b03166101d957805160405163182e30e360e01b81526101d09190600401610b8d565b61087582826109c9565b6101d95781516040516341ce349f60e11b81526001600160a01b03918216600482015290821660248201526044016101d0565b6000808260088111156108bd576108bd611c84565b14806108da575060028260088111156108d8576108d8611c84565b145b80610118575060048260088111156108f4576108f4611c84565b1492915050565b80516001600160a01b0316610923576040516302fde0d760e11b815260040160405180910390fd5b6000826001600160a01b0316637ae1cfca6109418460000151610a0d565b6040518263ffffffff1660e01b815260040161095f91815260200190565b602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190611c34565b905080156109c45781516040516309f8c93760e01b81526101d09190600401610b8d565b505050565b600082604001516001600160a01b0316826001600160a01b03161480610a04575082606001516001600160a01b0316826001600160a01b0316145b90505b92915050565b6000604051602001610a45906020808252601290820152711254d7d3505492d15517d11254d05093115160721b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b03841690820152606001604051602081830303815290604052805190602001209050919050565b604080516101208101909152606060e0820181815261010083019190915281908152602001610ad1604051806040016040528060608152602001606081525090565b8152602001610af3604051806040016040528060608152602001606081525090565b8152602001610b15604051806040016040528060608152602001606081525090565b8152602001610b37604051806040016040528060608152602001606081525090565b8152602001610b59604051806040016040528060608152602001606081525090565b8152602001610b7b604051806040016040528060608152602001606081525090565b905290565b6001600160a01b03169052565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b0381118282101715610bda57610bda610ba1565b60405290565b604051608081016001600160401b0381118282101715610bda57610bda610ba1565b60405161010081016001600160401b0381118282101715610bda57610bda610ba1565b60405161014081016001600160401b0381118282101715610bda57610bda610ba1565b604051606081016001600160401b0381118282101715610bda57610bda610ba1565b604051601f8201601f191681016001600160401b0381118282101715610c9257610c92610ba1565b604052919050565b6001600160a01b0381168114610caf57600080fd5b50565b803561011b81610c9a565b600060e08284031215610ccf57600080fd5b60405160e081016001600160401b0381118282101715610cf157610cf1610ba1565b6040529050808235610d0281610c9a565b81526020830135610d1281610c9a565b60208201526040830135610d2581610c9a565b60408201526060830135610d3881610c9a565b6060820152610d4960808401610cb2565b6080820152610d5a60a08401610cb2565b60a0820152610d6b60c08401610cb2565b60c08201525092915050565b60006001600160401b03821115610d9057610d90610ba1565b5060051b60200190565b600082601f830112610dab57600080fd5b81356020610dc0610dbb83610d77565b610c6a565b82815260059290921b84018101918181019086841115610ddf57600080fd5b8286015b84811015610e03578035610df681610c9a565b8352918301918301610de3565b509695505050505050565b80356009811061011b57600080fd5b80356003811061011b57600080fd5b60006101808284031215610e3f57600080fd5b610e47610bb7565b9050610e5282610e0e565b8152610e6060208301610e1d565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525061016080830135818301525092915050565b8015158114610caf57600080fd5b600060808284031215610ef757600080fd5b610eff610be0565b90508135610f0c81610ed7565b81526020820135610f1c81610ed7565b60208201526040820135610f2f81610ed7565b60408201526060820135610f4281610ed7565b606082015292915050565b600082601f830112610f5e57600080fd5b81356020610f6e610dbb83610d77565b82815260059290921b84018101918181019086841115610f8d57600080fd5b8286015b84811015610e035780358352918301918301610f91565b60006102408284031215610fbb57600080fd5b610fc3610be0565b905081356001600160401b0380821115610fdc57600080fd5b908301906101008286031215610ff157600080fd5b610ff9610c02565b61100283610cb2565b815261101060208401610cb2565b602082015261102160408401610cb2565b604082015261103260608401610cb2565b606082015261104360808401610cb2565b608082015261105460a08401610cb2565b60a082015261106560c08401610cb2565b60c082015260e08301358281111561107c57600080fd5b61108887828601610d9a565b60e083015250835261109d8560208601610e2c565b60208401526110b0856101a08601610ee5565b60408401526102208401359150808211156110ca57600080fd5b506110d784828501610f4d565b60608301525092915050565b6000608082840312156110f557600080fd5b6110fd610be0565b9050813561110a81610c9a565b8152602082013561111a81610c9a565b6020820152604082013561112d81610c9a565b60408201526060820135610f4281610c9a565b600082601f83011261115157600080fd5b81356020611161610dbb83610d77565b82815260079290921b8401810191818101908684111561118057600080fd5b8286015b84811015610e035761119688826110e3565b835291830191608001611184565b80356002811061011b57600080fd5b6000602082840312156111c557600080fd5b81356001600160401b03808211156111dc57600080fd5b9083019061026082860312156111f157600080fd5b6111f9610c25565b6112038684610cbd565b815260e08301356020820152610100808401358381111561122357600080fd5b61122f88828701610fa8565b604084015250610120808501358481111561124957600080fd5b61125589828801611140565b606085015250610140850135608084015261016085013560a084015261127f8861018087016110e3565b60c08401526112916102008601610cb2565b60e0840152610220850135828401526112ad61024086016111a4565b908301525095945050505050565b6000815180845260005b818110156112e1576020818501810151868301820152016112c5565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501808196508360051b810191508286016000805b8681101561139c578385038a52825160408151818852611342828901826112bb565b92890151888403898b01528051808552908a01938693508a0191505b808310156113875783516001600160a01b0316825292890192600192909201919089019061135e565b509b88019b9650505091850191600101611320565b509298975050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561142157898603605f19018452845180518888526113fb898901826112bb565b918401516001600160a01b031697840197909752955093810193928101926001016113d7565b50808801519550888503818a01525050505061143d8183611301565b95945050505050565b600081518084526020808501808196508360051b810191508286016000805b8681101561139c578385038a52825160408151818852611487828901826112bb565b92890151888403898b01528051808552908a01938693508a0191505b808310156114c357835182529289019260019290920191908901906114a3565b509b88019b9650505091850191600101611465565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561154657898603605f1901845284518051888852611529898901826112bb565b918401519784019790975295509381019392810192600101611505565b50808801519550888503818a01525050505061143d8183611446565b600081518084526020808501808196508360051b810191508286016000805b8681101561139c578385038a528251604081518188526115a3828901826112bb565b92890151888403898b01528051808552908a01938693508a0191505b808310156115df57835182529289019260019290920191908901906115bf565b509b88019b9650505091850191600101611581565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561166257898603605f1901845284518051888852611645898901826112bb565b918401519784019790975295509381019392810192600101611621565b50808801519550888503818a01525050505061143d8183611562565b600081518084526020808501808196508360051b810191508286016000805b8681101561139c578385038a528251604081518188526116bf828901826112bb565b92890151888403898b01528051808552908a01938693508a0191505b808310156116fd578351151582529289019260019290920191908901906116db565b509b88019b965050509185019160010161169d565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561178257898603605f1901845284518051888852611763898901826112bb565b918401511515978401979097529550938101939281019260010161173f565b50808801519550888503818a01525050505061143d818361167e565b600081518084526020808501808196508360051b810191508286016000805b8681101561139c578385038a528251604081518188526117df828901826112bb565b92890151888403898b01528051808552908a01938693508a0191505b8083101561181b57835182529289019260019290920191908901906117fb565b509b88019b96505050918501916001016117bd565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561189e57898603605f1901845284518051888852611881898901826112bb565b91840151978401979097529550938101939281019260010161185d565b50808801519550888503818a01525050505061143d818361179e565b600081518084526020808501808196506005915083821b81018387016000805b87811015611965578484038b528251604081518187526118fc828801826112bb565b928a0151878403888c01528051808552908b019392508a83019150808a1b83018b01865b8281101561194e57601f1985830301845261193c8287516112bb565b958d0195938d01939150600101611920565b509e8b019e975050509388019350506001016118da565b50919998505050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156119f157898603605f19018452845180518888526119c5898901826112bb565b91840151888303898601529190506119dd81836112bb565b9750505093810193928101926001016119a1565b50808801519550888503818a01525050505061143d81836118ba565b600081518084526020808501945084600583811b87018387016000805b87811015611965578584038b52825160408151818752611a4c828801826112bb565b928a0151878403888c01528051808552908b019392508a8301915080891b83018b01865b82811015611a9e57601f19858303018452611a8c8287516112bb565b958d0195938d01939150600101611a70565b509e8b019e97505050938801935050600101611a2a565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b82811015611b3257898603605f1901845284518051888852611b06898901826112bb565b9184015188830389860152919050611b1e81836112bb565b975050509381019392810192600101611ae2565b50808801519550888503818a01525050505061143d8183611a0d565b602081526000825160e06020840152611b6b6101008401826113aa565b90506020840151601f1980858403016040860152611b8983836114d8565b92506040860151915080858403016060860152611ba683836115f4565b92506060860151915080858403016080860152611bc38383611712565b925060808601519150808584030160a0860152611be08383611830565b925060a08601519150808584030160c0860152611bfd8383611974565b925060c08601519150808584030160e08601525061143d8282611ab5565b6001600160a01b03929092168252602082015260400190565b600060208284031215611c4657600080fd5b8151611c5181610ed7565b9392505050565b6001600160a01b0383168152604060208201819052600090611c7c908301846112bb565b949350505050565b634e487b7160e01b600052602160045260246000fd5b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b600081518084526020808501945080840160005b83811015611d0757611cf4878351611c9a565b6080969096019590820190600101611ce1565b509495945050505050565b60068110611d2257611d22611c84565b9052565b60208152611d38602082018351610b80565b60006020830151611d4c6040840182610b80565b506040830151611d5f6060840182610b80565b506060830151611d726080840182610b80565b50608083015160a083015260a0830151611d8f60c0840182610b80565b5060c083015160e083015260e08301516101a06101008181860152611db86101c0860184611ccd565b9086015161012086810191909152860151909250610140611ddb81870183610b80565b8601519050610160611def86820183610b80565b8601519050610180611e048682018315159052565b8601519050611e1585830182611d12565b5090949350505050565b60008060408385031215611e3257600080fd5b8251611e3d81610c9a565b6020939093015192949293505050565b600060208284031215611e5f57600080fd5b604051602081016001600160401b0381118282101715611e8157611e81610ba1565b80604052508091508251611e9481610ed7565b905292915050565b60008183036101c0811215611eb057600080fd5b611eb8610c48565b6060821215611ec657600080fd5b611ece610c48565b8451611ed981610c9a565b81526020850151611ee981610c9a565b60208201526040850151611efc81610c9a565b60408201528152610140605f198301811315611f1757600080fd5b611f1f610c25565b9250606085015183526080850151602084015260a0850151604084015260c0850151606084015260e085015160808401526101008086015160a08501526101208087015160c08601528287015160e08601526101608701518286015261018087015181860152505050816020820152611f9c856101a08601611e4d565b6040820152949350505050565b600060208284031215611fbb57600080fd5b5051919050565b80820180821115610a0757634e487b7160e01b600052601160045260246000fd5b600081518084526020808501945080840160005b83811015611d075781516001600160a01b031687529582019590820190600101611ff7565b60098110611d2257611d22611c84565b60038110611d2257611d22611c84565b61204782825161201c565b6020810151612059602084018261202c565b5060408181015190830152606080820151908301526080808201519083015260a0808201519083015260c0808201519083015260e0808201519083015261010080820151908301526101208082015190830152610140808201519083015261016090810151910152565b600081518084526020808501945080840160005b83811015611d07578151875295820195908201906001016120d7565b805161024080845281516001600160a01b03908116918501919091526020820151166102608401526040810151600091612131610280860183610b80565b606081015191506121466102a0860183610b80565b6080810151915061215b6102c0860183610b80565b60a081015191506121706102e0860183610b80565b60c08101519150612185610300860183610b80565b60e0015161010061032086015290506121a2610340850182611fe3565b905060208301516121b6602086018261203c565b50604083810151805115156101a0870152602081015115156101c08701529081015115156101e0860152606090810151151561020086015283015184820361022086015261143d82826120c3565b805160018060a01b03808251168452806020830151166020850152806040830151166040850152505060208101518051606084015260208101516080840152604081015160a0840152606081015160c0840152608081015160e084015260a0810151610100818186015260c08301519150610120828187015260e084015161014087015281840151610160870152808401516101808701525050505060408101516109c46101a08401825115159052565b60028110611d2257611d22611c84565b604081526000835160018060a01b038082511660408501528060208301511660608501528060408301511660808501528060608301511660a085015250608081015161231460c0850182610b80565b5060a081015161232760e0850182610b80565b5060c0015161233a610100840182610b80565b50602084015161234e610120840182611c9a565b5060408401516103a0806101a085015261236c6103e08501836120f3565b915060608601516101c0850152608086015161238c6101e0860182612204565b5060a08601519084015260c08501516123a96103c08501826122b5565b50602092909201929092529291505056fea26469706673582212201d4b50a8e16ede5de59ce12607496a9f56caf7ddb54594f6e5a1e68ea266319364736f6c63430008140033";

type IncreaseOrderExecutorConstructorParams =
  | [
      linkLibraryAddresses: IncreaseOrderExecutorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncreaseOrderExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class IncreaseOrderExecutor__factory extends ContractFactory {
  constructor(...args: IncreaseOrderExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        IncreaseOrderExecutor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: IncreaseOrderExecutorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3d31b232fb363902662fbc281b11ab3357\\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/PositionStoreUtils.sol:PositionStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7a972c741e25767aac46238a61c2174fde\\$__", "g"),
      linkLibraryAddresses[
        "contracts/position/IncreasePositionUtils.sol:IncreasePositionUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IncreaseOrderExecutor> {
    return super.deploy(
      _roleStore,
      overrides || {}
    ) as Promise<IncreaseOrderExecutor>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, overrides || {});
  }
  override attach(address: string): IncreaseOrderExecutor {
    return super.attach(address) as IncreaseOrderExecutor;
  }
  override connect(signer: Signer): IncreaseOrderExecutor__factory {
    return super.connect(signer) as IncreaseOrderExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncreaseOrderExecutorInterface {
    return new utils.Interface(_abi) as IncreaseOrderExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IncreaseOrderExecutor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IncreaseOrderExecutor;
  }
}

export interface IncreaseOrderExecutorLibraryAddresses {
  ["contracts/position/PositionStoreUtils.sol:PositionStoreUtils"]: string;
  ["contracts/position/IncreasePositionUtils.sol:IncreasePositionUtils"]: string;
}
