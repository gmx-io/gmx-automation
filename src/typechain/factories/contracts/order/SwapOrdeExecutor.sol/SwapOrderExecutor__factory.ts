/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SwapOrderExecutor,
  SwapOrderExecutorInterface,
} from "../../../../contracts/order/SwapOrdeExecutor.sol/SwapOrderExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxOracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestExpirationTime",
        type: "uint256",
      },
    ],
    name: "OracleTimestampsAreLargerThanRequestExpirationTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minOracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedTimestamp",
        type: "uint256",
      },
    ],
    name: "OracleTimestampsAreSmallerThanRequired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnexpectedMarket",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "contract DataStore",
                name: "dataStore",
                type: "address",
              },
              {
                internalType: "contract EventEmitter",
                name: "eventEmitter",
                type: "address",
              },
              {
                internalType: "contract MultichainVault",
                name: "multichainVault",
                type: "address",
              },
              {
                internalType: "contract OrderVault",
                name: "orderVault",
                type: "address",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "contract ISwapHandler",
                name: "swapHandler",
                type: "address",
              },
              {
                internalType: "contract IReferralStorage",
                name: "referralStorage",
                type: "address",
              },
            ],
            internalType: "struct BaseOrderUtils.ExecuteOrderParamsContracts",
            name: "contracts",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType: "struct Order.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum Order.OrderType",
                    name: "orderType",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Order.DecreasePositionSwapType",
                    name: "decreasePositionSwapType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "updatedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "srcChainId",
                    type: "uint256",
                  },
                ],
                internalType: "struct Order.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "shouldUnwrapNativeToken",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isFrozen",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "autoCancel",
                    type: "bool",
                  },
                ],
                internalType: "struct Order.Flags",
                name: "flags",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "_dataList",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Order.Props",
            name: "order",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props[]",
            name: "swapPathMarkets",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "minOracleTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxOracleTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingGas",
            type: "uint256",
          },
          {
            internalType: "enum Order.SecondaryOrderType",
            name: "secondaryOrderType",
            type: "uint8",
          },
        ],
        internalType: "struct BaseOrderUtils.ExecuteOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "processOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051611cc5380380611cc583398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051611c3461009160003960008181604001526101430152611c346000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a4a7b041461003b578063b0e4ece41461007f575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009261008d366004610fda565b61009f565b60405161007691906118c1565b6100a76108ec565b6101166040516020016100d8906020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250610127565b61011f826101e4565b90505b919050565b60405163ac4ab3fb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ac4ab3fb90604401602060405180830381865afa158015610192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b6919061198e565b6101e057338160405163a35b150b60e01b81526004016101d79291906119b2565b60405180910390fd5b5050565b6101ec6108ec565b60408201515160a001516001600160a01b03161561021d5760405163cc3459ff60e01b815260040160405180910390fd5b60408201516020015161012001518260800151101561026c57608082015160408301516020015161012001515b604051637d677abf60e01b8152600481019290925260248201526044016101d7565b61028461027f8360400151602001515190565b610784565b1580156102a1575060408201516020015161014001518260800151105b156102be576080820151604083015160200151610140015161024a565b8151516040516000916001600160a01b03169063bd02d0f59061030f90602001602080825260179082015276524551554553545f45585049524154494f4e5f54494d4560481b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161034391815260200190565b602060405180830381865afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038491906119de565b905060006040840151602001515160088111156103a3576103a36119f7565b1480156103d15750806103c0846040015160200151610120015190565b6103ca9190611a0d565b8360a00151115b156104125760a08301516040840151602001516101200151604051631b0971dd60e31b815260048101929092526024820152604481018290526064016101d7565b600080846000015160a001516001600160a01b0316631e5e6a79604051806101a001604052808860000151600001516001600160a01b031681526020018860000151602001516001600160a01b031681526020018860000151608001516001600160a01b031681526020018860000151606001516001600160a01b03168152602001886020015181526020016104ae89604001515160c0015190565b6001600160a01b031681526020016104cf8960400151602001516060015190565b8152602001886060015181526020016104f2896040015160200151610100015190565b815260200161050b896040015160200151610160015190565b1561051b57885160400151610526565b604089015151602001515b6001600160a01b031681526020016105448960400151516080015190565b6001600160a01b03168152602001610566896040015160200151610160015190565b1561057257600061057f565b6040808a01510151602001515b1515815260200160008152506040518263ffffffff1660e01b81526004016105a79190611ac1565b60408051808303816000875af11580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190611bba565b91509150610601856040015160200151610160015190565b156106e5578451805160208201516040928301519288015173__$97f16f82bae4ac682deb2ea1417bfd757e$__936315ff6d2d939291879061064590516020015190565b60408c015160200151610160015160405160e088901b6001600160e01b03191681526001600160a01b039687166004820152948616602486015292851660448501529084166064840152909216608482015260a481019190915260c401602060405180830381865af41580156106bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e391906119de565b505b6106ed6108ec565b80516106fa9060016107d7565b60408051808201909152600b81526a37baba383aba2a37b5b2b760a91b6020820152815161072b916000908661083c565b602081015161073b9060016107d7565b61077b60006040518060400160405280600c81526020016b1bdd5d1c1d5d105b5bdd5b9d60a21b815250848460200151610899909392919063ffffffff16565b95945050505050565b600080826008811115610799576107996119f7565b14806107b6575060028260088111156107b4576107b46119f7565b145b8061011f575060048260088111156107d0576107d06119f7565b1492915050565b806001600160401b038111156107ef576107ef6109ea565b60405190808252806020026020018201604052801561083557816020015b60408051808201909152606081526000602082015281526020019060019003908161080d5790505b5090915250565b818460000151848151811061085357610853611be8565b602002602001015160000181905250808460000151848151811061087957610879611be8565b6020908102919091018101516001600160a01b0390921691015250505050565b81846000015184815181106108b0576108b0611be8565b60200260200101516000018190525080846000015184815181106108d6576108d6611be8565b6020026020010151602001818152505050505050565b604080516101208101909152606060e082018181526101008301919091528190815260200161092e604051806040016040528060608152602001606081525090565b8152602001610950604051806040016040528060608152602001606081525090565b8152602001610972604051806040016040528060608152602001606081525090565b8152602001610994604051806040016040528060608152602001606081525090565b81526020016109b6604051806040016040528060608152602001606081525090565b81526020016109d8604051806040016040528060608152602001606081525090565b905290565b6001600160a01b03169052565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b0381118282101715610a2357610a236109ea565b60405290565b604051608081016001600160401b0381118282101715610a2357610a236109ea565b60405161010081016001600160401b0381118282101715610a2357610a236109ea565b60405161014081016001600160401b0381118282101715610a2357610a236109ea565b604051601f8201601f191681016001600160401b0381118282101715610ab957610ab96109ea565b604052919050565b6001600160a01b0381168114610ad657600080fd5b50565b803561012281610ac1565b600060e08284031215610af657600080fd5b60405160e081016001600160401b0381118282101715610b1857610b186109ea565b6040529050808235610b2981610ac1565b81526020830135610b3981610ac1565b60208201526040830135610b4c81610ac1565b60408201526060830135610b5f81610ac1565b6060820152610b7060808401610ad9565b6080820152610b8160a08401610ad9565b60a0820152610b9260c08401610ad9565b60c08201525092915050565b60006001600160401b03821115610bb757610bb76109ea565b5060051b60200190565b600082601f830112610bd257600080fd5b81356020610be7610be283610b9e565b610a91565b82815260059290921b84018101918181019086841115610c0657600080fd5b8286015b84811015610c2a578035610c1d81610ac1565b8352918301918301610c0a565b509695505050505050565b80356009811061012257600080fd5b80356003811061012257600080fd5b60006101808284031215610c6657600080fd5b610c6e610a00565b9050610c7982610c35565b8152610c8760208301610c44565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525061016080830135818301525092915050565b8015158114610ad657600080fd5b600060808284031215610d1e57600080fd5b610d26610a29565b90508135610d3381610cfe565b81526020820135610d4381610cfe565b60208201526040820135610d5681610cfe565b60408201526060820135610d6981610cfe565b606082015292915050565b600082601f830112610d8557600080fd5b81356020610d95610be283610b9e565b82815260059290921b84018101918181019086841115610db457600080fd5b8286015b84811015610c2a5780358352918301918301610db8565b60006102408284031215610de257600080fd5b610dea610a29565b905081356001600160401b0380821115610e0357600080fd5b908301906101008286031215610e1857600080fd5b610e20610a4b565b610e2983610ad9565b8152610e3760208401610ad9565b6020820152610e4860408401610ad9565b6040820152610e5960608401610ad9565b6060820152610e6a60808401610ad9565b6080820152610e7b60a08401610ad9565b60a0820152610e8c60c08401610ad9565b60c082015260e083013582811115610ea357600080fd5b610eaf87828601610bc1565b60e0830152508352610ec48560208601610c53565b6020840152610ed7856101a08601610d0c565b6040840152610220840135915080821115610ef157600080fd5b50610efe84828501610d74565b60608301525092915050565b600060808284031215610f1c57600080fd5b610f24610a29565b90508135610f3181610ac1565b81526020820135610f4181610ac1565b60208201526040820135610f5481610ac1565b60408201526060820135610d6981610ac1565b600082601f830112610f7857600080fd5b81356020610f88610be283610b9e565b82815260079290921b84018101918181019086841115610fa757600080fd5b8286015b84811015610c2a57610fbd8882610f0a565b835291830191608001610fab565b80356002811061012257600080fd5b600060208284031215610fec57600080fd5b81356001600160401b038082111561100357600080fd5b90830190610260828603121561101857600080fd5b611020610a6e565b61102a8684610ae4565b815260e08301356020820152610100808401358381111561104a57600080fd5b61105688828701610dcf565b604084015250610120808501358481111561107057600080fd5b61107c89828801610f67565b606085015250610140850135608084015261016085013560a08401526110a6886101808701610f0a565b60c08401526110b86102008601610ad9565b60e0840152610220850135828401526110d46102408601610fcb565b908301525095945050505050565b6000815180845260005b81811015611108576020818501810151868301820152016110ec565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501808196508360051b810191508286016000805b868110156111c3578385038a52825160408151818852611169828901826110e2565b92890151888403898b01528051808552908a01938693508a0191505b808310156111ae5783516001600160a01b03168252928901926001929092019190890190611185565b509b88019b9650505091850191600101611147565b509298975050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561124857898603605f1901845284518051888852611222898901826110e2565b918401516001600160a01b031697840197909752955093810193928101926001016111fe565b50808801519550888503818a01525050505061077b8183611128565b600081518084526020808501808196508360051b810191508286016000805b868110156111c3578385038a528251604081518188526112a5828901826110e2565b92890151888403898b01528051808552908a01938693508a0191505b808310156112e157835182529289019260019290920191908901906112c1565b509b88019b9650505091850191600101611283565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561136457898603605f1901845284518051888852611347898901826110e2565b918401519784019790975295509381019392810192600101611323565b50808801519550888503818a01525050505061077b8183611264565b600081518084526020808501808196508360051b810191508286016000805b868110156111c3578385038a528251604081518188526113c1828901826110e2565b92890151888403898b01528051808552908a01938693508a0191505b808310156113fd57835182529289019260019290920191908901906113dd565b509b88019b965050509185019160010161139f565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561148057898603605f1901845284518051888852611463898901826110e2565b91840151978401979097529550938101939281019260010161143f565b50808801519550888503818a01525050505061077b8183611380565b600081518084526020808501808196508360051b810191508286016000805b868110156111c3578385038a528251604081518188526114dd828901826110e2565b92890151888403898b01528051808552908a01938693508a0191505b8083101561151b578351151582529289019260019290920191908901906114f9565b509b88019b96505050918501916001016114bb565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156115a057898603605f1901845284518051888852611581898901826110e2565b918401511515978401979097529550938101939281019260010161155d565b50808801519550888503818a01525050505061077b818361149c565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561148057898603605f190184528451805188885261160d898901826110e2565b9184015197840197909752955093810193928101926001016115e9565b600081518084526020808501808196506005915083821b81018387016000805b878110156116d5578484038b5282516040815181875261166c828801826110e2565b928a0151878403888c01528051808552908b019392508a83019150808a1b83018b01865b828110156116be57601f198583030184526116ac8287516110e2565b958d0195938d01939150600101611690565b509e8b019e9750505093880193505060010161164a565b50919998505050505050505050565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b8281101561176157898603605f1901845284518051888852611735898901826110e2565b918401518883038986015291905061174d81836110e2565b975050509381019392810192600101611711565b50808801519550888503818a01525050505061077b818361162a565b600081518084526020808501808196506005915083821b81018387016000805b878110156116d5578484038b528251604081518187526117bf828801826110e2565b928a0151878403888c01528051808552908b019392508a83019150808a1b83018b01865b8281101561181157601f198583030184526117ff8287516110e2565b958d0195938d019391506001016117e3565b509e8b019e9750505093880193505060010161179d565b60006040808401835182865281815180845260608801915060608160051b89010193506020808401935060005b828110156118a557898603605f1901845284518051888852611879898901826110e2565b918401518883038986015291905061189181836110e2565b975050509381019392810192600101611855565b50808801519550888503818a01525050505061077b818361177d565b602081526000825160e060208401526118de6101008401826111d1565b90506020840151601f19808584030160408601526118fc83836112f6565b925060408601519150808584030160608601526119198383611412565b925060608601519150808584030160808601526119368383611530565b925060808601519150808584030160a086015261195383836115bc565b925060a08601519150808584030160c086015261197083836116e4565b925060c08601519150808584030160e08601525061077b8282611828565b6000602082840312156119a057600080fd5b81516119ab81610cfe565b9392505050565b6001600160a01b03831681526040602082018190526000906119d6908301846110e2565b949350505050565b6000602082840312156119f057600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b80820180821115611a2e57634e487b7160e01b600052601160045260246000fd5b92915050565b600081518084526020808501945080840160005b83811015611a9457815180516001600160a01b039081168952848201518116858a01526040808301518216908a0152606091820151169088015260809096019590820190600101611a48565b509495945050505050565b60068110611abd57634e487b7160e01b600052602160045260246000fd5b9052565b60208152611ad36020820183516109dd565b60006020830151611ae760408401826109dd565b506040830151611afa60608401826109dd565b506060830151611b0d60808401826109dd565b50608083015160a083015260a0830151611b2a60c08401826109dd565b5060c083015160e083015260e08301516101a06101008181860152611b536101c0860184611a34565b9086015161012086810191909152860151909250610140611b76818701836109dd565b8601519050610160611b8a868201836109dd565b8601519050610180611b9f8682018315159052565b8601519050611bb085830182611a9f565b5090949350505050565b60008060408385031215611bcd57600080fd5b8251611bd881610ac1565b6020939093015192949293505050565b634e487b7160e01b600052603260045260246000fdfea264697066735822122072058639c368e19e2f32b81859193dc6a740d9c96e734de645b46587469ac1d964736f6c63430008140033";

type SwapOrderExecutorConstructorParams =
  | [linkLibraryAddresses: SwapOrderExecutorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapOrderExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SwapOrderExecutor__factory extends ContractFactory {
  constructor(...args: SwapOrderExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SwapOrderExecutor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SwapOrderExecutorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$97f16f82bae4ac682deb2ea1417bfd757e\\$__", "g"),
      linkLibraryAddresses[
        "contracts/multichain/MultichainUtils.sol:MultichainUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapOrderExecutor> {
    return super.deploy(
      _roleStore,
      overrides || {}
    ) as Promise<SwapOrderExecutor>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, overrides || {});
  }
  override attach(address: string): SwapOrderExecutor {
    return super.attach(address) as SwapOrderExecutor;
  }
  override connect(signer: Signer): SwapOrderExecutor__factory {
    return super.connect(signer) as SwapOrderExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapOrderExecutorInterface {
    return new utils.Interface(_abi) as SwapOrderExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapOrderExecutor {
    return new Contract(address, _abi, signerOrProvider) as SwapOrderExecutor;
  }
}

export interface SwapOrderExecutorLibraryAddresses {
  ["contracts/multichain/MultichainUtils.sol:MultichainUtils"]: string;
}
