// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SwapOrderExecutor,
  SwapOrderExecutorInterface,
} from "../../../contracts/order/SwapOrderExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxOracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestExpirationTime",
        type: "uint256",
      },
    ],
    name: "OracleTimestampsAreLargerThanRequestExpirationTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minOracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedTimestamp",
        type: "uint256",
      },
    ],
    name: "OracleTimestampsAreSmallerThanRequired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnexpectedMarket",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "contract DataStore",
                name: "dataStore",
                type: "address",
              },
              {
                internalType: "contract EventEmitter",
                name: "eventEmitter",
                type: "address",
              },
              {
                internalType: "contract MultichainVault",
                name: "multichainVault",
                type: "address",
              },
              {
                internalType: "contract OrderVault",
                name: "orderVault",
                type: "address",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "contract ISwapHandler",
                name: "swapHandler",
                type: "address",
              },
              {
                internalType: "contract IReferralStorage",
                name: "referralStorage",
                type: "address",
              },
            ],
            internalType: "struct BaseOrderUtils.ExecuteOrderParamsContracts",
            name: "contracts",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "account",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "receiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "cancellationReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "callbackContract",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "uiFeeReceiver",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "market",
                    type: "address",
                  },
                  {
                    internalType: "address",
                    name: "initialCollateralToken",
                    type: "address",
                  },
                  {
                    internalType: "address[]",
                    name: "swapPath",
                    type: "address[]",
                  },
                ],
                internalType: "struct Order.Addresses",
                name: "addresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum Order.OrderType",
                    name: "orderType",
                    type: "uint8",
                  },
                  {
                    internalType: "enum Order.DecreasePositionSwapType",
                    name: "decreasePositionSwapType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "sizeDeltaUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "initialCollateralDeltaAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "triggerPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptablePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callbackGasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minOutputAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "updatedAtTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "validFromTime",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "srcChainId",
                    type: "uint256",
                  },
                ],
                internalType: "struct Order.Numbers",
                name: "numbers",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "bool",
                    name: "isLong",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "shouldUnwrapNativeToken",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "isFrozen",
                    type: "bool",
                  },
                  {
                    internalType: "bool",
                    name: "autoCancel",
                    type: "bool",
                  },
                ],
                internalType: "struct Order.Flags",
                name: "flags",
                type: "tuple",
              },
              {
                internalType: "bytes32[]",
                name: "_dataList",
                type: "bytes32[]",
              },
            ],
            internalType: "struct Order.Props",
            name: "order",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props[]",
            name: "swapPathMarkets",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "minOracleTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxOracleTimestamp",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "marketToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "indexToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "longToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "shortToken",
                type: "address",
              },
            ],
            internalType: "struct Market.Props",
            name: "market",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingGas",
            type: "uint256",
          },
          {
            internalType: "enum Order.SecondaryOrderType",
            name: "secondaryOrderType",
            type: "uint8",
          },
        ],
        internalType: "struct BaseOrderUtils.ExecuteOrderParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "processOrder",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b50604051611c12380380611c12833981016040819052602c916041565b60016000556001600160a01b0316608052606f565b600060208284031215605257600080fd5b81516001600160a01b0381168114606857600080fd5b9392505050565b608051611b8261009060003960008181604001526101b20152611b826000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634a4a7b041461003b578063b0e4ece41461007f575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009261008d366004611054565b61009f565b6040516100769190611811565b6100a7610953565b6100af610138565b61011e6040516020016100e0906020808252600a908201526921a7a72a2927a62622a960b11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250610196565b6101278261024a565b90506101336001600055565b919050565b60026000540361018f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b60405163ac4ab3fb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ac4ab3fb90604401602060405180830381865afa158015610201573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022591906118e1565b61024657338160405163a35b150b60e01b8152600401610186929190611905565b5050565b610252610953565b60408201515160a001516001600160a01b0316156102835760405163cc3459ff60e01b815260040160405180910390fd5b6040820151602001516101200151826080015110156102d257608082015160408301516020015161012001515b604051637d677abf60e01b815260048101929092526024820152604401610186565b6102ea6102e58360400151602001515190565b6107ea565b158015610307575060408201516020015161014001518260800151105b1561032457608082015160408301516020015161014001516102b0565b8151516040516000916001600160a01b03169063bd02d0f59061037590602001602080825260179082015276524551554553545f45585049524154494f4e5f54494d4560481b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016103a991815260200190565b602060405180830381865afa1580156103c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ea9190611931565b905060006040840151602001515160088111156104095761040961194a565b148015610437575080610426846040015160200151610120015190565b6104309190611960565b8360a00151115b156104785760a08301516040840151602001516101200151604051631b0971dd60e31b81526004810192909252602482015260448101829052606401610186565b600080846000015160a001516001600160a01b0316631e5e6a79604051806101a001604052808860000151600001516001600160a01b031681526020018860000151602001516001600160a01b031681526020018860000151608001516001600160a01b031681526020018860000151606001516001600160a01b031681526020018860200151815260200161051489604001515160c0015190565b6001600160a01b031681526020016105358960400151602001516060015190565b815260200188606001518152602001610558896040015160200151610100015190565b8152602001610571896040015160200151610160015190565b156105815788516040015161058c565b604089015151602001515b6001600160a01b031681526020016105aa8960400151516080015190565b6001600160a01b031681526020016105cc896040015160200151610160015190565b156105d85760006105e5565b6040808a01510151602001515b1515815260200160008152506040518263ffffffff1660e01b815260040161060d9190611a14565b60408051808303816000875af115801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190611b08565b91509150610667856040015160200151610160015190565b1561074b578451805160208201516040928301519288015173__$97f16f82bae4ac682deb2ea1417bfd757e$__936315ff6d2d93929187906106ab90516020015190565b60408c015160200151610160015160405160e088901b6001600160e01b03191681526001600160a01b039687166004820152948616602486015292851660448501529084166064840152909216608482015260a481019190915260c401602060405180830381865af4158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190611931565b505b610753610953565b805161076090600161083e565b60408051808201909152600b81526a37baba383aba2a37b5b2b760a91b6020820152815161079191600090866108a3565b60208101516107a190600161083e565b6107e160006040518060400160405280600c81526020016b1bdd5d1c1d5d105b5bdd5b9d60a21b815250848460200151610900909392919063ffffffff16565b95945050505050565b6000808260088111156107ff576107ff61194a565b148061081c5750600282600881111561081a5761081a61194a565b145b80610838575060048260088111156108365761083661194a565b145b92915050565b806001600160401b0381111561085657610856610a51565b60405190808252806020026020018201604052801561089c57816020015b6040805180820190915260608152600060208201528152602001906001900390816108745790505b5090915250565b81846000015184815181106108ba576108ba611b36565b60200260200101516000018190525080846000015184815181106108e0576108e0611b36565b6020908102919091018101516001600160a01b0390921691015250505050565b818460000151848151811061091757610917611b36565b602002602001015160000181905250808460000151848151811061093d5761093d611b36565b6020026020010151602001818152505050505050565b604080516101208101909152606060e0820181815261010083019190915281908152602001610995604051806040016040528060608152602001606081525090565b81526020016109b7604051806040016040528060608152602001606081525090565b81526020016109d9604051806040016040528060608152602001606081525090565b81526020016109fb604051806040016040528060608152602001606081525090565b8152602001610a1d604051806040016040528060608152602001606081525090565b8152602001610a3f604051806040016040528060608152602001606081525090565b905290565b6001600160a01b03169052565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610a8957610a89610a51565b60405290565b60405161018081016001600160401b0381118282101715610a8957610a89610a51565b604051608081016001600160401b0381118282101715610a8957610a89610a51565b60405161010081016001600160401b0381118282101715610a8957610a89610a51565b60405161014081016001600160401b0381118282101715610a8957610a89610a51565b604051601f8201601f191681016001600160401b0381118282101715610b4257610b42610a51565b604052919050565b6001600160a01b0381168114610b5f57600080fd5b50565b803561013381610b4a565b600060e08284031215610b7f57600080fd5b610b87610a67565b90508135610b9481610b4a565b81526020820135610ba481610b4a565b60208201526040820135610bb781610b4a565b60408201526060820135610bca81610b4a565b6060820152610bdb60808301610b62565b6080820152610bec60a08301610b62565b60a0820152610bfd60c08301610b62565b60c082015292915050565b60006001600160401b03821115610c2157610c21610a51565b5060051b60200190565b600082601f830112610c3c57600080fd5b8135610c4f610c4a82610c08565b610b1a565b8082825260208201915060208360051b860101925085831115610c7157600080fd5b602085015b83811015610c97578035610c8981610b4a565b835260209283019201610c76565b5095945050505050565b80356009811061013357600080fd5b80356003811061013357600080fd5b60006101808284031215610cd257600080fd5b610cda610a8f565b9050610ce582610ca1565b8152610cf360208301610cb0565b602082015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c0808301359082015260e080830135908201526101008083013590820152610120808301359082015261014080830135908201526101609182013591810191909152919050565b8015158114610b5f57600080fd5b600060808284031215610d8857600080fd5b610d90610ab2565b90508135610d9d81610d68565b81526020820135610dad81610d68565b60208201526040820135610dc081610d68565b60408201526060820135610dd381610d68565b606082015292915050565b600082601f830112610def57600080fd5b8135610dfd610c4a82610c08565b8082825260208201915060208360051b860101925085831115610e1f57600080fd5b602085015b83811015610c97578035835260209283019201610e24565b60006102408284031215610e4f57600080fd5b610e57610ab2565b905081356001600160401b03811115610e6f57600080fd5b82016101008185031215610e8257600080fd5b610e8a610ad4565b610e9382610b62565b8152610ea160208301610b62565b6020820152610eb260408301610b62565b6040820152610ec360608301610b62565b6060820152610ed460808301610b62565b6080820152610ee560a08301610b62565b60a0820152610ef660c08301610b62565b60c082015260e08201356001600160401b03811115610f1457600080fd5b610f2086828501610c2b565b60e083015250825250610f368360208401610cbf565b6020820152610f49836101a08401610d76565b60408201526102208201356001600160401b03811115610f6857600080fd5b610f7484828501610dde565b60608301525092915050565b600060808284031215610f9257600080fd5b610f9a610ab2565b90508135610fa781610b4a565b81526020820135610fb781610b4a565b60208201526040820135610fca81610b4a565b60408201526060820135610dd381610b4a565b600082601f830112610fee57600080fd5b8135610ffc610c4a82610c08565b8082825260208201915060208360071b86010192508583111561101e57600080fd5b602085015b83811015610c97576110358782610f80565b8352602090920191608001611023565b80356002811061013357600080fd5b60006020828403121561106657600080fd5b81356001600160401b0381111561107c57600080fd5b8201610260818503121561108f57600080fd5b611097610af7565b6110a18583610b6d565b815260e082013560208201526101008201356001600160401b038111156110c757600080fd5b6110d386828501610e3c565b6040830152506101208201356001600160401b038111156110f357600080fd5b6110ff86828501610fdd565b606083015250610140820135608082015261016082013560a0820152611129856101808401610f80565b60c082015261113b6102008301610b62565b60e08201526102208201356101008201526111596102408301611045565b610120820152949350505050565b6000815180845260005b8181101561118d57602081850181015186830182015201611171565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208501945060208160051b8301016020850160005b8381101561125457601f1985840301885281518051604085526111f16040860182611167565b6020928301518682038785015280518083529084019360009350909101905b8083101561123b5783516001600160a01b031682526020938401936001939093019290910190611210565b5060209a8b019a909550939093019250506001016111cb565b50909695505050505050565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156112da57605f1988860301835283518051604087526112b26040880182611167565b6020928301516001600160a01b0316978301979097525093840193929092019160010161128c565b50505050602083015184820360208601526107e182826111ad565b600082825180855260208501945060208160051b8301016020850160005b8381101561125457601f1985840301885281518051604085526113396040860182611167565b6020928301518682038785015280518083529084019360009350909101905b8083101561137b5783518252602082019150602084019350600183019250611358565b5060209a8b019a90955093909301925050600101611313565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561140557605f1988860301835283518051604087526113e66040880182611167565b60209283015197830197909752509384019392909201916001016113c0565b50505050602083015184820360208601526107e182826112f5565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561140557605f1988860301835283518051604087526114726040880182611167565b602092830151978301979097525093840193929092019160010161144c565b600082825180855260208501945060208160051b8301016020850160005b8381101561125457601f1985840301885281518051604085526114d56040860182611167565b6020928301518682038785015280518083529084019360009350909101905b80831015611519578351151582526020820191506020840193506001830192506114f4565b5060209a8b019a909550939093019250506001016114af565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156115a557605f1988860301835283518051604087526115846040880182611167565b6020928301511515978301979097525093840193929092019160010161155e565b50505050602083015184820360208601526107e18282611491565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561140557605f1988860301835283518051604087526116126040880182611167565b60209283015197830197909752509384019392909201916001016115ec565b600082825180855260208501945060208160051b8301016020850160005b8381101561125457601f1985840301885281518051604085526116756040860182611167565b6020928301518682038785015280518083529084019391925081830191600582901b84010160005b828110156116ce57601f198583030184526116b9828751611167565b6020968701969490940193915060010161169d565b50809750505050505060208201915060208801975060018101905061164f565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561177257605f1988860301835283518051604087526117406040880182611167565b905060208201519150868103602088015261175b8183611167565b96505050602093840193929092019160010161171a565b50505050602083015184820360208601526107e18282611631565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561177257605f1988860301835283518051604087526117df6040880182611167565b90506020820151915086810360208801526117fa8183611167565b9650505060209384019392909201916001016117b9565b602081526000825160e0602084015261182e610100840182611260565b90506020840151601f1984830301604085015261184b8282611394565b9150506040840151601f198483030160608501526118698282611420565b9150506060840151601f198483030160808501526118878282611532565b9150506080840151601f198483030160a08501526118a582826115c0565b91505060a0840151601f198483030160c08501526118c382826116ee565b91505060c0840151601f198483030160e08501526107e1828261178d565b6000602082840312156118f357600080fd5b81516118fe81610d68565b9392505050565b6001600160a01b038316815260406020820181905260009061192990830184611167565b949350505050565b60006020828403121561194357600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b8082018082111561083857634e487b7160e01b600052601160045260246000fd5b600081518084526020840193506020830160005b828110156119e857815180516001600160a01b0390811688526020808301518216818a01526040808401518316908a01526060928301519091169188019190915260809096019590910190600101611995565b5093949350505050565b60068110611a1057634e487b7160e01b600052602160045260246000fd5b9052565b60208152611a26602082018351610a44565b60006020830151611a3a6040840182610a44565b506040830151611a4d6060840182610a44565b506060830151611a606080840182610a44565b50608083015160a083015260a0830151611a7d60c0840182610a44565b5060c083015160e083015260e08301516101a0610100840152611aa46101c0840182611981565b9050610100840151610120840152610120840151611ac6610140850182610a44565b50610140840151611adb610160850182610a44565b5061016084015180151561018085015250610180840151611b006101a08501826119f2565b509392505050565b60008060408385031215611b1b57600080fd5b8251611b2681610b4a565b6020939093015192949293505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220c36c6bb07c6c6b2504b052e332603f196ab48a8adfb3ee9ddede32296faa918964736f6c634300081d0033";

type SwapOrderExecutorConstructorParams =
  | [linkLibraryAddresses: SwapOrderExecutorLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapOrderExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SwapOrderExecutor__factory extends ContractFactory {
  constructor(...args: SwapOrderExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SwapOrderExecutor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SwapOrderExecutorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$97f16f82bae4ac682deb2ea1417bfd757e\$__", "g"),
      linkLibraryAddresses[
        "contracts/multichain/MultichainUtils.sol:MultichainUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapOrderExecutor> {
    return super.deploy(
      _roleStore,
      overrides || {}
    ) as Promise<SwapOrderExecutor>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_roleStore, overrides || {});
  }
  override attach(address: string): SwapOrderExecutor {
    return super.attach(address) as SwapOrderExecutor;
  }
  override connect(signer: Signer): SwapOrderExecutor__factory {
    return super.connect(signer) as SwapOrderExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapOrderExecutorInterface {
    return new utils.Interface(_abi) as SwapOrderExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapOrderExecutor {
    return new Contract(address, _abi, signerOrProvider) as SwapOrderExecutor;
  }
}

export interface SwapOrderExecutorLibraryAddresses {
  ["contracts/multichain/MultichainUtils.sol:MultichainUtils"]: string;
}
