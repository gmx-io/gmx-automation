/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SwapOrderUtils,
  SwapOrderUtilsInterface,
} from "../../../contracts/order/SwapOrderUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxOracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestExpirationTime",
        type: "uint256",
      },
    ],
    name: "OracleTimestampsAreLargerThanRequestExpirationTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minOracleTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedTimestamp",
        type: "uint256",
      },
    ],
    name: "OracleTimestampsAreSmallerThanRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "UnexpectedMarket",
    type: "error",
  },
];

const _bytecode =
  "0x61199061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063da6fe44f1461003a575b600080fd5b81801561004657600080fd5b5061005a610055366004610cb8565b610070565b6040516100679190611673565b60405180910390f35b61007861064e565b60408201515160a001516001600160a01b0316156100a95760405163cc3459ff60e01b815260040160405180910390fd5b6040820151602001516101200151826080015110156100fd57608082015160408301516020015161012001515b604051637d677abf60e01b8152600481019290925260248201526044015b60405180910390fd5b6101156101108360400151602001515190565b6104e5565b158015610132575060408201516020015161014001518260800151105b1561014f57608082015160408301516020015161014001516100d6565b8151516040516000916001600160a01b03169063bd02d0f5906101a090602001602080825260179082015276524551554553545f45585049524154494f4e5f54494d4560481b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016101d491815260200190565b602060405180830381865afa1580156101f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102159190611740565b9050600060408401516020015151600881111561023457610234611759565b148015610262575080610251846040015160200151610120015190565b61025b919061176f565b8360a00151115b156102a35760a08301516040840151602001516101200151604051631b0971dd60e31b815260048101929092526024820152604481018290526064016100f4565b60008073__$2ebd8d293950cf319742e0db402ead4961$";

type SwapOrderUtilsConstructorParams =
  | [linkLibraryAddresses: SwapOrderUtilsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapOrderUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SwapOrderUtils__factory extends ContractFactory {
  constructor(...args: SwapOrderUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SwapOrderUtils__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SwapOrderUtilsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$2ebd8d293950cf319742e0db402ead4961\\$__", "g"),
      linkLibraryAddresses["contracts/swap/SwapUtils.sol:SwapUtils"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapOrderUtils> {
    return super.deploy(overrides || {}) as Promise<SwapOrderUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapOrderUtils {
    return super.attach(address) as SwapOrderUtils;
  }
  override connect(signer: Signer): SwapOrderUtils__factory {
    return super.connect(signer) as SwapOrderUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapOrderUtilsInterface {
    return new utils.Interface(_abi) as SwapOrderUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapOrderUtils {
    return new Contract(address, _abi, signerOrProvider) as SwapOrderUtils;
  }
}

export interface SwapOrderUtilsLibraryAddresses {
  ["contracts/swap/SwapUtils.sol:SwapUtils"]: string;
}
