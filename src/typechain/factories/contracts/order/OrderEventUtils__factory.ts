// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OrderEventUtils,
  OrderEventUtilsInterface,
} from "../../../contracts/order/OrderEventUtils";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "cancellationReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address",
                name: "initialCollateralToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "swapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Order.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Order.OrderType",
                name: "orderType",
                type: "Order.OrderType",
              },
              {
                internalType: "enum Order.DecreasePositionSwapType",
                name: "decreasePositionSwapType",
                type: "Order.DecreasePositionSwapType",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialCollateralDeltaAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "acceptablePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minOutputAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "validFromTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Order.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isLong",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isFrozen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "autoCancel",
                type: "bool",
              },
            ],
            internalType: "struct Order.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Order.Props",
        name: "order",
        type: "tuple",
      },
    ],
    name: "createEventData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x612b29610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061008d5760003560e01c8063163a46cd1461009257806321f5dc7d146100bb57806368ace9b0146100dd57806375758ca2146100fd57806388085a6d1461011d5780638c86318f1461013d57806397c3f7ab1461015d578063b47239231461017d578063eeca8d2c1461019d575b600080fd5b6100a56100a0366004611a74565b6101bd565b6040516100b29190612163565b60405180910390f35b8180156100c757600080fd5b506100db6100d6366004612233565b6107d7565b005b8180156100e957600080fd5b506100db6100f836600461228b565b610899565b81801561010957600080fd5b506100db6101183660046122e2565b6109da565b81801561012957600080fd5b506100db61013836600461232a565b610ae7565b81801561014957600080fd5b506100db61015836600461232a565b610bff565b81801561016957600080fd5b506100db6101783660046123c0565b610d05565b81801561018957600080fd5b506100db6101983660046123c0565b610e78565b8180156101a957600080fd5b506100db6101b8366004612233565b610fb1565b6101c5611535565b6101cd611535565b80516101da906007611264565b6102126000604051806040016040528060078152602001661858d8dbdd5b9d60ca1b81525061020886515190565b84519291906112c9565b6102446001604051806040016040528060088152602001673932b1b2b4bb32b960c11b81525061020886516020015190565b61027e60026040518060400160405280601081526020016f18d85b1b189858dad0dbdb9d1c9858dd60821b81525061020886516060015190565b6102b560036040518060400160405280600d81526020016c3ab4a332b2a932b1b2b4bb32b960991b81525061020886516080015190565b6102e56004604051806040016040528060068152602001651b585c9ad95d60d21b815250610208865160a0015190565b61032560056040518060400160405280601681526020017534b734ba34b0b621b7b63630ba32b930b62a37b5b2b760511b815250610208865160c0015190565b61036360066040518060400160405280601481526020017331b0b731b2b63630ba34b7b72932b1b2b4bb32b960611b81525061020886516040015190565b8051610370906001611326565b6103ac6000604051806040016040528060088152602001670e6eec2e0a0c2e8d60c31b8152506103a2865160e0015190565b8451929190611390565b60208101516103bc90600c611264565b61040d6000604051806040016040528060098152602001686f726465725479706560b81b8152506103ef86602001515190565b600881111561040057610400612484565b60208501519291906113e2565b6104636001604051806040016040528060188152602001776465637265617365506f736974696f6e537761705479706560401b81525061045286602090810151015190565b600281111561040057610400612484565b61049c60026040518060400160405280600c81526020016b1cda5e9951195b1d18555cd960a21b81525061040086602001516040015190565b6104e560036040518060400160405280601c81526020017b1a5b9a5d1a585b10dbdb1b185d195c985b11195b1d18505b5bdd5b9d60221b81525061040086602001516060015190565b61051e60046040518060400160405280600c81526020016b74726967676572507269636560a01b81525061040086602001516080015190565b61055a60056040518060400160405280600f81526020016e61636365707461626c65507269636560881b815250610400866020015160a0015190565b61059360066040518060400160405280600c81526020016b657865637574696f6e46656560a01b815250610400866020015160c0015190565b6105d060076040518060400160405280601081526020016f18d85b1b189858dad1d85cd31a5b5a5d60821b815250610400866020015160e0015190565b61060d60086040518060400160405280600f81526020016e1b5a5b93dd5d1c1d5d105b5bdd5b9d608a1b8152506104008660200151610100015190565b61064860096040518060400160405280600d81526020016c75706461746564417454696d6560981b8152506104008660200151610120015190565b610683600a6040518060400160405280600d81526020016c76616c696446726f6d54696d6560981b8152506104008660200151610140015190565b6106bb600b6040518060400160405280600a8152602001691cdc98d0da185a5b925960b21b8152506104008660200151610160015190565b60608101516106cb906003611264565b61070860006040518060400160405280600681526020016569734c6f6e6760d01b8152506106fb86604001515190565b6060850151929190611435565b61074c60016040518060400160405280601781526020017639b437bab6322ab73bb930b82730ba34bb32aa37b5b2b760491b8152506106fb86604001516020015190565b61078360026040518060400160405280600a815260200169185d5d1bd0d85b98d95b60b21b8152506106fb86604001516060015190565b6080810151610793906001611326565b6107d160006040518060400160405280600881526020016719185d18531a5cdd60c21b8152506107c4866060015190565b6080850151929190611390565b92915050565b60006107e2826101bd565b60808101519091506107f5906001611264565b6040805180820190915260038152626b657960e81b6020820152608082015161082191600090866113e2565b836001600160a01b03166363d163638461084261083d86515190565b61148a565b846040518463ffffffff1660e01b815260040161086193929190612892565b600060405180830381600087803b15801561087b57600080fd5b505af115801561088f573d6000803e3d6000fd5b5050505050505050565b6108a1611535565b60808101516108b1906001611264565b6040805180820190915260038152626b657960e81b602082015260808201516108dd91600090876113e2565b80516108ea906001611264565b6040805180820190915260078152661858d8dbdd5b9d60ca1b6020820152815161091791600090866112c9565b6020810151610927906001611264565b6109696000604051806040016040528060128152602001717365636f6e646172794f726465725479706560701b81525084600181111561040057610400612484565b846001600160a01b03166363d16363856109828661148a565b846040518463ffffffff1660e01b81526004016109a1939291906128d4565b600060405180830381600087803b1580156109bb57600080fd5b505af11580156109cf573d6000803e3d6000fd5b505050505050505050565b6109e2611535565b60808101516109f2906001611264565b6040805180820190915260038152626b657960e81b60208201526080820151610a1e91600090876113e2565b8051610a2b906001611264565b6040805180820190915260088152673332b2aa37b5b2b760c11b60208201528151610a5991600090866112c9565b6020810151610a69906001611264565b610ab960006040518060400160405280601c81526020017b1c1bdcda5d1a5bdb90dbdb1b185d195c985b105b5bdd5b9d155cd95960221b8152508484602001516113e2909392919063ffffffff16565b604051630937807960e21b81526001600160a01b038616906324de01e4906109a19087908590600401612917565b610aef611535565b6080810151610aff906001611264565b6040805180820190915260038152626b657960e81b60208201526080820151610b2b91600090876113e2565b6020810151610b3b906002611264565b610b8460006040518060400160405280601581526020017418dbdb1b185d195c985b11195b1d18505b5bdd5b9d605a1b8152508584602001516113e2909392919063ffffffff16565b610bd16001604051806040016040528060198152602001781b995e1d10dbdb1b185d195c985b11195b1d18505b5bdd5b9d603a1b8152508484602001516113e2909392919063ffffffff16565b604051630937807960e21b81526001600160a01b038616906324de01e4906109a19087908590600401612972565b610c07611535565b6080810151610c17906001611264565b6040805180820190915260038152626b657960e81b60208201526080820151610c4391600090876113e2565b6020810151610c53906002611264565b610c9360006040518060400160405280600c81526020016b1cda5e9951195b1d18555cd960a21b8152508584602001516113e2909392919063ffffffff16565b610cd760016040518060400160405280601081526020016f1b995e1d14da5e9951195b1d18555cd960821b8152508484602001516113e2909392919063ffffffff16565b604051630937807960e21b81526001600160a01b038616906324de01e4906109a190879085906004016129cd565b610d0d611535565b6080810151610d1d906001611264565b6040805180820190915260038152626b657960e81b60208201526080820151610d4991600090886113e2565b8051610d56906001611264565b6040805180820190915260078152661858d8dbdd5b9d60ca1b60208201528151610d8391600090876112c9565b60c0810151610d93906001611496565b6040805180820190915260068152653932b0b9b7b760d11b602082015260c0820151610dc291600090866114f8565b60a0810151610dd2906001611496565b60408051808201909152600b81526a726561736f6e427974657360a81b602082015260a0820151610e0691600090856114f8565b856001600160a01b03166363d1636386610e1f8761148a565b846040518463ffffffff1660e01b8152600401610e3e93929190612a16565b600060405180830381600087803b158015610e5857600080fd5b505af1158015610e6c573d6000803e3d6000fd5b50505050505050505050565b610e80611535565b6080810151610e90906001611264565b6040805180820190915260038152626b657960e81b60208201526080820151610ebc91600090886113e2565b8051610ec9906001611264565b6040805180820190915260078152661858d8dbdd5b9d60ca1b60208201528151610ef691600090876112c9565b60c0810151610f06906001611496565b6040805180820190915260068152653932b0b9b7b760d11b602082015260c0820151610f3591600090866114f8565b60a0810151610f45906001611496565b60408051808201909152600b81526a726561736f6e427974657360a81b602082015260a0820151610f7991600090856114f8565b856001600160a01b03166363d1636386610f928761148a565b846040518463ffffffff1660e01b8152600401610e3e93929190612a57565b610fb9611535565b6080810151610fc9906001611264565b6040805180820190915260038152626b657960e81b60208201526080820151610ff591600090866113e2565b8051611002906001611264565b6110306000604051806040016040528060078152602001661858d8dbdd5b9d60ca1b81525061020885515190565b6020810151611040906006611264565b61107960006040518060400160405280600c81526020016b1cda5e9951195b1d18555cd960a21b81525061040085602001516040015190565b6110b560016040518060400160405280600f81526020016e61636365707461626c65507269636560881b815250610400856020015160a0015190565b6110ee60026040518060400160405280600c81526020016b74726967676572507269636560a01b81525061040085602001516080015190565b61112b60036040518060400160405280600f81526020016e1b5a5b93dd5d1c1d5d105b5bdd5b9d608a1b8152506104008560200151610100015190565b61116660046040518060400160405280600d81526020016c75706461746564417454696d6560981b8152506104008560200151610120015190565b6111a160056040518060400160405280600d81526020016c76616c696446726f6d54696d6560981b8152506104008560200151610140015190565b60608101516111b1906001611264565b6111e860006040518060400160405280600a815260200169185d5d1bd0d85b98d95b60b21b8152506106fb85604001516060015190565b60808101516111f8906001611326565b61122960006040518060400160405280600881526020016719185d18531a5cdd60c21b8152506107c4856060015190565b836001600160a01b03166363d163638461124561083d86515190565b846040518463ffffffff1660e01b815260040161086193929190612a9b565b806001600160401b0381111561127c5761127c611626565b6040519080825280602002602001820160405280156112c257816020015b60408051808201909152606081526000602082015281526020019060019003908161129a5790505b5090915250565b81846000015184815181106112e0576112e0612add565b602002602001015160000181905250808460000151848151811061130657611306612add565b6020908102919091018101516001600160a01b0390921691015250505050565b806001600160401b0381111561133e5761133e611626565b60405190808252806020026020018201604052801561138357816020015b604080518082019091526060808252602082015281526020019060019003908161135c5790505b5082602001819052505050565b81846020015184815181106113a7576113a7612add565b60200260200101516000018190525080846020015184815181106113cd576113cd612add565b60200260200101516020018190525050505050565b81846000015184815181106113f9576113f9612add565b602002602001015160000181905250808460000151848151811061141f5761141f612add565b6020026020010151602001818152505050505050565b818460000151848151811061144c5761144c612add565b602002602001015160000181905250808460000151848151811061147257611472612add565b60209081029190910181015191151591015250505050565b6001600160a01b031690565b806001600160401b038111156114ae576114ae611626565b6040519080825280602002602001820160405280156112c257816020015b60408051808201909152606080825260208201528152602001906001900390816114cc57505090915250565b818460000151848151811061150f5761150f612add565b60200260200101516000018190525080846000015184815181106113cd576113cd612add565b604080516101208101909152606060e0820181815261010083019190915281908152602001611577604051806040016040528060608152602001606081525090565b8152602001611599604051806040016040528060608152602001606081525090565b81526020016115bb604051806040016040528060608152602001606081525090565b81526020016115dd604051806040016040528060608152602001606081525090565b81526020016115ff604051806040016040528060608152602001606081525090565b8152602001611621604051806040016040528060608152602001606081525090565b905290565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b038111828210171561165f5761165f611626565b60405290565b604051608081016001600160401b038111828210171561165f5761165f611626565b60405161010081016001600160401b038111828210171561165f5761165f611626565b604051601f8201601f191681016001600160401b03811182821017156116d2576116d2611626565b604052919050565b6001600160a01b03811681146116ef57600080fd5b50565b80356116fd816116da565b919050565b60006001600160401b0382111561171b5761171b611626565b5060051b60200190565b600082601f83011261173657600080fd5b813561174961174482611702565b6116aa565b8082825260208201915060208360051b86010192508583111561176b57600080fd5b602085015b83811015611791578035611783816116da565b835260209283019201611770565b5095945050505050565b8035600981106116fd57600080fd5b8035600381106116fd57600080fd5b600061018082840312156117cc57600080fd5b6117d461163c565b90506117df8261179b565b81526117ed602083016117aa565b602082015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c0808301359082015260e080830135908201526101008083013590820152610120808301359082015261014080830135908201526101609182013591810191909152919050565b803580151581146116fd57600080fd5b60006080828403121561188457600080fd5b61188c611665565b905061189782611862565b81526118a560208301611862565b60208201526118b660408301611862565b60408201526118c760608301611862565b606082015292915050565b600082601f8301126118e357600080fd5b81356118f161174482611702565b8082825260208201915060208360051b86010192508583111561191357600080fd5b602085015b83811015611791578035835260209283019201611918565b6000610240828403121561194357600080fd5b61194b611665565b905081356001600160401b0381111561196357600080fd5b8201610100818503121561197657600080fd5b61197e611687565b611987826116f2565b8152611995602083016116f2565b60208201526119a6604083016116f2565b60408201526119b7606083016116f2565b60608201526119c8608083016116f2565b60808201526119d960a083016116f2565b60a08201526119ea60c083016116f2565b60c082015260e08201356001600160401b03811115611a0857600080fd5b611a1486828501611725565b60e083015250825250611a2a83602084016117b9565b6020820152611a3d836101a08401611872565b60408201526102208201356001600160401b03811115611a5c57600080fd5b611a68848285016118d2565b60608301525092915050565b600060208284031215611a8657600080fd5b81356001600160401b03811115611a9c57600080fd5b611aa884828501611930565b949350505050565b6000815180845260005b81811015611ad657602081850181015186830182015201611aba565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208501945060208160051b8301016020850160005b83811015611b9d57601f198584030188528151805160408552611b3a6040860182611ab0565b6020928301518682038785015280518083529084019360009350909101905b80831015611b845783516001600160a01b031682526020938401936001939093019290910190611b59565b5060209a8b019a90955093909301925050600101611b14565b50909695505050505050565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015611c2357605f198886030183528351805160408752611bfb6040880182611ab0565b6020928301516001600160a01b03169783019790975250938401939290920191600101611bd5565b5050505060208301518482036020860152611c3e8282611af6565b95945050505050565b600082825180855260208501945060208160051b8301016020850160005b83811015611b9d57601f198584030188528151805160408552611c8b6040860182611ab0565b6020928301518682038785015280518083529084019360009350909101905b80831015611ccd5783518252602082019150602084019350600183019250611caa565b5060209a8b019a90955093909301925050600101611c65565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015611d5757605f198886030183528351805160408752611d386040880182611ab0565b6020928301519783019790975250938401939290920191600101611d12565b5050505060208301518482036020860152611c3e8282611c47565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015611d5757605f198886030183528351805160408752611dc46040880182611ab0565b6020928301519783019790975250938401939290920191600101611d9e565b600082825180855260208501945060208160051b8301016020850160005b83811015611b9d57601f198584030188528151805160408552611e276040860182611ab0565b6020928301518682038785015280518083529084019360009350909101905b80831015611e6b57835115158252602082019150602084019350600183019250611e46565b5060209a8b019a90955093909301925050600101611e01565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015611ef757605f198886030183528351805160408752611ed66040880182611ab0565b60209283015115159783019790975250938401939290920191600101611eb0565b5050505060208301518482036020860152611c3e8282611de3565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015611d5757605f198886030183528351805160408752611f646040880182611ab0565b6020928301519783019790975250938401939290920191600101611f3e565b600082825180855260208501945060208160051b8301016020850160005b83811015611b9d57601f198584030188528151805160408552611fc76040860182611ab0565b6020928301518682038785015280518083529084019391925081830191600582901b84010160005b8281101561202057601f1985830301845261200b828751611ab0565b60209687019694909401939150600101611fef565b508097505050505050602082019150602088019750600181019050611fa1565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156120c457605f1988860301835283518051604087526120926040880182611ab0565b90506020820151915086810360208801526120ad8183611ab0565b96505050602093840193929092019160010161206c565b5050505060208301518482036020860152611c3e8282611f83565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156120c457605f1988860301835283518051604087526121316040880182611ab0565b905060208201519150868103602088015261214c8183611ab0565b96505050602093840193929092019160010161210b565b602081526000825160e06020840152612180610100840182611ba9565b90506020840151601f1984830301604085015261219d8282611ce6565b9150506040840151601f198483030160608501526121bb8282611d72565b9150506060840151601f198483030160808501526121d98282611e84565b9150506080840151601f198483030160a08501526121f78282611f12565b91505060a0840151601f198483030160c08501526122158282612040565b91505060c0840151601f198483030160e0850152611c3e82826120df565b60008060006060848603121561224857600080fd5b8335612253816116da565b92506020840135915060408401356001600160401b0381111561227557600080fd5b61228186828701611930565b9150509250925092565b600080600080608085870312156122a157600080fd5b84356122ac816116da565b93506020850135925060408501356122c3816116da565b91506060850135600281106122d757600080fd5b939692955090935050565b600080600080608085870312156122f857600080fd5b8435612303816116da565b935060208501359250604085013561231a816116da565b9396929550929360600135925050565b6000806000806080858703121561234057600080fd5b843561234b816116da565b966020860135965060408601359560600135945092505050565b6000806001600160401b0384111561237f5761237f611626565b50601f8301601f1916602001612394816116aa565b9150508281528383830111156123a957600080fd5b828260208301376000602084830101529392505050565b600080600080600060a086880312156123d857600080fd5b85356123e3816116da565b94506020860135935060408601356123fa816116da565b925060608601356001600160401b0381111561241557600080fd5b8601601f8101881361242657600080fd5b61243588823560208401612365565b92505060808601356001600160401b0381111561245157600080fd5b86016000601f8201891361246457600080fd5b61247389833560208501612365565b905080925050509295509295909350565b634e487b7160e01b600052602160045260246000fd5b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015611c2357605f1988860301835283518051604087526124ec6040880182611ab0565b6020928301516001600160a01b031697830197909752509384019392909201916001016124c6565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015611d5757605f1988860301835283518051604087526125666040880182611ab0565b6020928301519783019790975250938401939290920191600101612540565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015611d5757605f1988860301835283518051604087526125d76040880182611ab0565b60209283015197830197909752509384019392909201916001016125b1565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015611ef757605f1988860301835283518051604087526126486040880182611ab0565b60209283015115159783019790975250938401939290920191600101612622565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b81811015611d5757605f1988860301835283518051604087526126bb6040880182611ab0565b6020928301519783019790975250938401939290920191600101612695565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156120c457605f19888603018352835180516040875261272c6040880182611ab0565b90506020820151915086810360208801526127478183611ab0565b965050506020938401939290920191600101612706565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b818110156120c457605f1988860301835283518051604087526127b06040880182611ab0565b90506020820151915086810360208801526127cb8183611ab0565b96505050602093840193929092019160010161278a565b6000815160e084526127f760e085018261249a565b9050602083015184820360208601526128108282612514565b9150506040830151848203604086015261282a8282612585565b9150506060830151848203606086015261284482826125f6565b9150506080830151848203608086015261285e8282612669565b91505060a083015184820360a086015261287882826126da565b91505060c083015184820360c0860152611c3e828261275e565b60808152600c60808201526b13dc99195c90dc99585d195960a21b60a082015283602082015282604082015260c060608201526000611c3e60c08301846127e2565b60808152600d60808201526c13dc99195c915e1958dd5d1959609a1b60a082015283602082015282604082015260c060608201526000611c3e60c08301846127e2565b60608152602560608201527f506f736974696f6e436f6c6c61746572616c55736564466f72457865637574696080820152646f6e46656560d81b60a082015282602082015260c060408201526000611aa860c08301846127e2565b60608152602560608201527f4f72646572436f6c6c61746572616c44656c7461416d6f756e744175746f557060808201526419185d195960da1b60a082015282602082015260c060408201526000611aa860c08301846127e2565b60608152601960608201527813dc99195c94da5e9951195b1d18505d5d1bd55c19185d1959603a1b608082015282602082015260a060408201526000611aa860a08301846127e2565b60808152600b60808201526a27b93232b9233937bd32b760a91b60a082015283602082015282604082015260c060608201526000611c3e60c08301846127e2565b60808152600e60808201526d13dc99195c90d85b98d95b1b195960921b60a082015283602082015282604082015260c060608201526000611c3e60c08301846127e2565b60808152600c60808201526b13dc99195c955c19185d195960a21b60a082015283602082015282604082015260c060608201526000611c3e60c08301846127e2565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220efdbe12a01878f2947a845735e0355a5552df82b33417f7c453a5541bcf0ca5964736f6c634300081d0033";

type OrderEventUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrderEventUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrderEventUtils__factory extends ContractFactory {
  constructor(...args: OrderEventUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrderEventUtils> {
    return super.deploy(overrides || {}) as Promise<OrderEventUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrderEventUtils {
    return super.attach(address) as OrderEventUtils;
  }
  override connect(signer: Signer): OrderEventUtils__factory {
    return super.connect(signer) as OrderEventUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderEventUtilsInterface {
    return new utils.Interface(_abi) as OrderEventUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderEventUtils {
    return new Contract(address, _abi, signerOrProvider) as OrderEventUtils;
  }
}
