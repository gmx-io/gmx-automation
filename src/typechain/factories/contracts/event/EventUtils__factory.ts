// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EventUtils,
  EventUtilsInterface,
} from "../../../contracts/event/EventUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "EventItemNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "a",
        type: "string",
      },
      {
        internalType: "string",
        name: "b",
        type: "string",
      },
    ],
    name: "compareStrings",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct EventUtils.StringKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "value",
                type: "string[]",
              },
            ],
            internalType: "struct EventUtils.StringArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.StringItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "value",
                type: "bytes",
              },
            ],
            internalType: "struct EventUtils.BytesKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes[]",
                name: "value",
                type: "bytes[]",
              },
            ],
            internalType: "struct EventUtils.BytesArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BytesItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
            ],
            internalType: "struct EventUtils.AddressKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "value",
                type: "address[]",
              },
            ],
            internalType: "struct EventUtils.AddressArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.AddressItems",
        name: "addresses",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "value",
                type: "bytes32",
              },
            ],
            internalType: "struct EventUtils.Bytes32KeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "value",
                type: "bytes32[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.Bytes32Items",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool",
                name: "value",
                type: "bool",
              },
            ],
            internalType: "struct EventUtils.BoolKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool[]",
                name: "value",
                type: "bool[]",
              },
            ],
            internalType: "struct EventUtils.BoolArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BoolItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct EventUtils.UintKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct EventUtils.UintArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.UintItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
            ],
            internalType: "struct EventUtils.IntKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256[]",
                name: "value",
                type: "int256[]",
              },
            ],
            internalType: "struct EventUtils.IntArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.IntItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct EventUtils.StringKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "value",
                type: "string[]",
              },
            ],
            internalType: "struct EventUtils.StringArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.StringItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool",
                name: "value",
                type: "bool",
              },
            ],
            internalType: "struct EventUtils.BoolKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool[]",
                name: "value",
                type: "bool[]",
              },
            ],
            internalType: "struct EventUtils.BoolArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BoolItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
            ],
            internalType: "struct EventUtils.IntKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256[]",
                name: "value",
                type: "int256[]",
              },
            ],
            internalType: "struct EventUtils.IntArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.IntItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "value",
                type: "bytes",
              },
            ],
            internalType: "struct EventUtils.BytesKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes[]",
                name: "value",
                type: "bytes[]",
              },
            ],
            internalType: "struct EventUtils.BytesArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BytesItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
            ],
            internalType: "struct EventUtils.AddressKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "value",
                type: "address[]",
              },
            ],
            internalType: "struct EventUtils.AddressArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.AddressItems",
        name: "addresses",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "value",
                type: "bytes32",
              },
            ],
            internalType: "struct EventUtils.Bytes32KeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "value",
                type: "bytes32[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.Bytes32Items",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct EventUtils.UintKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct EventUtils.UintArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.UintItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "value",
                type: "bytes32",
              },
            ],
            internalType: "struct EventUtils.Bytes32KeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "value",
                type: "bytes32[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.Bytes32Items",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
            ],
            internalType: "struct EventUtils.AddressKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "value",
                type: "address[]",
              },
            ],
            internalType: "struct EventUtils.AddressArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.AddressItems",
        name: "addresses",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
            ],
            internalType: "struct EventUtils.IntKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256[]",
                name: "value",
                type: "int256[]",
              },
            ],
            internalType: "struct EventUtils.IntArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.IntItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct EventUtils.StringKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "value",
                type: "string[]",
              },
            ],
            internalType: "struct EventUtils.StringArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.StringItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "value",
                type: "bytes",
              },
            ],
            internalType: "struct EventUtils.BytesKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes[]",
                name: "value",
                type: "bytes[]",
              },
            ],
            internalType: "struct EventUtils.BytesArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BytesItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool",
                name: "value",
                type: "bool",
              },
            ],
            internalType: "struct EventUtils.BoolKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool[]",
                name: "value",
                type: "bool[]",
              },
            ],
            internalType: "struct EventUtils.BoolArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BoolItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct EventUtils.UintKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct EventUtils.UintArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.UintItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool",
                name: "value",
                type: "bool",
              },
            ],
            internalType: "struct EventUtils.BoolKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool[]",
                name: "value",
                type: "bool[]",
              },
            ],
            internalType: "struct EventUtils.BoolArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BoolItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "value",
                type: "bytes32",
              },
            ],
            internalType: "struct EventUtils.Bytes32KeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "value",
                type: "bytes32[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.Bytes32Items",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
            ],
            internalType: "struct EventUtils.AddressKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "value",
                type: "address[]",
              },
            ],
            internalType: "struct EventUtils.AddressArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.AddressItems",
        name: "addresses",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
            ],
            internalType: "struct EventUtils.IntKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256[]",
                name: "value",
                type: "int256[]",
              },
            ],
            internalType: "struct EventUtils.IntArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.IntItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct EventUtils.UintKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct EventUtils.UintArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.UintItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct EventUtils.StringKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "value",
                type: "string[]",
              },
            ],
            internalType: "struct EventUtils.StringArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.StringItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "value",
                type: "bytes",
              },
            ],
            internalType: "struct EventUtils.BytesKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes[]",
                name: "value",
                type: "bytes[]",
              },
            ],
            internalType: "struct EventUtils.BytesArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BytesItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type EventUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EventUtils__factory extends ContractFactory {
  constructor(...args: EventUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EventUtils> {
    return super.deploy(overrides || {}) as Promise<EventUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EventUtils {
    return super.attach(address) as EventUtils;
  }
  override connect(signer: Signer): EventUtils__factory {
    return super.connect(signer) as EventUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventUtilsInterface {
    return new utils.Interface(_abi) as EventUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EventUtils {
    return new Contract(address, _abi, signerOrProvider) as EventUtils;
  }
}
