/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EventUtils,
  EventUtilsInterface,
} from "../../../contracts/event/EventUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "EventItemNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "a",
        type: "string",
      },
      {
        internalType: "string",
        name: "b",
        type: "string",
      },
    ],
    name: "compareStrings",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct EventUtils.StringKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "value",
                type: "string[]",
              },
            ],
            internalType: "struct EventUtils.StringArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.StringItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "value",
                type: "bytes",
              },
            ],
            internalType: "struct EventUtils.BytesKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes[]",
                name: "value",
                type: "bytes[]",
              },
            ],
            internalType: "struct EventUtils.BytesArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BytesItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
            ],
            internalType: "struct EventUtils.AddressKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "value",
                type: "address[]",
              },
            ],
            internalType: "struct EventUtils.AddressArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.AddressItems",
        name: "addresses",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "value",
                type: "bytes32",
              },
            ],
            internalType: "struct EventUtils.Bytes32KeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "value",
                type: "bytes32[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.Bytes32Items",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool",
                name: "value",
                type: "bool",
              },
            ],
            internalType: "struct EventUtils.BoolKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool[]",
                name: "value",
                type: "bool[]",
              },
            ],
            internalType: "struct EventUtils.BoolArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BoolItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct EventUtils.UintKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct EventUtils.UintArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.UintItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
            ],
            internalType: "struct EventUtils.IntKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256[]",
                name: "value",
                type: "int256[]",
              },
            ],
            internalType: "struct EventUtils.IntArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.IntItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct EventUtils.StringKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "value",
                type: "string[]",
              },
            ],
            internalType: "struct EventUtils.StringArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.StringItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool",
                name: "value",
                type: "bool",
              },
            ],
            internalType: "struct EventUtils.BoolKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool[]",
                name: "value",
                type: "bool[]",
              },
            ],
            internalType: "struct EventUtils.BoolArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BoolItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
            ],
            internalType: "struct EventUtils.IntKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256[]",
                name: "value",
                type: "int256[]",
              },
            ],
            internalType: "struct EventUtils.IntArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.IntItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "value",
                type: "bytes",
              },
            ],
            internalType: "struct EventUtils.BytesKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes[]",
                name: "value",
                type: "bytes[]",
              },
            ],
            internalType: "struct EventUtils.BytesArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BytesItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
            ],
            internalType: "struct EventUtils.AddressKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "value",
                type: "address[]",
              },
            ],
            internalType: "struct EventUtils.AddressArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.AddressItems",
        name: "addresses",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "value",
                type: "bytes32",
              },
            ],
            internalType: "struct EventUtils.Bytes32KeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "value",
                type: "bytes32[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.Bytes32Items",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct EventUtils.UintKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct EventUtils.UintArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.UintItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "value",
                type: "bytes32",
              },
            ],
            internalType: "struct EventUtils.Bytes32KeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "value",
                type: "bytes32[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.Bytes32Items",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
            ],
            internalType: "struct EventUtils.AddressKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "value",
                type: "address[]",
              },
            ],
            internalType: "struct EventUtils.AddressArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.AddressItems",
        name: "addresses",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
            ],
            internalType: "struct EventUtils.IntKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256[]",
                name: "value",
                type: "int256[]",
              },
            ],
            internalType: "struct EventUtils.IntArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.IntItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct EventUtils.StringKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "value",
                type: "string[]",
              },
            ],
            internalType: "struct EventUtils.StringArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.StringItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "value",
                type: "bytes",
              },
            ],
            internalType: "struct EventUtils.BytesKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes[]",
                name: "value",
                type: "bytes[]",
              },
            ],
            internalType: "struct EventUtils.BytesArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BytesItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool",
                name: "value",
                type: "bool",
              },
            ],
            internalType: "struct EventUtils.BoolKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool[]",
                name: "value",
                type: "bool[]",
              },
            ],
            internalType: "struct EventUtils.BoolArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BoolItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct EventUtils.UintKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct EventUtils.UintArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.UintItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getArrayWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool",
                name: "value",
                type: "bool",
              },
            ],
            internalType: "struct EventUtils.BoolKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bool[]",
                name: "value",
                type: "bool[]",
              },
            ],
            internalType: "struct EventUtils.BoolArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BoolItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "value",
                type: "bytes32",
              },
            ],
            internalType: "struct EventUtils.Bytes32KeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes32[]",
                name: "value",
                type: "bytes32[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.Bytes32Items",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address",
                name: "value",
                type: "address",
              },
            ],
            internalType: "struct EventUtils.AddressKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "address[]",
                name: "value",
                type: "address[]",
              },
            ],
            internalType: "struct EventUtils.AddressArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.AddressItems",
        name: "addresses",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256",
                name: "value",
                type: "int256",
              },
            ],
            internalType: "struct EventUtils.IntKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "int256[]",
                name: "value",
                type: "int256[]",
              },
            ],
            internalType: "struct EventUtils.IntArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.IntItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct EventUtils.UintKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "uint256[]",
                name: "value",
                type: "uint256[]",
              },
            ],
            internalType: "struct EventUtils.UintArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.UintItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string",
                name: "value",
                type: "string",
              },
            ],
            internalType: "struct EventUtils.StringKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "value",
                type: "string[]",
              },
            ],
            internalType: "struct EventUtils.StringArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.StringItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes",
                name: "value",
                type: "bytes",
              },
            ],
            internalType: "struct EventUtils.BytesKeyValue[]",
            name: "items",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "key",
                type: "string",
              },
              {
                internalType: "bytes[]",
                name: "value",
                type: "bytes[]",
              },
            ],
            internalType: "struct EventUtils.BytesArrayKeyValue[]",
            name: "arrayItems",
            type: "tuple[]",
          },
        ],
        internalType: "struct EventUtils.BytesItems",
        name: "items",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getWithoutRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x611e9861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101695760003560e01c806301293e961461016e578063025c0a771461019d57806314ddbfd3146101c757806315dcd6f1146101f957806318e972b8146102195780631cd2b57c14610239578063389bfe641461024c578063454e873f1461026d5780634e0347f61461028e5780635b5a3820146102a15780635eb4a756146102cc5780635f9bc5d8146102ed57806366c132d41461030057806367a18bad146103205780636baa358f146103435780636fcd7260146103565780637850f585146103775780637f0bd49d1461039757806381684b95146103aa578063991e3d8d146103bd5780639a1e3784146103de578063a35cf978146103f1578063ac01db7d14610404578063bb7f297e14610425578063bed34bba14610438578063d9f2f3021461044b578063f3c472d51461046b578063f4bf89701461047e578063f6d7a6c514610491575b600080fd5b61018161017c366004610dbf565b6104a4565b6040805192151583529015156020830152015b60405180910390f35b6101b06101ab366004611064565b610534565b604080519215158352602083019190915201610194565b6101da6101d53660046112e9565b610599565b6040805192151583526001600160a01b03909116602083015201610194565b61020c610207366004611579565b6105f1565b6040516101949190611770565b61022c610227366004611579565b610635565b604051610194919061178a565b61022c61024736600461179d565b610644565b61025f61025a366004611064565b610653565b604051610194929190611906565b61028061027b3660046112e9565b6106bd565b60405161019492919061195a565b61025f61029c366004611975565b610719565b6102b46102af3660046112e9565b610775565b6040516001600160a01b039091168152602001610194565b6102df6102da366004611064565b610784565b604051908152602001610194565b6101b06102fb366004611975565b610793565b61031361030e366004610dbf565b6107eb565b6040516101949190611ab5565b61033361032e366004610dbf565b6107fa565b6040519015158152602001610194565b6101b0610351366004611bfd565b610809565b610369610364366004611579565b610861565b604051610194929190611d2f565b61038a610385366004611975565b6108bd565b6040516101949190611d4a565b6102df6103a5366004611bfd565b6108cc565b6103696103b836600461179d565b6108db565b6103d06103cb366004610dbf565b610937565b604051610194929190611d5d565b61020c6103ec36600461179d565b610993565b6102df6103ff366004611975565b6109a2565b610417610412366004611579565b6109b1565b604051610194929190611d78565b61041761043336600461179d565b610a25565b610333610446366004611d93565b610a7e565b61045e6104593660046112e9565b610ad7565b6040516101949190611df6565b61038a610479366004611064565b610ae6565b61038a61048c366004611bfd565b610af5565b61025f61049f366004611bfd565b610b00565b60008060005b845151811015610524576104df856000015182815181106104cd576104cd611e09565b60200260200101516000015185610a7e565b15610512576001856000015182815181106104fc576104fc611e09565b602002602001015160200151925092505061052d565b8061051c81611e1f565b9150506104aa565b50600080915091505b9250929050565b60008060005b84515181101561058c5761055d856000015182815181106104cd576104cd611e09565b1561057a576001856000015182815181106104fc576104fc611e09565b8061058481611e1f565b91505061053a565b5060009485945092505050565b60008060005b845151811015610524576105c2856000015182815181106104cd576104cd611e09565b156105df576001856000015182815181106104fc576104fc611e09565b806105e981611e1f565b91505061059f565b60606000806106008585610861565b915091508161062d578360405163eeadc89d60e01b8152600401610624919061178a565b60405180910390fd5b949350505050565b606060008061060085856109b1565b60606000806106008585610a25565b6000606060005b8460200151518110156106af57610680856020015182815181106104cd576104cd611e09565b1561069d576001856020015182815181106104fc576104fc611e09565b806106a781611e1f565b91505061065a565b506000946060945092505050565b6000606060005b8460200151518110156106af576106ea856020015182815181106104cd576104cd611e09565b15610707576001856020015182815181106104fc576104fc611e09565b8061071181611e1f565b9150506106c4565b6000606060005b8460200151518110156106af57610746856020015182815181106104cd576104cd611e09565b15610763576001856020015182815181106104fc576104fc611e09565b8061076d81611e1f565b915050610720565b60008060006106008585610599565b60008060006106008585610534565b60008060005b845151811015610524576107bc856000015182815181106104cd576104cd611e09565b156107d9576001856000015182815181106104fc576104fc611e09565b806107e381611e1f565b915050610799565b60606000806106008585610937565b600080600061060085856104a4565b60008060005b84515181101561052457610832856000015182815181106104cd576104cd611e09565b1561084f576001856000015182815181106104fc576104fc611e09565b8061085981611e1f565b91505061080f565b6000606060005b8460200151518110156106af5761088e856020015182815181106104cd576104cd611e09565b156108ab576001856020015182815181106104fc576104fc611e09565b806108b581611e1f565b915050610868565b60606000806106008585610719565b60008060006106008585610809565b6000606060005b8460200151518110156106af57610908856020015182815181106104cd576104cd611e09565b15610925576001856020015182815181106104fc576104fc611e09565b8061092f81611e1f565b9150506108e2565b6000606060005b8460200151518110156106af57610964856020015182815181106104cd576104cd611e09565b15610981576001856020015182815181106104fc576104fc611e09565b8061098b81611e1f565b91505061093e565b606060008061060085856108db565b60008060006106008585610793565b6000606060005b845151811015610a0a576109db856000015182815181106104cd576104cd611e09565b156109f8576001856000015182815181106104fc576104fc611e09565b80610a0281611e1f565b9150506109b8565b50506040805160208101909152600080825291509250929050565b6000606060005b845151811015610a0a57610a4f856000015182815181106104cd576104cd611e09565b15610a6c576001856000015182815181106104fc576104fc611e09565b80610a7681611e1f565b915050610a2c565b600081604051602001610a919190611e46565b6040516020818303038152906040528051906020012083604051602001610ab89190611e46565b6040516020818303038152906040528051906020012014905092915050565b606060008061060085856106bd565b60606000806106008585610653565b606060008061060085855b6000606060005b8460200151518110156106af57610b2d856020015182815181106104cd576104cd611e09565b15610b4a576001856020015182815181106104fc576104fc611e09565b80610b5481611e1f565b915050610b07565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715610b9457610b94610b5c565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610bc257610bc2610b5c565b604052919050565b60006001600160401b03821115610be357610be3610b5c565b5060051b60200190565b600082601f830112610bfe57600080fd5b81356001600160401b03811115610c1757610c17610b5c565b610c2a601f8201601f1916602001610b9a565b818152846020838601011115610c3f57600080fd5b816020850160208301376000918101602001919091529392505050565b80358015158114610c6c57600080fd5b919050565b600082601f830112610c8257600080fd5b81356020610c97610c9283610bca565b610b9a565b828152600592831b8501820192828201919087851115610cb657600080fd5b8387015b85811015610db25780356001600160401b0380821115610cda5760008081fd5b908901906040828c03601f1901811315610cf45760008081fd5b610cfc610b72565b8884013583811115610d0e5760008081fd5b610d1c8e8b83880101610bed565b8252508184013583811115610d315760008081fd5b8085019450508c603f850112610d4957600092508283fd5b888401359250610d5b610c9284610bca565b83815292861b8401820192898101908e851115610d785760008081fd5b948301945b84861015610d9d57610d8e86610c5c565b8252948a0194908a0190610d7d565b828b0152508752505050928401928401610cba565b5090979650505050505050565b60008060408385031215610dd257600080fd5b6001600160401b038335811015610de857600080fd5b8335840160408187031215610dfc57600080fd5b610e04610b72565b8282351115610e1257600080fd5b8135820187601f820112610e2557600080fd5b610e32610c928235610bca565b81358082526020808301929160051b8401018a811115610e5157600080fd5b602084015b81811015610ed7578781351115610e6c57600080fd5b803585016040818e03601f19011215610e8457600080fd5b610e8c610b72565b60208201358a811115610e9e57600080fd5b610ead8f602083860101610bed565b825250610ebc60408301610c5c565b60208201528086525050602084019350602081019050610e56565b505083525050602082013583811115610eef57600080fd5b610efb88828501610c71565b6020830152508094505050602084013581811115610f1857600080fd5b610f2486828701610bed565b925050509250929050565b600082601f830112610f4057600080fd5b81356020610f50610c9283610bca565b828152600592831b8501820192828201919087851115610f6f57600080fd5b8387015b85811015610db25780356001600160401b0380821115610f935760008081fd5b908901906040828c03601f1901811315610fad5760008081fd5b610fb5610b72565b8884013583811115610fc75760008081fd5b610fd58e8b83880101610bed565b8252508184013583811115610fea5760008081fd5b8085019450508c603f85011261100257600092508283fd5b888401359250611014610c9284610bca565b83815292861b8401820192898101908e8511156110315760008081fd5b948301945b8486101561104f5785358252948a0194908a0190611036565b828b0152508752505050928401928401610f73565b6000806040838503121561107757600080fd5b6001600160401b03833581101561108d57600080fd5b83358401604081870312156110a157600080fd5b6110a9610b72565b82823511156110b757600080fd5b8135820187601f8201126110ca57600080fd5b6110d7610c928235610bca565b81358082526020808301929160051b8401018a8111156110f657600080fd5b602084015b8181101561117257878135111561111157600080fd5b803585016040818e03601f1901121561112957600080fd5b611131610b72565b60208201358a81111561114357600080fd5b6111528f602083860101610bed565b8252506040919091013560208083019190915290855293840193016110fb565b50508352505060208201358381111561118a57600080fd5b610efb88828501610f2f565b80356001600160a01b0381168114610c6c57600080fd5b600082601f8301126111be57600080fd5b813560206111ce610c9283610bca565b828152600592831b85018201928282019190878511156111ed57600080fd5b8387015b85811015610db25780356001600160401b03808211156112115760008081fd5b908901906040828c03601f190181131561122b5760008081fd5b611233610b72565b88840135838111156112455760008081fd5b6112538e8b83880101610bed565b82525081840135838111156112685760008081fd5b8085019450508c603f85011261128057600092508283fd5b888401359250611292610c9284610bca565b83815292861b8401820192898101908e8511156112af5760008081fd5b948301945b848610156112d4576112c586611196565b8252948a0194908a01906112b4565b828b01525087525050509284019284016111f1565b600080604083850312156112fc57600080fd5b6001600160401b03833581101561131257600080fd5b833584016040818703121561132657600080fd5b61132e610b72565b828235111561133c57600080fd5b8135820187601f82011261134f57600080fd5b61135c610c928235610bca565b81358082526020808301929160051b8401018a81111561137b57600080fd5b602084015b8181101561140157878135111561139657600080fd5b803585016040818e03601f190112156113ae57600080fd5b6113b6610b72565b60208201358a8111156113c857600080fd5b6113d78f602083860101610bed565b8252506113e660408301611196565b60208201528086525050602084019350602081019050611380565b50508352505060208201358381111561141957600080fd5b610efb888285016111ad565b600082601f83011261143657600080fd5b81356020611446610c9283610bca565b82815260059290921b8401810191818101908684111561146557600080fd5b8286015b8481101561156e576001600160401b03813581101561148757600080fd5b813588016040818b03601f1901121561149f57600080fd5b6114a7610b72565b86820135838111156114b857600080fd5b6114c68c8983860101610bed565b8252506040820135838111156114db57600080fd5b8083019250508a603f8301126114f057600080fd5b86820135611500610c9282610bca565b81815260059190911b830160400190888101908d83111561152057600080fd5b604085015b8381101561155857868135111561153b57600080fd5b61154b8f60408335890101610bed565b8352918a01918a01611525565b50838a0152505085525050918301918301611469565b509695505050505050565b6000806040838503121561158c57600080fd5b6001600160401b0383358110156115a257600080fd5b83358401604081870312156115b657600080fd5b6115be610b72565b82823511156115cc57600080fd5b8135820187601f8201126115df57600080fd5b6115ec610c928235610bca565b81358082526020808301929160051b8401018a81111561160b57600080fd5b602084015b818110156116a757878135111561162657600080fd5b803585016040818e03601f1901121561163e57600080fd5b611646610b72565b60208201358a81111561165857600080fd5b6116678f602083860101610bed565b82525060408201358a81111561167c57600080fd5b61168b8f602083860101610bed565b6020830152508086525050602084019350602081019050611610565b5050835250506020820135838111156116bf57600080fd5b610efb88828501611425565b60005b838110156116e65781810151838201526020016116ce565b50506000910152565b600081518084526117078160208601602086016116cb565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b858110156117635782840389526117518483516116ef565b98850198935090840190600101611739565b5091979650505050505050565b602081526000611783602083018461171b565b9392505050565b60208152600061178360208301846116ef565b600080604083850312156117b057600080fd5b6001600160401b0383358110156117c657600080fd5b83358401604081870312156117da57600080fd5b6117e2610b72565b82823511156117f057600080fd5b8135820187601f82011261180357600080fd5b611810610c928235610bca565b81358082526020808301929160051b8401018a81111561182f57600080fd5b602084015b818110156116a757878135111561184a57600080fd5b803585016040818e03601f1901121561186257600080fd5b61186a610b72565b60208201358a81111561187c57600080fd5b61188b8f602083860101610bed565b82525060408201358a8111156118a057600080fd5b6118af8f602083860101610bed565b6020830152508086525050602084019350602081019050611834565b600081518084526020808501945080840160005b838110156118fb578151875295820195908201906001016118df565b509495945050505050565b821515815260406020820152600061062d60408301846118cb565b600081518084526020808501945080840160005b838110156118fb5781516001600160a01b031687529582019590820190600101611935565b821515815260406020820152600061062d6040830184611921565b6000806040838503121561198857600080fd5b6001600160401b03833581101561199e57600080fd5b83358401604081870312156119b257600080fd5b6119ba610b72565b82823511156119c857600080fd5b8135820187601f8201126119db57600080fd5b6119e8610c928235610bca565b81358082526020808301929160051b8401018a811115611a0757600080fd5b602084015b81811015611172578781351115611a2257600080fd5b803585016040818e03601f19011215611a3a57600080fd5b611a42610b72565b60208201358a811115611a5457600080fd5b611a638f602083860101610bed565b825250604091909101356020808301919091529085529384019301611a0c565b600081518084526020808501945080840160005b838110156118fb578151151587529582019590820190600101611a97565b6020815260006117836020830184611a83565b600082601f830112611ad957600080fd5b81356020611ae9610c9283610bca565b828152600592831b8501820192828201919087851115611b0857600080fd5b8387015b85811015610db25780356001600160401b0380821115611b2c5760008081fd5b908901906040828c03601f1901811315611b465760008081fd5b611b4e610b72565b8884013583811115611b605760008081fd5b611b6e8e8b83880101610bed565b8252508184013583811115611b835760008081fd5b8085019450508c603f850112611b9b57600092508283fd5b888401359250611bad610c9284610bca565b83815292861b8401820192898101908e851115611bca5760008081fd5b948301945b84861015611be85785358252948a0194908a0190611bcf565b828b0152508752505050928401928401611b0c565b60008060408385031215611c1057600080fd5b6001600160401b038335811015611c2657600080fd5b8335840160408187031215611c3a57600080fd5b611c42610b72565b8282351115611c5057600080fd5b8135820187601f820112611c6357600080fd5b611c70610c928235610bca565b81358082526020808301929160051b8401018a811115611c8f57600080fd5b602084015b81811015611d0b578781351115611caa57600080fd5b803585016040818e03601f19011215611cc257600080fd5b611cca610b72565b60208201358a811115611cdc57600080fd5b611ceb8f602083860101610bed565b825250604091909101356020808301919091529085529384019301611c94565b505083525050602082013583811115611d2357600080fd5b610efb88828501611ac8565b821515815260406020820152600061062d604083018461171b565b60208152600061178360208301846118cb565b821515815260406020820152600061062d6040830184611a83565b821515815260406020820152600061062d60408301846116ef565b60008060408385031215611da657600080fd5b82356001600160401b0380821115611dbd57600080fd5b611dc986838701610bed565b93506020850135915080821115611ddf57600080fd5b50611dec85828601610bed565b9150509250929050565b6020815260006117836020830184611921565b634e487b7160e01b600052603260045260246000fd5b600060018201611e3f57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008251611e588184602087016116cb565b919091019291505056fea26469706673582212205b0ffca20499d265b2b2233c1e705eb14e7fd59b499ad08e5b113541567812a764736f6c63430008140033";

type EventUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EventUtils__factory extends ContractFactory {
  constructor(...args: EventUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EventUtils> {
    return super.deploy(overrides || {}) as Promise<EventUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EventUtils {
    return super.attach(address) as EventUtils;
  }
  override connect(signer: Signer): EventUtils__factory {
    return super.connect(signer) as EventUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventUtilsInterface {
    return new utils.Interface(_abi) as EventUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EventUtils {
    return new Contract(address, _abi, signerOrProvider) as EventUtils;
  }
}
