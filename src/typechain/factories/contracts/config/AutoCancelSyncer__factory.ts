// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AutoCancelSyncer,
  AutoCancelSyncerInterface,
} from "../../../contracts/config/AutoCancelSyncer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "syncAutoCancelOrderListForAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
    ],
    name: "syncAutoCancelOrderListForPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051611dd2380380611dd283398101604081905261002f91610069565b60016000556001600160a01b0392831660805290821660a0521660c0526100b6565b6001600160a01b038116811461006657600080fd5b50565b60008060006060848603121561007e57600080fd5b835161008981610051565b602085015190935061009a81610051565b60408501519092506100ab81610051565b809150509250925092565b60805160a05160c051611cc661010c6000396000818160ec015261071a01526000818160b0015281816101a30152818161050701528181610576015261063b015260008181606c01526103700152611cc66000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634a4a7b0414610067578063660d0d67146100ab57806376422d57146100d25780639ff78c30146100e7578063ac9650d81461010e578063e5e1bfb01461012e575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6100e56100e0366004610d3f565b610141565b005b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b61012161011c366004610d74565b610214565b6040516100a29190610e39565b6100e561013c366004610e9e565b610327565b61019460405160200161015390610eca565b604051602081830303815290604052805190602001206040518060400160405280600d81526020016c21a7a72324a3afa5a2a2a822a960991b815250610359565b61019c610412565b60006101ca7f000000000000000000000000000000000000000000000000000000000000000085858561046b565b905060005b8151811015610203576101fb858383815181106101ee576101ee610ef1565b6020026020010151610500565b6001016101cf565b505061020f6001600055565b505050565b6060816001600160401b0381111561022e5761022e610f07565b60405190808252806020026020018201604052801561026157816020015b606081526020019060019003908161024c5790505b50905060005b82811015610320576000803086868581811061028557610285610ef1565b90506020028101906102979190610f1d565b6040516102a5929190610f6a565b600060405180830381855af49150503d80600081146102e0576040519150601f19603f3d011682016040523d82523d6000602084013e6102e5565b606091505b5091509150816102f8576102f8816107b9565b8084848151811061030b5761030b610ef1565b60209081029190910101525050600101610267565b5092915050565b61033960405160200161015390610eca565b610341610412565b61034b8282610500565b6103556001600055565b5050565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb906103a79033908690600401610f7a565b602060405180830381865afa1580156103c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e89190610fa8565b61035557338160405163a35b150b60e01b8152600401610409929190610fca565b60405180910390fd5b6002600054036104645760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610409565b6002600055565b6060846001600160a01b031663f069052a610485866107f2565b6040516001600160e01b031960e084901b16815260048101919091526024810186905260448101859052606401600060405180830381865afa1580156104cf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104f79190810190611124565b95945050505050565b600061052c7f000000000000000000000000000000000000000000000000000000000000000083610878565b905060005b81518110156107b357600082828151811061054e5761054e610ef1565b60200260200101519050600073__$9dcb75ef0bb6c4288f2ccffe7dc492c4eb$";

type AutoCancelSyncerConstructorParams =
  | [linkLibraryAddresses: AutoCancelSyncerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutoCancelSyncerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class AutoCancelSyncer__factory extends ContractFactory {
  constructor(...args: AutoCancelSyncerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        AutoCancelSyncer__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: AutoCancelSyncerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\$9dcb75ef0bb6c4288f2ccffe7dc492c4eb\$__", "g"),
      linkLibraryAddresses[
        "contracts/order/OrderStoreUtils.sol:OrderStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AutoCancelSyncer> {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      overrides || {}
    ) as Promise<AutoCancelSyncer>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      overrides || {}
    );
  }
  override attach(address: string): AutoCancelSyncer {
    return super.attach(address) as AutoCancelSyncer;
  }
  override connect(signer: Signer): AutoCancelSyncer__factory {
    return super.connect(signer) as AutoCancelSyncer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoCancelSyncerInterface {
    return new utils.Interface(_abi) as AutoCancelSyncerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoCancelSyncer {
    return new Contract(address, _abi, signerOrProvider) as AutoCancelSyncer;
  }
}

export interface AutoCancelSyncerLibraryAddresses {
  ["contracts/order/OrderStoreUtils.sol:OrderStoreUtils"]: string;
}
