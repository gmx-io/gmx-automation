// @ts-nocheck
 /* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WithdrawalEventUtils,
  WithdrawalEventUtilsInterface,
} from "../../../contracts/withdrawal/WithdrawalEventUtils";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "callbackContract",
                type: "address",
              },
              {
                internalType: "address",
                name: "uiFeeReceiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "longTokenSwapPath",
                type: "address[]",
              },
              {
                internalType: "address[]",
                name: "shortTokenSwapPath",
                type: "address[]",
              },
            ],
            internalType: "struct Withdrawal.Addresses",
            name: "addresses",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "marketTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minLongTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minShortTokenAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "updatedAtTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "executionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callbackGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "srcChainId",
                type: "uint256",
              },
            ],
            internalType: "struct Withdrawal.Numbers",
            name: "numbers",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "shouldUnwrapNativeToken",
                type: "bool",
              },
            ],
            internalType: "struct Withdrawal.Flags",
            name: "flags",
            type: "tuple",
          },
          {
            internalType: "bytes32[]",
            name: "_dataList",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Withdrawal.Props",
        name: "withdrawal",
        type: "tuple",
      },
      {
        internalType: "enum Withdrawal.WithdrawalType",
        name: "withdrawalType",
        type: "Withdrawal.WithdrawalType",
      },
    ],
    name: "createEventData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address",
                    name: "value",
                    type: "address",
                  },
                ],
                internalType: "struct EventUtils.AddressKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "address[]",
                    name: "value",
                    type: "address[]",
                  },
                ],
                internalType: "struct EventUtils.AddressArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.AddressItems",
            name: "addressItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                  },
                ],
                internalType: "struct EventUtils.UintKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "uint256[]",
                    name: "value",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct EventUtils.UintArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.UintItems",
            name: "uintItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256",
                    name: "value",
                    type: "int256",
                  },
                ],
                internalType: "struct EventUtils.IntKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "int256[]",
                    name: "value",
                    type: "int256[]",
                  },
                ],
                internalType: "struct EventUtils.IntArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.IntItems",
            name: "intItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                  },
                ],
                internalType: "struct EventUtils.BoolKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bool[]",
                    name: "value",
                    type: "bool[]",
                  },
                ],
                internalType: "struct EventUtils.BoolArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BoolItems",
            name: "boolItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32",
                    name: "value",
                    type: "bytes32",
                  },
                ],
                internalType: "struct EventUtils.Bytes32KeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes32[]",
                    name: "value",
                    type: "bytes32[]",
                  },
                ],
                internalType: "struct EventUtils.Bytes32ArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.Bytes32Items",
            name: "bytes32Items",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes",
                    name: "value",
                    type: "bytes",
                  },
                ],
                internalType: "struct EventUtils.BytesKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "bytes[]",
                    name: "value",
                    type: "bytes[]",
                  },
                ],
                internalType: "struct EventUtils.BytesArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.BytesItems",
            name: "bytesItems",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "value",
                    type: "string",
                  },
                ],
                internalType: "struct EventUtils.StringKeyValue[]",
                name: "items",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "string",
                    name: "key",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "value",
                    type: "string[]",
                  },
                ],
                internalType: "struct EventUtils.StringArrayKeyValue[]",
                name: "arrayItems",
                type: "tuple[]",
              },
            ],
            internalType: "struct EventUtils.StringItems",
            name: "stringItems",
            type: "tuple",
          },
        ],
        internalType: "struct EventUtils.EventLogData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x611e07610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80631ba5115f1461005b5780634673c40d1461007d5780635ea9a747146100a65780637036c682146100c6575b600080fd5b81801561006757600080fd5b5061007b610076366004610c71565b6100e6565b005b61009061008b36600461105f565b610231565b60405161009d91906116ee565b60405180910390f35b8180156100b257600080fd5b5061007b6100c13660046117be565b610689565b8180156100d257600080fd5b5061007b6100e1366004611882565b610714565b6100ee610b58565b60808101516100fe906001610887565b6040805180820190915260038152626b657960e81b6020820152608082015161012a91600090876108ec565b8051610137906001610887565b6040805180820190915260078152661858d8dbdd5b9d60ca1b60208201528151610164916000908661093f565b6020810151610174906001610887565b6101c060006040518060400160405280600f81526020016e7377617050726963696e675479706560881b8152508460058111156101b3576101b3611946565b60208501519291906108ec565b846001600160a01b03166363d16363856101d98661099c565b846040518463ffffffff1660e01b81526004016101f893929190611ce3565b600060405180830381600087803b15801561021257600080fd5b505af1158015610226573d6000803e3d6000fd5b505050505050505050565b610239610b58565b610241610b58565b805161024e906005610887565b6102866000604051806040016040528060078152602001661858d8dbdd5b9d60ca1b81525061027c87515190565b845192919061093f565b6102b86001604051806040016040528060088152602001673932b1b2b4bb32b960c11b81525061027c87516020015190565b6102f260026040518060400160405280601081526020016f18d85b1b189858dad0dbdb9d1c9858dd60821b81525061027c87516040015190565b6103226003604051806040016040528060068152602001651b585c9ad95d60d21b81525061027c87516080015190565b61035960046040518060400160405280600d81526020016c3ab4a332b2a932b1b2b4bb32b960991b81525061027c87516060015190565b80516103669060026109a8565b6103ab6000604051806040016040528060118152602001700d8dedccea8ded6cadca6eec2e0a0c2e8d607b1b8152506103a1875160a0015190565b8451929190610a12565b6103e76001604051806040016040528060128152602001710e6d0dee4e8a8ded6cadca6eec2e0a0c2e8d60731b8152506103a1875160c0015190565b60208101516103f7906008610887565b6104326000604051806040016040528060118152602001701b585c9ad95d151bdad95b905b5bdd5b9d607a1b8152506101b387602001515190565b6104716001604051806040016040528060128152602001711b5a5b931bdb99d51bdad95b905b5bdd5b9d60721b8152506101b387602090810151015190565b6104b16002604051806040016040528060138152602001721b5a5b94da1bdc9d151bdad95b905b5bdd5b9d606a1b8152506101b387602001516040015190565b6104eb60036040518060400160405280600d81526020016c75706461746564417454696d6560981b8152506101b387602001516060015190565b61052460046040518060400160405280600c81526020016b657865637574696f6e46656560a01b8152506101b387602001516080015190565b61056160056040518060400160405280601081526020016f18d85b1b189858dad1d85cd31a5b5a5d60821b8152506101b3876020015160a0015190565b61059f60066040518060400160405280600e81526020016d7769746864726177616c5479706560901b8152508560028111156101b3576101b3611946565b6105d660076040518060400160405280600a8152602001691cdc98d0da185a5b925960b21b8152506101b3876020015160c0015190565b60608101516105e6906001610887565b61063460006040518060400160405280601781526020017639b437bab6322ab73bb930b82730ba34bb32aa37b5b2b760491b81525061062787604001515190565b6060850151929190610a64565b60808101516106449060016109a8565b61068260006040518060400160405280600881526020016719185d18531a5cdd60c21b815250610675876060015190565b6080850151929190610a12565b9392505050565b60006106958383610231565b60808101519091506106a8906001610887565b6040805180820190915260038152626b657960e81b602082015260808201516106d491600090876108ec565b846001600160a01b03166363d16363856106f56106f087515190565b61099c565b846040518463ffffffff1660e01b81526004016101f893929190611d2b565b61071c610b58565b608081015161072c906001610887565b6040805180820190915260038152626b657960e81b6020820152608082015161075891600090886108ec565b8051610765906001610887565b6040805180820190915260078152661858d8dbdd5b9d60ca1b60208201528151610792916000908761093f565b60c08101516107a2906001610ab9565b6040805180820190915260068152653932b0b9b7b760d11b602082015260c08201516107d19160009086610b1b565b60a08101516107e1906001610ab9565b60408051808201909152600b81526a726561736f6e427974657360a81b602082015260a08201516108159160009085610b1b565b856001600160a01b03166363d163638661082e8761099c565b846040518463ffffffff1660e01b815260040161084d93929190611d72565b600060405180830381600087803b15801561086757600080fd5b505af115801561087b573d6000803e3d6000fd5b50505050505050505050565b806001600160401b0381111561089f5761089f610cc8565b6040519080825280602002602001820160405280156108e557816020015b6040805180820190915260608152600060208201528152602001906001900390816108bd5790505b5090915250565b818460000151848151811061090357610903611dbb565b602002602001015160000181905250808460000151848151811061092957610929611dbb565b6020026020010151602001818152505050505050565b818460000151848151811061095657610956611dbb565b602002602001015160000181905250808460000151848151811061097c5761097c611dbb565b6020908102919091018101516001600160a01b0390921691015250505050565b6001600160a01b031690565b806001600160401b038111156109c0576109c0610cc8565b604051908082528060200260200182016040528015610a0557816020015b60408051808201909152606080825260208201528152602001906001900390816109de5790505b5082602001819052505050565b8184602001518481518110610a2957610a29611dbb565b6020026020010151600001819052508084602001518481518110610a4f57610a4f611dbb565b60200260200101516020018190525050505050565b8184600001518481518110610a7b57610a7b611dbb565b6020026020010151600001819052508084600001518481518110610aa157610aa1611dbb565b60209081029190910181015191151591015250505050565b806001600160401b03811115610ad157610ad1610cc8565b6040519080825280602002602001820160405280156108e557816020015b6040805180820190915260608082526020820152815260200190600190039081610aef57505090915250565b8184600001518481518110610b3257610b32611dbb565b6020026020010151600001819052508084600001518481518110610a4f57610a4f611dbb565b604080516101208101909152606060e0820181815261010083019190915281908152602001610b9a604051806040016040528060608152602001606081525090565b8152602001610bbc604051806040016040528060608152602001606081525090565b8152602001610bde604051806040016040528060608152602001606081525090565b8152602001610c00604051806040016040528060608152602001606081525090565b8152602001610c22604051806040016040528060608152602001606081525090565b8152602001610c44604051806040016040528060608152602001606081525090565b905290565b6001600160a01b0381168114610c5e57600080fd5b50565b8035610c6c81610c49565b919050565b60008060008060808587031215610c8757600080fd5b8435610c9281610c49565b9350602085013592506040850135610ca981610c49565b9150606085013560068110610cbd57600080fd5b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715610d0057610d00610cc8565b60405290565b604051608081016001600160401b0381118282101715610d0057610d00610cc8565b604051601f8201601f191681016001600160401b0381118282101715610d5057610d50610cc8565b604052919050565b60006001600160401b03821115610d7157610d71610cc8565b5060051b60200190565b600082601f830112610d8c57600080fd5b8135610d9f610d9a82610d58565b610d28565b8082825260208201915060208360051b860101925085831115610dc157600080fd5b602085015b83811015610de7578035610dd981610c49565b835260209283019201610dc6565b5095945050505050565b600060e08284031215610e0357600080fd5b610e0b610cde565b823581526020808401359082015260408084013590820152606080840135908201526080808401359082015260a0808401359082015260c0928301359281019290925250919050565b600060208284031215610e6657600080fd5b604051602081016001600160401b0381118282101715610e8857610e88610cc8565b60405290508082358015158114610e9e57600080fd5b905292915050565b600082601f830112610eb757600080fd5b8135610ec5610d9a82610d58565b8082825260208201915060208360051b860101925085831115610ee757600080fd5b602085015b83811015610de7578035835260209283019201610eec565b60006101408284031215610f1757600080fd5b610f1f610d06565b905081356001600160401b03811115610f3757600080fd5b820160e08185031215610f4957600080fd5b610f51610cde565b610f5a82610c61565b8152610f6860208301610c61565b6020820152610f7960408301610c61565b6040820152610f8a60608301610c61565b6060820152610f9b60808301610c61565b608082015260a08201356001600160401b03811115610fb957600080fd5b610fc586828501610d7b565b60a08301525060c08201356001600160401b03811115610fe457600080fd5b610ff086828501610d7b565b60c0830152508252506110068360208401610df1565b6020820152611019836101008401610e54565b60408201526101208201356001600160401b0381111561103857600080fd5b61104484828501610ea6565b60608301525092915050565b803560038110610c6c57600080fd5b6000806040838503121561107257600080fd5b82356001600160401b0381111561108857600080fd5b61109485828601610f04565b9250506110a360208401611050565b90509250929050565b6000815180845260005b818110156110d2576020818501810151868301820152016110b6565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208501945060208160051b8301016020850160005b8381101561119957601f19858403018852815180516040855261113660408601826110ac565b6020928301518682038785015280518083529084019360009350909101905b808310156111805783516001600160a01b031682526020938401936001939093019290910190611155565b5060209a8b019a90955093909301925050600101611110565b50909695505050505050565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561121f57605f1988860301835283518051604087526111f760408801826110ac565b6020928301516001600160a01b031697830197909752509384019392909201916001016111d1565b505050506020830151848203602086015261123a82826110f2565b95945050505050565b600082825180855260208501945060208160051b8301016020850160005b8381101561119957601f19858403018852815180516040855261128760408601826110ac565b6020928301518682038785015280518083529084019360009350909101905b808310156112c957835182526020820191506020840193506001830192506112a6565b5060209a8b019a90955093909301925050600101611261565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561135357605f19888603018352835180516040875261133460408801826110ac565b602092830151978301979097525093840193929092019160010161130e565b505050506020830151848203602086015261123a8282611243565b600082825180855260208501945060208160051b8301016020850160005b8381101561119957601f1985840301885281518051604085526113b260408601826110ac565b6020928301518682038785015280518083529084019360009350909101905b808310156113f6578351151582526020820191506020840193506001830192506113d1565b5060209a8b019a9095509390930192505060010161138c565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561148257605f19888603018352835180516040875261146160408801826110ac565b6020928301511515978301979097525093840193929092019160010161143b565b505050506020830151848203602086015261123a828261136e565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561135357605f1988860301835283518051604087526114ef60408801826110ac565b60209283015197830197909752509384019392909201916001016114c9565b600082825180855260208501945060208160051b8301016020850160005b8381101561119957601f19858403018852815180516040855261155260408601826110ac565b6020928301518682038785015280518083529084019391925081830191600582901b84010160005b828110156115ab57601f198583030184526115968287516110ac565b6020968701969490940193915060010161157a565b50809750505050505060208201915060208801975060018101905061152c565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561164f57605f19888603018352835180516040875261161d60408801826110ac565b905060208201519150868103602088015261163881836110ac565b9650505060209384019392909201916001016115f7565b505050506020830151848203602086015261123a828261150e565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561164f57605f1988860301835283518051604087526116bc60408801826110ac565b90506020820151915086810360208801526116d781836110ac565b965050506020938401939290920191600101611696565b602081526000825160e0602084015261170b6101008401826111a5565b90506020840151601f1984830301604085015261172882826112e2565b9150506040840151601f1984830301606085015261174682826112e2565b9150506060840151601f19848303016080850152611764828261140f565b9150506080840151601f198483030160a0850152611782828261149d565b91505060a0840151601f198483030160c08501526117a082826115cb565b91505060c0840151601f198483030160e085015261123a828261166a565b600080600080608085870312156117d457600080fd5b84356117df81610c49565b93506020850135925060408501356001600160401b0381111561180157600080fd5b61180d87828801610f04565b92505061181c60608601611050565b905092959194509250565b6000806001600160401b0384111561184157611841610cc8565b50601f8301601f191660200161185681610d28565b91505082815283838301111561186b57600080fd5b828260208301376000602084830101529392505050565b600080600080600060a0868803121561189a57600080fd5b85356118a581610c49565b94506020860135935060408601356118bc81610c49565b925060608601356001600160401b038111156118d757600080fd5b8601601f810188136118e857600080fd5b6118f788823560208401611827565b92505060808601356001600160401b0381111561191357600080fd5b86016000601f8201891361192657600080fd5b61193589833560208501611827565b905080925050509295509295909350565b634e487b7160e01b600052602160045260246000fd5b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561121f57605f1988860301835283518051604087526119ae60408801826110ac565b6020928301516001600160a01b03169783019790975250938401939290920191600101611988565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561135357605f198886030183528351805160408752611a2860408801826110ac565b6020928301519783019790975250938401939290920191600101611a02565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561148257605f198886030183528351805160408752611a9960408801826110ac565b60209283015115159783019790975250938401939290920191600101611a73565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561135357605f198886030183528351805160408752611b0c60408801826110ac565b6020928301519783019790975250938401939290920191600101611ae6565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561164f57605f198886030183528351805160408752611b7d60408801826110ac565b9050602082015191508681036020880152611b9881836110ac565b965050506020938401939290920191600101611b57565b60006040830182516040855281815180845260608701915060608160051b880101935060208301925060005b8181101561164f57605f198886030183528351805160408752611c0160408801826110ac565b9050602082015191508681036020880152611c1c81836110ac565b965050506020938401939290920191600101611bdb565b6000815160e08452611c4860e085018261195c565b905060208301518482036020860152611c61828261149d565b91505060408301518482036040860152611c7b82826119d6565b91505060608301518482036060860152611c958282611a47565b91505060808301518482036080860152611caf8282611aba565b91505060a083015184820360a0860152611cc98282611b2b565b91505060c083015184820360c086015261123a8282611baf565b60808152601260808201527115da5d1a191c985dd85b115e1958dd5d195960721b60a082015283602082015282604082015260c06060820152600061123a60c0830184611c33565b60808152601160808201527015da5d1a191c985dd85b10dc99585d1959607a1b60a082015283602082015282604082015260c06060820152600061123a60c0830184611c33565b60808152601360808201527215da5d1a191c985dd85b10d85b98d95b1b1959606a1b60a082015283602082015282604082015260c06060820152600061123a60c0830184611c33565b634e487b7160e01b600052603260045260246000fdfea26469706673582212204cd3ed7bfb28e176827389c5c9b29fc2dc4c21f3b8d9c4d6746dfabc273ad16c64736f6c634300081d0033";

type WithdrawalEventUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalEventUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawalEventUtils__factory extends ContractFactory {
  constructor(...args: WithdrawalEventUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawalEventUtils> {
    return super.deploy(overrides || {}) as Promise<WithdrawalEventUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawalEventUtils {
    return super.attach(address) as WithdrawalEventUtils;
  }
  override connect(signer: Signer): WithdrawalEventUtils__factory {
    return super.connect(signer) as WithdrawalEventUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalEventUtilsInterface {
    return new utils.Interface(_abi) as WithdrawalEventUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawalEventUtils {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WithdrawalEventUtils;
  }
}
